{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport MessageGroupList from './MessageGroupList';\nimport EmojiPicker from './EmojiPicker';\nimport styles from '../styles/Chat.module.css';\nimport defaultAvatar from '../assets/images/different/default-avatar.png';\nimport magnifier from '../assets/images/chat-header/magnifier.png';\nimport phoneReceiver from '../assets/images/chat-header/phone-receiver.png';\nimport threeStripes from '../assets/images/chat-header/three-stripes.png';\nimport smiley from '../assets/images/message-form/smiley.png';\nimport gifImg from '../assets/images/message-form/gif.png';\nimport arrow from '../assets/images/message-form/arrow.png';\nimport microfon from '../assets/images/message-form/microfon.png';\nimport cross from '../assets/images/message-form/cross.png';\nimport GifPicker from './GifPicker';\nimport MediaPreview from './MediaPreview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const {\n    messages,\n    currentUser,\n    companion\n  } = props;\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  const emojiPickerRef = useRef(null);\n  const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\n  const gifPanelRef = useRef(null);\n  const [mediaList, setMediaList] = useState([]);\n  const [message, setMessage] = useState([]);\n  const fileInputRef = useRef(null);\n  const [gifList, setGifList] = useState([]);\n  const [mainEmojis, setMainEmojis] = useState(() => {\n    try {\n      const saved = localStorage.getItem('mainEmojis');\n      return saved ? JSON.parse(saved) : [];\n    } catch (e) {\n      console.error('Failed to load emojis from localStorage:', e);\n      return [];\n    }\n  });\n  const handleImageUpload = event => {\n    if (mediaList.length < 11) {\n      const files = Array.from(event.target.files);\n      const newMedia = files.map((file, index) => ({\n        id: `${Date.now()}_${index}`,\n        type: file.type.startsWith('video') ? 'video' : 'image',\n        src: URL.createObjectURL(file),\n        file\n      }));\n      setMediaList(prev => [...prev, ...newMedia]);\n    }\n  };\n  const handleRemoveMedia = media => {\n    if (media.type === 'selected_gif') {\n      setGifList(prev => prev.filter(gif => gif.id !== media.id));\n    } else {\n      setMediaList(prev => prev.filter(content => content.id !== media.id));\n    }\n  };\n  const handleGifClick = () => {\n    setIsGifPanelOpen(prev => !prev);\n    setIsEmojiPickerOpen(false);\n  };\n  const textareaRef = useRef(null);\n  const handleGifSelect = gifUrl => {\n    if (gifList.length < 11) {\n      const textarea = textareaRef.current;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const value = textarea.value;\n      textarea.value = value.slice(0, start) + gifUrl + value.slice(end);\n      textarea.focus();\n      textarea.selectionStart = textarea.selectionEnd = start + gifUrl.length;\n      const newGif = {\n        id: `${Date.now()}_gif`,\n        type: 'selected_gif',\n        src: gifUrl\n      };\n      setGifList(prev => [...prev, newGif]);\n      setIsGifPanelOpen(false);\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (gifPanelRef.current && !gifPanelRef.current.contains(event.target)) {\n        setIsGifPanelOpen(false);\n      }\n    };\n    if (isGifPanelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isGifPanelOpen]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {\n        setIsEmojiPickerOpen(false);\n      }\n    };\n    if (isEmojiPickerOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEmojiPickerOpen]);\n  const handleInput = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = textarea.scrollHeight + 'px';\n    }\n  };\n  const handleEmojiSelect = emoji => {\n    if (textareaRef.current) {\n      const textarea = textareaRef.current;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const value = textarea.value;\n      textarea.value = value.slice(0, start) + emoji + value.slice(end);\n      textarea.focus();\n      textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\n      handleInput();\n      setMainEmojis(prevMainEmojis => {\n        const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\n        const finalList = newList.slice(0, 44);\n        try {\n          localStorage.setItem('mainEmojis', JSON.stringify(finalList));\n        } catch (e) {\n          console.error('Failed to save emojis to localStorage:', e);\n        }\n        return finalList;\n      });\n    }\n  };\n  const handleEmojiClick = () => {\n    setIsEmojiPickerOpen(prev => !prev);\n  };\n  const [isHovered, setIsHovered] = useState(false);\n  const [isAttached, setIsAttached] = useState(false);\n  const timeoutRef = useRef(null);\n  const handleMouseEnter = () => {\n    clearTimeout(timeoutRef.current);\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    timeoutRef.current = setTimeout(() => {\n      setIsHovered(false);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      onMouseEnter: !isAttached ? handleMouseEnter : null,\n      onMouseLeave: !isAttached ? handleMouseLeave : null,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.headerItem} ${isHovered || isAttached ? styles.visible : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.image,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (companion === null || companion === void 0 ? void 0 : companion.avatar) || defaultAvatar,\n              alt: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.descr,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.name,\n              children: [companion === null || companion === void 0 ? void 0 : companion.firstName, \" \", companion === null || companion === void 0 ? void 0 : companion.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.event,\n              children: companion.event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.images,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: phoneReceiver,\n            alt: \"Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: magnifier,\n            alt: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: threeStripes,\n            alt: \"Additional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageGroupList, {\n      messages: messages,\n      currentUserId: currentUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), (mediaList.length > 0 || gifList.length) && /*#__PURE__*/_jsxDEV(MediaPreview, {\n      mediaList: mediaList,\n      gifList: gifList,\n      onRemove: handleRemoveMedia\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageInputContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"messageInput\",\n        className: styles.messageForm,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          name: \"message\",\n          className: styles.messageInput,\n          autoComplete: \"off\",\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448\\u0435 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\",\n          onInput: handleInput,\n          rows: 1\n          // value={message}\n          ,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messageImages,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleEmojiClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: smiley,\n              alt: \"emoji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), isEmojiPickerOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emojiWrapper,\n            ref: emojiPickerRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emojiContainer,\n              children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n                onSelect: handleEmojiSelect,\n                mainEmojis: mainEmojis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleGifClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: gifImg,\n              alt: \"gif\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), isGifPanelOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emojiWrapper,\n            ref: gifPanelRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emojiContainer,\n              children: /*#__PURE__*/_jsxDEV(GifPicker, {\n                onSelect: handleGifSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              var _fileInputRef$current;\n              return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cross,\n              alt: \"attach media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*,video/*\",\n            multiple: true,\n            ref: fileInputRef,\n            style: {\n              display: 'none'\n            },\n            onChange: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: microfon,\n              alt: \"audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: arrow,\n              alt: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"98ujjpXHeoRyBfC8LhMvKIFQXgs=\");\n_c = Chat;\nexport default _c2 = /*#__PURE__*/React.memo(Chat);\nvar _c, _c2;\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MessageGroupList","EmojiPicker","styles","defaultAvatar","magnifier","phoneReceiver","threeStripes","smiley","gifImg","arrow","microfon","cross","GifPicker","MediaPreview","jsxDEV","_jsxDEV","Chat","props","_s","messages","currentUser","companion","isEmojiPickerOpen","setIsEmojiPickerOpen","emojiPickerRef","isGifPanelOpen","setIsGifPanelOpen","gifPanelRef","mediaList","setMediaList","message","setMessage","fileInputRef","gifList","setGifList","mainEmojis","setMainEmojis","saved","localStorage","getItem","JSON","parse","e","console","error","handleImageUpload","event","length","files","Array","from","target","newMedia","map","file","index","id","Date","now","type","startsWith","src","URL","createObjectURL","prev","handleRemoveMedia","media","filter","gif","content","handleGifClick","textareaRef","handleGifSelect","gifUrl","textarea","current","start","selectionStart","end","selectionEnd","value","slice","focus","newGif","handleClickOutside","contains","document","addEventListener","removeEventListener","handleInput","style","height","scrollHeight","handleEmojiSelect","emoji","prevMainEmojis","newList","finalList","setItem","stringify","handleEmojiClick","isHovered","setIsHovered","isAttached","setIsAttached","timeoutRef","handleMouseEnter","clearTimeout","handleMouseLeave","setTimeout","className","container","children","header","onMouseEnter","onMouseLeave","headerItem","visible","info","image","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","descr","name","firstName","lastName","images","currentUserId","onRemove","messageInputContainer","messageForm","ref","messageInput","autoComplete","placeholder","onInput","rows","onChange","messageImages","onClick","emojiWrapper","emojiContainer","onSelect","_fileInputRef$current","click","accept","multiple","display","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport MessageGroupList from './MessageGroupList';\r\nimport EmojiPicker from './EmojiPicker';\r\nimport styles from '../styles/Chat.module.css';\r\nimport defaultAvatar from '../assets/images/different/default-avatar.png';\r\nimport magnifier from '../assets/images/chat-header/magnifier.png';\r\nimport phoneReceiver from '../assets/images/chat-header/phone-receiver.png';\r\nimport threeStripes from '../assets/images/chat-header/three-stripes.png';\r\nimport smiley from '../assets/images/message-form/smiley.png';\r\nimport gifImg from '../assets/images/message-form/gif.png';\r\nimport arrow from '../assets/images/message-form/arrow.png';\r\nimport microfon from '../assets/images/message-form/microfon.png';\r\nimport cross from '../assets/images/message-form/cross.png';\r\nimport GifPicker from './GifPicker';\r\nimport MediaPreview from './MediaPreview';\r\n\r\nfunction Chat(props) {\r\n    const { messages, currentUser, companion } = props;\r\n    const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\r\n    const emojiPickerRef = useRef(null);\r\n    const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\r\n    const gifPanelRef = useRef(null);\r\n    const [mediaList, setMediaList] = useState([]);\r\n    const [message, setMessage] = useState([]);\r\n    const fileInputRef = useRef(null);\r\n    const [gifList, setGifList] = useState([]);\r\n\r\n\r\n    const [mainEmojis, setMainEmojis] = useState(() => {\r\n        try {\r\n            const saved = localStorage.getItem('mainEmojis');\r\n            return saved ? JSON.parse(saved) : [];\r\n        } catch (e) {\r\n            console.error('Failed to load emojis from localStorage:', e);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const handleImageUpload = (event) => {\r\n        if (mediaList.length < 11) {\r\n            const files = Array.from(event.target.files);\r\n            const newMedia = files.map((file, index) => ({\r\n                id: `${Date.now()}_${index}`,\r\n                type: file.type.startsWith('video') ? 'video' : 'image',\r\n                src: URL.createObjectURL(file),\r\n                file\r\n            }));\r\n            setMediaList((prev) => [...prev, ...newMedia]);\r\n        }\r\n    };\r\n\r\n    const handleRemoveMedia = (media) => {\r\n        if (media.type === 'selected_gif') {\r\n            setGifList((prev) => prev.filter((gif) => gif.id !== media.id));\r\n        }\r\n        else {\r\n            setMediaList((prev) => prev.filter((content) => content.id !== media.id));\r\n        }\r\n    };\r\n\r\n    const handleGifClick = () => {\r\n        setIsGifPanelOpen((prev) => !prev);\r\n        setIsEmojiPickerOpen(false);\r\n    };\r\n\r\n\r\n    const textareaRef = useRef(null);\r\n    const handleGifSelect = (gifUrl) => {\r\n        if (gifList.length < 11) {\r\n            const textarea = textareaRef.current;\r\n            const start = textarea.selectionStart;\r\n            const end = textarea.selectionEnd;\r\n            const value = textarea.value;\r\n            textarea.value = value.slice(0, start) + gifUrl + value.slice(end);\r\n            textarea.focus();\r\n            textarea.selectionStart = textarea.selectionEnd = start + gifUrl.length;\r\n\r\n            const newGif = {\r\n                id: (`${Date.now()}_gif`),\r\n                type: 'selected_gif',\r\n                src: gifUrl\r\n            };\r\n            setGifList((prev) => [...prev, newGif]);\r\n            setIsGifPanelOpen(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                gifPanelRef.current &&\r\n                !gifPanelRef.current.contains(event.target)\r\n            ) {\r\n                setIsGifPanelOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isGifPanelOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isGifPanelOpen]);\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                emojiPickerRef.current &&\r\n                !emojiPickerRef.current.contains(event.target)\r\n            ) {\r\n                setIsEmojiPickerOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isEmojiPickerOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        } else {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isEmojiPickerOpen]);\r\n\r\n    const handleInput = () => {\r\n        const textarea = textareaRef.current;\r\n        if (textarea) {\r\n            textarea.style.height = 'auto';\r\n            textarea.style.height = textarea.scrollHeight + 'px';\r\n        }\r\n    };\r\n\r\n    const handleEmojiSelect = (emoji) => {\r\n        if (textareaRef.current) {\r\n            const textarea = textareaRef.current;\r\n            const start = textarea.selectionStart;\r\n            const end = textarea.selectionEnd;\r\n            const value = textarea.value;\r\n            textarea.value = value.slice(0, start) + emoji + value.slice(end);\r\n            textarea.focus();\r\n            textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\r\n            handleInput();\r\n\r\n            setMainEmojis((prevMainEmojis) => {\r\n                const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\r\n                const finalList = newList.slice(0, 44);\r\n\r\n                try {\r\n                    localStorage.setItem('mainEmojis', JSON.stringify(finalList));\r\n                } catch (e) {\r\n                    console.error('Failed to save emojis to localStorage:', e);\r\n                }\r\n\r\n                return finalList;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleEmojiClick = () => {\r\n        setIsEmojiPickerOpen((prev) => !prev);\r\n    };\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isAttached, setIsAttached] = useState(false);\r\n    const timeoutRef = useRef(null);\r\n\r\n    const handleMouseEnter = () => {\r\n        clearTimeout(timeoutRef.current);\r\n        setIsHovered(true);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        timeoutRef.current = setTimeout(() => {\r\n            setIsHovered(false);\r\n        }, 1500);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div\r\n                className={styles.header}\r\n                onMouseEnter={!isAttached ? handleMouseEnter : null}\r\n                onMouseLeave={!isAttached ? handleMouseLeave : null}\r\n            >\r\n                <div\r\n                    className={`${styles.headerItem} ${isHovered || isAttached ? styles.visible : ''}`}\r\n                >\r\n                    <div className={styles.info}>\r\n                        <div className={styles.image}>\r\n                            <img src={companion?.avatar || defaultAvatar} alt='Avatar' />\r\n                        </div>\r\n                        <div className={styles.descr}>\r\n                            <div className={styles.name}>\r\n                                {companion?.firstName} {companion?.lastName}\r\n                            </div>\r\n                            <div className={styles.event}>\r\n                                {companion.event}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.images}>\r\n                        <img src={phoneReceiver} alt='Call' />\r\n                        <img src={magnifier} alt='Search' />\r\n                        <img src={threeStripes} alt='Additional' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <MessageGroupList messages={messages} currentUserId={currentUser.id} />\r\n\r\n            {(mediaList.length > 0 || gifList.length) && (\r\n                <MediaPreview mediaList={mediaList} gifList={gifList} onRemove={handleRemoveMedia} />\r\n            )}\r\n\r\n            <div className={styles.messageInputContainer}>\r\n                <form name=\"messageInput\" className={styles.messageForm}>\r\n                    <textarea\r\n                        ref={textareaRef}\r\n                        name=\"message\"\r\n                        className={styles.messageInput}\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Напишіть ваше повідомлення\"\r\n                        onInput={handleInput}\r\n                        rows={1}\r\n                        // value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                    />\r\n                    <div className={styles.messageImages}>\r\n                        <button type=\"button\" onClick={handleEmojiClick}>\r\n                            <img src={smiley} alt=\"emoji\" />\r\n                        </button>\r\n                        {isEmojiPickerOpen && (\r\n                            <div className={styles.emojiWrapper} ref={emojiPickerRef}>\r\n                                <div className={styles.emojiContainer}>\r\n                                    <EmojiPicker onSelect={handleEmojiSelect} mainEmojis={mainEmojis} />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <button type=\"button\" onClick={handleGifClick}>\r\n                            <img src={gifImg} alt=\"gif\" />\r\n                        </button>\r\n\r\n                        {isGifPanelOpen && (\r\n                            <div className={styles.emojiWrapper} ref={gifPanelRef}>\r\n                                <div className={styles.emojiContainer}>\r\n                                    <GifPicker onSelect={handleGifSelect} />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        <button type=\"button\" onClick={() => fileInputRef.current?.click()}>\r\n                            <img src={cross} alt=\"attach media\" />\r\n                        </button>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/*,video/*\"\r\n                            multiple\r\n                            ref={fileInputRef}\r\n                            style={{ display: 'none' }}\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                        <button type=\"button\"><img src={microfon} alt=\"audio\" /></button>\r\n                        <button type=\"submit\"><img src={arrow} alt=\"send\" /></button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Chat);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}