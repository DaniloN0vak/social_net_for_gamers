{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport * as signalR from '@microsoft/signalr';\nfunction useChatWebSocket(chatId, onNewMessage) {\n  _s();\n  const connectionRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    if (!chatId) return;\n    const connection = new signalR.HubConnectionBuilder().withUrl(`${process.env.REACT_APP_API_URL}/chatHub?chatId=${chatId}`, {\n      withCredentials: true\n    }).withAutomaticReconnect().build();\n    connectionRef.current = connection;\n    connection.on('ReceiveMessage', msg => {\n      onNewMessage(msg);\n    });\n    async function start() {\n      try {\n        await connection.start();\n        console.log('SignalR connected');\n        setIsConnected(true);\n        await connection.invoke('JoinChatGroup', chatId);\n      } catch (err) {\n        console.error('SignalR error:', err);\n        setIsConnected(false);\n      }\n    }\n    start();\n    return () => {\n      if (connection) {\n        connection.off('ReceiveMessage');\n        connection.stop().then(() => {\n          console.log('SignalR disconnected');\n          setIsConnected(false);\n        }).catch(() => setIsConnected(false));\n      }\n    };\n  }, [chatId, onNewMessage]);\n  return {\n    connectionRef,\n    isConnected\n  };\n}\n_s(useChatWebSocket, \"NLywRWADF6+2nFH8bVFOamI9fOE=\");\nexport default useChatWebSocket;","map":{"version":3,"names":["useEffect","useRef","useState","signalR","useChatWebSocket","chatId","onNewMessage","_s","connectionRef","isConnected","setIsConnected","connection","HubConnectionBuilder","withUrl","process","env","REACT_APP_API_URL","withCredentials","withAutomaticReconnect","build","current","on","msg","start","console","log","invoke","err","error","off","stop","then","catch"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/chat-items/main/components/useChatWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\nfunction useChatWebSocket(chatId, onNewMessage) {\r\n    const connectionRef = useRef(null);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!chatId) return;\r\n\r\n        const connection = new signalR.HubConnectionBuilder()\r\n            .withUrl(`${process.env.REACT_APP_API_URL}/chatHub?chatId=${chatId}`, { withCredentials: true })\r\n            .withAutomaticReconnect()\r\n            .build();\r\n\r\n        connectionRef.current = connection;\r\n\r\n        connection.on('ReceiveMessage', (msg) => {\r\n            onNewMessage(msg);\r\n        });\r\n\r\n        async function start() {\r\n            try {\r\n                await connection.start();\r\n                console.log('SignalR connected');\r\n                setIsConnected(true);\r\n\r\n                await connection.invoke('JoinChatGroup', chatId);\r\n            } catch (err) {\r\n                console.error('SignalR error:', err);\r\n                setIsConnected(false);\r\n            }\r\n        }\r\n\r\n        start();\r\n\r\n        return () => {\r\n            if (connection) {\r\n                connection.off('ReceiveMessage');\r\n                connection.stop()\r\n                    .then(() => {\r\n                        console.log('SignalR disconnected');\r\n                        setIsConnected(false);\r\n                    })\r\n                    .catch(() => setIsConnected(false));\r\n            }\r\n        };\r\n    }, [chatId, onNewMessage]);\r\n\r\n    return { connectionRef, isConnected };\r\n}\r\n\r\nexport default useChatWebSocket;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAE7C,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,YAAY,EAAE;EAAAC,EAAA;EAC5C,MAAMC,aAAa,GAAGP,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErDF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACK,MAAM,EAAE;IAEb,MAAMM,UAAU,GAAG,IAAIR,OAAO,CAACS,oBAAoB,CAAC,CAAC,CAChDC,OAAO,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,mBAAmBX,MAAM,EAAE,EAAE;MAAEY,eAAe,EAAE;IAAK,CAAC,CAAC,CAC/FC,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;IAEZX,aAAa,CAACY,OAAO,GAAGT,UAAU;IAElCA,UAAU,CAACU,EAAE,CAAC,gBAAgB,EAAGC,GAAG,IAAK;MACrChB,YAAY,CAACgB,GAAG,CAAC;IACrB,CAAC,CAAC;IAEF,eAAeC,KAAKA,CAAA,EAAG;MACnB,IAAI;QACA,MAAMZ,UAAU,CAACY,KAAK,CAAC,CAAC;QACxBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChCf,cAAc,CAAC,IAAI,CAAC;QAEpB,MAAMC,UAAU,CAACe,MAAM,CAAC,eAAe,EAAErB,MAAM,CAAC;MACpD,CAAC,CAAC,OAAOsB,GAAG,EAAE;QACVH,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAED,GAAG,CAAC;QACpCjB,cAAc,CAAC,KAAK,CAAC;MACzB;IACJ;IAEAa,KAAK,CAAC,CAAC;IAEP,OAAO,MAAM;MACT,IAAIZ,UAAU,EAAE;QACZA,UAAU,CAACkB,GAAG,CAAC,gBAAgB,CAAC;QAChClB,UAAU,CAACmB,IAAI,CAAC,CAAC,CACZC,IAAI,CAAC,MAAM;UACRP,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACnCf,cAAc,CAAC,KAAK,CAAC;QACzB,CAAC,CAAC,CACDsB,KAAK,CAAC,MAAMtB,cAAc,CAAC,KAAK,CAAC,CAAC;MAC3C;IACJ,CAAC;EACL,CAAC,EAAE,CAACL,MAAM,EAAEC,YAAY,CAAC,CAAC;EAE1B,OAAO;IAAEE,aAAa;IAAEC;EAAY,CAAC;AACzC;AAACF,EAAA,CA/CQH,gBAAgB;AAiDzB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}