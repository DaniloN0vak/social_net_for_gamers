{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\audio-recorder\\\\AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styles from './AudioRecorder.module.css';\nimport AudioControls from './AudioControls';\nimport AudioPreview from './AudioPreview';\nimport AudioTimer from './AudioTimer';\nimport microfon from '../../../assets/images/message-form/microfon.png';\nimport microfonSelected from '../../../assets/images/message-form/microfon-selected.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioRecorder({\n  audioRecordingControl,\n  onSend\n}) {\n  _s();\n  const [isRecorderOpen, setIsRecorderOpen] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [audioSrc, setAudioSrc] = useState(null);\n  const [previewReady, setPreviewReady] = useState(false);\n  const chunks = useRef([]);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    if (isRecording && !isPaused) {\n      intervalRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isRecording, isPaused]);\n  const startRecording = async () => {\n    if (!isRecorderOpen) {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      recorder.start();\n      setIsRecording(true);\n      setIsRecorderOpen(true);\n      recorder.ondataavailable = e => chunks.current.push(e.data);\n      recorder.onstop = () => {\n        const blob = new Blob(chunks.current, {\n          type: 'audio/webm'\n        });\n        const url = URL.createObjectURL(blob);\n        setAudioSrc(url);\n        setPreviewReady(true);\n      };\n    } else {\n      handleCancel();\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n      setIsRecording(false);\n      setIsPaused(false);\n    }\n  };\n  const pauseRecording = () => {\n    mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.pause();\n    setIsPaused(true);\n  };\n  const resumeRecording = () => {\n    mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.resume();\n    setIsPaused(false);\n  };\n  const handleSend = async () => {\n    const response = await fetch(audioSrc);\n    const blob = await response.blob();\n    const file = new File([blob], 'audio-message.webm', {\n      type: blob.type\n    });\n    audioRecordingControl.setAudio({\n      type: file.type,\n      name: file.name,\n      id: 'audio_' + Date.now(),\n      file: file,\n      size: file.size,\n      src: audioSrc\n    });\n    setPreviewReady(false);\n    setAudioSrc(null);\n    setIsRecorderOpen(false);\n    setRecordingTime(0);\n    onSend();\n  };\n  const handleCancel = () => {\n    setPreviewReady(false);\n    setAudioSrc(null);\n    chunks.current = [];\n    setRecordingTime(0);\n    setIsRecorderOpen(false);\n    setIsRecording(false);\n    audioRecordingControl.setAudio({});\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: startRecording,\n      children: isRecorderOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: microfonSelected,\n        alt: \"stop audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: microfon,\n        alt: \"record audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), isRecorderOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal,\n      children: [isRecording && !previewReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(AudioControls, {\n          isPaused: isPaused,\n          pauseRecording: pauseRecording,\n          resumeRecording: resumeRecording,\n          stopRecording: stopRecording,\n          cancelRecording: handleCancel,\n          onSend: handleSend,\n          children: /*#__PURE__*/_jsxDEV(AudioTimer, {\n            isPaused: isPaused,\n            time: recordingTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)\n      }, void 0, false), previewReady && /*#__PURE__*/_jsxDEV(AudioPreview, {\n        audioSrc: audioSrc,\n        onCancel: handleCancel,\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioRecorder, \"yUgMmqp22urxPDXSoI8NaVhYn5o=\");\n_c = AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styles","AudioControls","AudioPreview","AudioTimer","microfon","microfonSelected","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioRecorder","audioRecordingControl","onSend","_s","isRecorderOpen","setIsRecorderOpen","isRecording","setIsRecording","isPaused","setIsPaused","mediaRecorder","setMediaRecorder","recordingTime","setRecordingTime","audioSrc","setAudioSrc","previewReady","setPreviewReady","chunks","intervalRef","current","setInterval","prev","clearInterval","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","start","ondataavailable","e","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","handleCancel","stopRecording","stop","pauseRecording","pause","resumeRecording","resume","handleSend","response","fetch","file","File","setAudio","name","id","Date","now","size","src","children","onClick","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","modal","cancelRecording","time","onCancel","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/audio-recorder/AudioRecorder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport styles from './AudioRecorder.module.css';\r\nimport AudioControls from './AudioControls';\r\nimport AudioPreview from './AudioPreview';\r\nimport AudioTimer from './AudioTimer';\r\nimport microfon from '../../../assets/images/message-form/microfon.png';\r\nimport microfonSelected from '../../../assets/images/message-form/microfon-selected.png';\r\n\r\nexport default function AudioRecorder({ audioRecordingControl, onSend }) {\r\n    const [isRecorderOpen, setIsRecorderOpen] = useState(false);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [recordingTime, setRecordingTime] = useState(0);\r\n    const [audioSrc, setAudioSrc] = useState(null);\r\n    const [previewReady, setPreviewReady] = useState(false);\r\n    const chunks = useRef([]);\r\n    const intervalRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (isRecording && !isPaused) {\r\n            intervalRef.current = setInterval(() => {\r\n                setRecordingTime(prev => prev + 1);\r\n            }, 1000);\r\n        } else {\r\n            clearInterval(intervalRef.current);\r\n        }\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [isRecording, isPaused]);\r\n\r\n    const startRecording = async () => {\r\n        if (!isRecorderOpen) {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            const recorder = new MediaRecorder(stream);\r\n            setMediaRecorder(recorder);\r\n            recorder.start();\r\n            setIsRecording(true);\r\n            setIsRecorderOpen(true);\r\n\r\n            recorder.ondataavailable = e => chunks.current.push(e.data);\r\n            recorder.onstop = () => {\r\n                const blob = new Blob(chunks.current, { type: 'audio/webm' });\r\n                const url = URL.createObjectURL(blob);\r\n                setAudioSrc(url);\r\n                setPreviewReady(true);\r\n            };\r\n        }\r\n        else {\r\n            handleCancel();\r\n        }\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.stop();\r\n            setIsRecording(false);\r\n            setIsPaused(false);\r\n        }\r\n    };\r\n\r\n    const pauseRecording = () => {\r\n        mediaRecorder?.pause();\r\n        setIsPaused(true);\r\n    };\r\n\r\n    const resumeRecording = () => {\r\n        mediaRecorder?.resume();\r\n        setIsPaused(false);\r\n    };\r\n\r\n    const handleSend = async () => {\r\n        const response = await fetch(audioSrc);\r\n        const blob = await response.blob();\r\n        const file = new File([blob], 'audio-message.webm', { type: blob.type });\r\n        audioRecordingControl.setAudio({\r\n            type: file.type,\r\n            name: file.name,\r\n            id: 'audio_' + Date.now(),\r\n            file: file,\r\n            size: file.size,\r\n            src: audioSrc\r\n        });\r\n        setPreviewReady(false);\r\n        setAudioSrc(null);\r\n        setIsRecorderOpen(false);\r\n        setRecordingTime(0);\r\n        onSend();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setPreviewReady(false);\r\n        setAudioSrc(null);\r\n        chunks.current = [];\r\n        setRecordingTime(0);\r\n        setIsRecorderOpen(false);\r\n        setIsRecording(false);\r\n        audioRecordingControl.setAudio({});\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <button type='button' onClick={startRecording}>\r\n                {isRecorderOpen ?\r\n                    (<img src={microfonSelected} alt='stop audio' />)\r\n                    :\r\n                    (<img src={microfon} alt='record audio' />)\r\n                }\r\n            </button>\r\n\r\n            {isRecorderOpen &&\r\n                (<div className={styles.modal}>\r\n                    {isRecording && !previewReady && (\r\n                        <>\r\n                            <AudioControls\r\n                                isPaused={isPaused}\r\n                                pauseRecording={pauseRecording}\r\n                                resumeRecording={resumeRecording}\r\n                                stopRecording={stopRecording}\r\n                                cancelRecording={handleCancel}\r\n                                onSend={handleSend}\r\n                            ><AudioTimer isPaused={isPaused} time={recordingTime} /></AudioControls>\r\n                        </>\r\n                    )}\r\n\r\n                    {previewReady && (\r\n                        <AudioPreview\r\n                            audioSrc={audioSrc}\r\n                            onCancel={handleCancel}\r\n                            onSend={handleSend}\r\n                        />\r\n                    )}\r\n                </div>)\r\n            }\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}