{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\custom-audio-player\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styles from './CustomAudioPlayer.module.css';\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\nimport play from '../../../assets/images/custom-audio-player/play.png';\nimport AudioTimer from '../audio-recorder/AudioTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s();\n  var _audioRef$current$dur;\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const onLoadedMetadata = () => {\n    const audio = audioRef.current;\n    if (audio && !isNaN(audio.duration)) {\n      setDuration(audio.duration);\n    }\n  };\n  const onTimeUpdate = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    const ct = isNaN(audio.currentTime) ? 0 : audio.currentTime;\n    setCurrentTime(ct);\n  };\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    if (audio.paused) {\n      audio.play();\n      setIsPlaying(true);\n    } else {\n      audio.pause();\n      setIsPlaying(false);\n    }\n  };\n  const onProgressClick = e => {\n    const audio = audioRef.current;\n    if (!audio || duration <= 0) return;\n    const {\n      left,\n      width\n    } = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - left;\n    const ratio = clickX / width;\n    audio.currentTime = ratio * audio.duration;\n    setCurrentTime(audio.currentTime);\n  };\n  useEffect(() => {\n    setIsPlaying(false);\n    setDuration(0);\n    setCurrentTime(0);\n  }, [src]);\n  const progressPercent = ((_audioRef$current$dur = audioRef.current.duration) !== null && _audioRef$current$dur !== void 0 ? _audioRef$current$dur : audioRef.current.duration > 0) ? currentTime / audioRef.current.duration * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      preload: \"metadata\",\n      onLoadedMetadata: onLoadedMetadata,\n      onTimeUpdate: onTimeUpdate,\n      onEnded: () => setIsPlaying(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: togglePlay,\n      className: styles.playButton,\n      \"aria-label\": isPlaying ? 'Pause' : 'Play',\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pause,\n        alt: \"Pause\",\n        className: styles.play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: play,\n        alt: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": duration,\n      \"aria-valuenow\": currentTime,\n      tabIndex: 0,\n      onClick: onProgressClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${progressPercent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioTimer, {\n      isPaused: !isPlaying,\n      time: currentTime,\n      withDot: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomAudioPlayer, \"bIS3YH/tKYRQovj45Ca7AV8mrP4=\");\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styles","pause","play","AudioTimer","jsxDEV","_jsxDEV","CustomAudioPlayer","src","_s","_audioRef$current$dur","audioRef","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","onLoadedMetadata","audio","current","isNaN","onTimeUpdate","ct","togglePlay","paused","onProgressClick","e","left","width","currentTarget","getBoundingClientRect","clickX","clientX","ratio","progressPercent","className","audioPlayer","children","ref","preload","onEnded","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","playButton","alt","progressBar","role","tabIndex","progress","style","isPaused","time","withDot","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/custom-audio-player/CustomAudioPlayer.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport styles from './CustomAudioPlayer.module.css';\r\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\r\nimport play from '../../../assets/images/custom-audio-player/play.png';\r\nimport AudioTimer from '../audio-recorder/AudioTimer';\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n  const audioRef = useRef(null);\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [duration, setDuration]   = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  const onLoadedMetadata = () => {\r\n    const audio = audioRef.current;\r\n    if (audio && !isNaN(audio.duration)) {\r\n      setDuration(audio.duration);\r\n    }\r\n  };\r\n\r\n  const onTimeUpdate = () => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n    const ct = isNaN(audio.currentTime) ? 0 : audio.currentTime;\r\n    setCurrentTime(ct);\r\n  };\r\n\r\n  const togglePlay = () => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n    if (audio.paused) {\r\n      audio.play();\r\n      setIsPlaying(true);\r\n    } else {\r\n      audio.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const onProgressClick = e => {\r\n    const audio = audioRef.current;\r\n    if (!audio || duration <= 0) return;\r\n\r\n    const { left, width } = e.currentTarget.getBoundingClientRect();\r\n    const clickX = e.clientX - left;\r\n    const ratio = clickX / width;\r\n    audio.currentTime = ratio * audio.duration;\r\n    setCurrentTime(audio.currentTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsPlaying(false);\r\n    setDuration(0);\r\n    setCurrentTime(0);\r\n  }, [src]);\r\n\r\n  const progressPercent = audioRef.current.duration ?? audioRef.current.duration > 0\r\n    ? (currentTime / audioRef.current.duration) * 100\r\n    : 0;\r\n\r\n  return (\r\n    <div className={styles.audioPlayer}>\r\n      <audio\r\n        ref={audioRef}\r\n        src={src}\r\n        preload=\"metadata\"\r\n        onLoadedMetadata={onLoadedMetadata}\r\n        onTimeUpdate={onTimeUpdate}\r\n        onEnded={() => setIsPlaying(false)}\r\n      />\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={togglePlay}\r\n        className={styles.playButton}\r\n        aria-label={isPlaying ? 'Pause' : 'Play'}\r\n      >\r\n        {isPlaying\r\n          ? <img src={pause} alt=\"Pause\" className={styles.play} />\r\n          : <img src={play} alt=\"Play\" />}\r\n      </button>\r\n\r\n      <div\r\n        className={styles.progressBar}\r\n        role=\"progressbar\"\r\n        aria-valuemin={0}\r\n        aria-valuemax={duration}\r\n        aria-valuenow={currentTime}\r\n        tabIndex={0}\r\n        onClick={onProgressClick}\r\n      >\r\n        <div\r\n          className={styles.progress}\r\n          style={{ width: `${progressPercent}%` }}\r\n        />\r\n      </div>\r\n\r\n      <AudioTimer\r\n        isPaused={!isPlaying}\r\n        time={currentTime}\r\n        withDot={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}