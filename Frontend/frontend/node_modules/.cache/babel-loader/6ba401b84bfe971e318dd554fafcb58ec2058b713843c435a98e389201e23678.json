{"ast":null,"code":"import { sendMessage } from \"../api/chatApi\";\nasync function gifToFile(src) {\n  try {\n    const response = await fetch(src);\n    const blob = await response.blob();\n    return new File([blob], 'gif.gif', {\n      type: blob.type\n    });\n  } catch (err) {\n    console.error('Ошибка при загрузке gif:', err);\n    return null;\n  }\n}\nexport async function send(chatId, userId, content = \"\", media = [], audio = null, gifUrl = \"\") {\n  const formData = new FormData();\n  formData.append(\"content\", content);\n  formData.append(\"userId\", userId);\n  console.log(media);\n  media.forEach((item, index) => {\n    formData.append(`media[${index}].file`, item.file);\n    formData.append(`media[${index}].isBloored`, item.isBloored);\n    formData.append(`media[${index}].name`, item.name);\n    formData.append(`media[${index}].type`, item.type);\n  });\n  console.log(audio);\n  if (audio) {\n    const index = media.length;\n    formData.append(`media[${index}].file`, audio.file);\n    formData.append(`media[${index}].isBloored`, false);\n    formData.append(`media[${index}].name`, audio.name);\n    formData.append(`media[${index}].type`, audio.type);\n  }\n  if (gifUrl) {\n    const gifFile = await gifToFile(gifUrl);\n    if (gifFile) {\n      const index = media.length + (audio ? 1 : 0);\n      formData.append(`media[${index}].file`, gifFile);\n      formData.append(`media[${index}].isBloored`, false);\n      formData.append(`media[${index}].name`, gifFile.name);\n      formData.append(`media[${index}].type`, gifFile.type);\n    }\n  }\n  try {\n    const response = await sendMessage(chatId, formData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Ошибка при отправке сообщения:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["sendMessage","gifToFile","src","response","fetch","blob","File","type","err","console","error","send","chatId","userId","content","media","audio","gifUrl","formData","FormData","append","log","forEach","item","index","file","isBloored","name","length","gifFile","data"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/hooks/apiService.js"],"sourcesContent":["import { sendMessage } from \"../api/chatApi\";\r\n\r\nasync function gifToFile(src) {\r\n  try {\r\n    const response = await fetch(src);\r\n    const blob = await response.blob();\r\n    return new File([blob], 'gif.gif', { type: blob.type });\r\n  } catch (err) {\r\n    console.error('Ошибка при загрузке gif:', err);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function send(chatId, userId, content = \"\", media = [], audio = null, gifUrl = \"\") {\r\n  const formData = new FormData();\r\n  formData.append(\"content\", content);\r\n  formData.append(\"userId\", userId);\r\n\r\n  console.log(media);\r\n\r\n  media.forEach((item, index) => {\r\n    formData.append(`media[${index}].file`, item.file);\r\n    formData.append(`media[${index}].isBloored`, item.isBloored);\r\n    formData.append(`media[${index}].name`, item.name);\r\n    formData.append(`media[${index}].type`, item.type);\r\n  });\r\n\r\n  console.log(audio);\r\n\r\n  if (audio) {\r\n    const index = media.length;\r\n    formData.append(`media[${index}].file`, audio.file);\r\n    formData.append(`media[${index}].isBloored`, false);\r\n    formData.append(`media[${index}].name`, audio.name);\r\n    formData.append(`media[${index}].type`, audio.type);\r\n  }\r\n\r\n  if (gifUrl) {\r\n    const gifFile = await gifToFile(gifUrl);\r\n    if (gifFile) {\r\n      const index = media.length + (audio ? 1 : 0);\r\n      formData.append(`media[${index}].file`, gifFile);\r\n      formData.append(`media[${index}].isBloored`, false);\r\n      formData.append(`media[${index}].name`, gifFile.name);\r\n      formData.append(`media[${index}].type`, gifFile.type);\r\n    }\r\n  }\r\n\r\n  try {\r\n    const response = await sendMessage(chatId, formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Ошибка при отправке сообщения:\", error);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}