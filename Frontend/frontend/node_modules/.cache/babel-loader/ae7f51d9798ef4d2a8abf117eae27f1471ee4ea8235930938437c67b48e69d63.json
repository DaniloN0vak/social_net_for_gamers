{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport MessageGroupList from './MessageGroupList';\nimport EmojiPicker from './EmojiPicker';\nimport styles from '../styles/Chat.module.css';\nimport defaultAvatar from '../assets/images/different/default-avatar.png';\nimport magnifier from '../assets/images/chat-header/magnifier.png';\nimport phoneReceiver from '../assets/images/chat-header/phone-receiver.png';\nimport threeStripes from '../assets/images/chat-header/three-stripes.png';\nimport smiley from '../assets/images/message-form/smiley.png';\nimport gifImg from '../assets/images/message-form/gif.png';\nimport arrow from '../assets/images/message-form/arrow.png';\nimport microfon from '../assets/images/message-form/microfon.png';\nimport cross from '../assets/images/message-form/cross.png';\nimport GifPicker from './GifPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const {\n    messages,\n    currentUser,\n    companion\n  } = props;\n  const emojiPickerRef = useRef(null);\n  const gifPanelRef = useRef(null);\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\n  const [mainEmojis, setMainEmojis] = useState(() => {\n    try {\n      const saved = localStorage.getItem('mainEmojis');\n      return saved ? JSON.parse(saved) : [];\n    } catch (e) {\n      console.error('Failed to load emojis from localStorage:', e);\n      return [];\n    }\n  });\n  const [selectedGifs, setSelectedGifs] = useState([]);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const textareaRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const handleGifSelect = gifUrl => {\n    if (textareaRef.current) {\n      const textarea = textareaRef.current;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const value = textarea.value;\n      textarea.value = value.slice(0, start) + gifUrl + value.slice(end);\n      textarea.focus();\n      textarea.selectionStart = textarea.selectionEnd = start + gifUrl.length;\n      handleInput();\n    }\n    setSelectedGifs(prev => [...prev, gifUrl]);\n    setIsGifPanelOpen(false);\n  };\n  const handleGifClick = () => {\n    setIsGifPanelOpen(prev => !prev);\n    setIsEmojiPickerOpen(false);\n  };\n  const handleImageAttachClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleImageUpload = event => {\n    const files = Array.from(event.target.files);\n    setSelectedImages(prev => [...prev, ...files]);\n  };\n  const renderImagePreviews = () => {\n    return selectedImages.map((file, idx) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: URL.createObjectURL(file),\n      alt: \"preview\",\n      className: styles.previewImage\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this));\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (gifPanelRef.current && !gifPanelRef.current.contains(event.target)) {\n        setIsGifPanelOpen(false);\n      }\n    };\n    if (isGifPanelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isGifPanelOpen]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {\n        setIsEmojiPickerOpen(false);\n      }\n    };\n    if (isEmojiPickerOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEmojiPickerOpen]);\n  const handleInput = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = textarea.scrollHeight + 'px';\n    }\n  };\n  const handleEmojiSelect = emoji => {\n    if (textareaRef.current) {\n      const textarea = textareaRef.current;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const value = textarea.value;\n      textarea.value = value.slice(0, start) + emoji + value.slice(end);\n      textarea.focus();\n      textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\n      handleInput();\n      setMainEmojis(prevMainEmojis => {\n        const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\n        const finalList = newList.slice(0, 44);\n        try {\n          localStorage.setItem('mainEmojis', JSON.stringify(finalList));\n        } catch (e) {\n          console.error('Failed to save emojis to localStorage:', e);\n        }\n        return finalList;\n      });\n    }\n  };\n  const handleEmojiClick = () => {\n    setIsEmojiPickerOpen(prev => !prev);\n  };\n  const [isHovered, setIsHovered] = useState(false);\n  const [isAttached, setIsAttached] = useState(false);\n  const timeoutRef = useRef(null);\n  const handleMouseEnter = () => {\n    clearTimeout(timeoutRef.current);\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    timeoutRef.current = setTimeout(() => {\n      setIsHovered(false);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      onMouseEnter: !isAttached ? handleMouseEnter : null,\n      onMouseLeave: !isAttached ? handleMouseLeave : null,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.headerItem} ${isHovered || isAttached ? styles.visible : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.image,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (companion === null || companion === void 0 ? void 0 : companion.avatart) || defaultAvatar,\n              alt: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.descr,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.name,\n              children: [companion === null || companion === void 0 ? void 0 : companion.firstName, \" \", companion === null || companion === void 0 ? void 0 : companion.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.event,\n              children: companion.event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.images,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: phoneReceiver,\n            alt: \"Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: magnifier,\n            alt: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: threeStripes,\n            alt: \"Additional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageGroupList, {\n      messages: messages,\n      currentUserId: currentUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), selectedImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.previewContainer,\n      children: renderImagePreviews()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageInputContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"messageInput\",\n        className: styles.messageForm,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          name: \"message\",\n          className: styles.messageInput,\n          autoComplete: \"off\",\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448\\u0435 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\",\n          onInput: handleInput,\n          rows: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messageImages,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleEmojiClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: smiley,\n              alt: \"emoji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), isEmojiPickerOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emojiWrapper,\n            ref: emojiPickerRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emojiContainer,\n              children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n                onSelect: handleEmojiSelect,\n                mainEmojis: mainEmojis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleGifClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: gifImg,\n              alt: \"gif\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), isGifPanelOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emojiWrapper,\n            ref: gifPanelRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emojiContainer,\n              children: /*#__PURE__*/_jsxDEV(GifPicker, {\n                onSelect: handleGifSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleImageAttachClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cross,\n              alt: \"attach image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            multiple: true,\n            ref: fileInputRef,\n            style: {\n              display: 'none'\n            },\n            onChange: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: microfon,\n              alt: \"audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: arrow,\n              alt: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"RrsXURn9r0z1t2us3sG3S6MhWhc=\");\n_c = Chat;\nexport default _c2 = /*#__PURE__*/React.memo(Chat);\nvar _c, _c2;\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MessageGroupList","EmojiPicker","styles","defaultAvatar","magnifier","phoneReceiver","threeStripes","smiley","gifImg","arrow","microfon","cross","GifPicker","jsxDEV","_jsxDEV","Chat","props","_s","messages","currentUser","companion","emojiPickerRef","gifPanelRef","isEmojiPickerOpen","setIsEmojiPickerOpen","isGifPanelOpen","setIsGifPanelOpen","mainEmojis","setMainEmojis","saved","localStorage","getItem","JSON","parse","e","console","error","selectedGifs","setSelectedGifs","selectedImages","setSelectedImages","textareaRef","fileInputRef","handleGifSelect","gifUrl","current","textarea","start","selectionStart","end","selectionEnd","value","slice","focus","length","handleInput","prev","handleGifClick","handleImageAttachClick","_fileInputRef$current","click","handleImageUpload","event","files","Array","from","target","renderImagePreviews","map","file","idx","src","URL","createObjectURL","alt","className","previewImage","fileName","_jsxFileName","lineNumber","columnNumber","handleClickOutside","contains","document","addEventListener","removeEventListener","style","height","scrollHeight","handleEmojiSelect","emoji","prevMainEmojis","newList","filter","finalList","setItem","stringify","handleEmojiClick","isHovered","setIsHovered","isAttached","setIsAttached","timeoutRef","handleMouseEnter","clearTimeout","handleMouseLeave","setTimeout","container","children","header","onMouseEnter","onMouseLeave","headerItem","visible","info","image","avatart","descr","name","firstName","lastName","images","currentUserId","id","previewContainer","messageInputContainer","messageForm","ref","messageInput","autoComplete","placeholder","onInput","rows","messageImages","type","onClick","emojiWrapper","emojiContainer","onSelect","accept","multiple","display","onChange","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport MessageGroupList from './MessageGroupList';\r\nimport EmojiPicker from './EmojiPicker';\r\nimport styles from '../styles/Chat.module.css';\r\nimport defaultAvatar from '../assets/images/different/default-avatar.png';\r\nimport magnifier from '../assets/images/chat-header/magnifier.png';\r\nimport phoneReceiver from '../assets/images/chat-header/phone-receiver.png';\r\nimport threeStripes from '../assets/images/chat-header/three-stripes.png';\r\nimport smiley from '../assets/images/message-form/smiley.png';\r\nimport gifImg from '../assets/images/message-form/gif.png';\r\nimport arrow from '../assets/images/message-form/arrow.png';\r\nimport microfon from '../assets/images/message-form/microfon.png';\r\nimport cross from '../assets/images/message-form/cross.png';\r\nimport GifPicker from './GifPicker';\r\n\r\nfunction Chat(props) {\r\n    const { messages, currentUser, companion } = props;\r\n    const emojiPickerRef = useRef(null);\r\n    const gifPanelRef = useRef(null);\r\n\r\n    const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\r\n    const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\r\n    const [mainEmojis, setMainEmojis] = useState(() => {\r\n        try {\r\n            const saved = localStorage.getItem('mainEmojis');\r\n            return saved ? JSON.parse(saved) : [];\r\n        } catch (e) {\r\n            console.error('Failed to load emojis from localStorage:', e);\r\n            return [];\r\n        }\r\n    });\r\n    const [selectedGifs, setSelectedGifs] = useState([]);\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const textareaRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n\r\n    const handleGifSelect = (gifUrl) => {\r\n        if (textareaRef.current) {\r\n            const textarea = textareaRef.current;\r\n            const start = textarea.selectionStart;\r\n            const end = textarea.selectionEnd;\r\n            const value = textarea.value;\r\n            textarea.value = value.slice(0, start) + gifUrl + value.slice(end);\r\n            textarea.focus();\r\n            textarea.selectionStart = textarea.selectionEnd = start + gifUrl.length;\r\n            handleInput();\r\n        }\r\n\r\n        setSelectedGifs((prev) => [...prev, gifUrl]);\r\n        setIsGifPanelOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const handleGifClick = () => {\r\n        setIsGifPanelOpen((prev) => !prev);\r\n        setIsEmojiPickerOpen(false);\r\n    };\r\n\r\n    const handleImageAttachClick = () => {\r\n        fileInputRef.current?.click();\r\n    };\r\n\r\n    const handleImageUpload = (event) => {\r\n        const files = Array.from(event.target.files);\r\n        setSelectedImages(prev => [...prev, ...files]);\r\n    };\r\n\r\n    const renderImagePreviews = () => {\r\n        return selectedImages.map((file, idx) => (\r\n            <img\r\n                key={idx}\r\n                src={URL.createObjectURL(file)}\r\n                alt=\"preview\"\r\n                className={styles.previewImage}\r\n            />\r\n        ));\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                gifPanelRef.current &&\r\n                !gifPanelRef.current.contains(event.target)\r\n            ) {\r\n                setIsGifPanelOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isGifPanelOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isGifPanelOpen]);\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                emojiPickerRef.current &&\r\n                !emojiPickerRef.current.contains(event.target)\r\n            ) {\r\n                setIsEmojiPickerOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isEmojiPickerOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        } else {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isEmojiPickerOpen]);\r\n\r\n    const handleInput = () => {\r\n        const textarea = textareaRef.current;\r\n        if (textarea) {\r\n            textarea.style.height = 'auto';\r\n            textarea.style.height = textarea.scrollHeight + 'px';\r\n        }\r\n    };\r\n\r\n    const handleEmojiSelect = (emoji) => {\r\n        if (textareaRef.current) {\r\n            const textarea = textareaRef.current;\r\n            const start = textarea.selectionStart;\r\n            const end = textarea.selectionEnd;\r\n            const value = textarea.value;\r\n            textarea.value = value.slice(0, start) + emoji + value.slice(end);\r\n            textarea.focus();\r\n            textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\r\n            handleInput();\r\n\r\n            setMainEmojis((prevMainEmojis) => {\r\n                const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\r\n                const finalList = newList.slice(0, 44);\r\n\r\n                try {\r\n                    localStorage.setItem('mainEmojis', JSON.stringify(finalList));\r\n                } catch (e) {\r\n                    console.error('Failed to save emojis to localStorage:', e);\r\n                }\r\n\r\n                return finalList;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleEmojiClick = () => {\r\n        setIsEmojiPickerOpen((prev) => !prev);\r\n    };\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isAttached, setIsAttached] = useState(false);\r\n    const timeoutRef = useRef(null);\r\n\r\n    const handleMouseEnter = () => {\r\n        clearTimeout(timeoutRef.current);\r\n        setIsHovered(true);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        timeoutRef.current = setTimeout(() => {\r\n            setIsHovered(false);\r\n        }, 1500);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div\r\n                className={styles.header}\r\n                onMouseEnter={!isAttached ? handleMouseEnter : null}\r\n                onMouseLeave={!isAttached ? handleMouseLeave : null}\r\n            >\r\n                <div\r\n                    className={`${styles.headerItem} ${isHovered || isAttached ? styles.visible : ''}`}\r\n                >\r\n                    <div className={styles.info}>\r\n                        <div className={styles.image}>\r\n                            <img src={companion?.avatart || defaultAvatar} alt='Avatar' />\r\n                        </div>\r\n                        <div className={styles.descr}>\r\n                            <div className={styles.name}>\r\n                                {companion?.firstName} {companion?.lastName}\r\n                            </div>\r\n                            <div className={styles.event}>\r\n                                {companion.event}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.images}>\r\n                        <img src={phoneReceiver} alt='Call' />\r\n                        <img src={magnifier} alt='Search' />\r\n                        <img src={threeStripes} alt='Additional' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <MessageGroupList messages={messages} currentUserId={currentUser.id} />\r\n\r\n            {selectedImages.length > 0 && (\r\n                <div className={styles.previewContainer}>\r\n                    {renderImagePreviews()}\r\n                </div>\r\n            )}\r\n\r\n            <div className={styles.messageInputContainer}>\r\n                <form name=\"messageInput\" className={styles.messageForm}>\r\n                    <textarea\r\n                        ref={textareaRef}\r\n                        name=\"message\"\r\n                        className={styles.messageInput}\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Напишіть ваше повідомлення\"\r\n                        onInput={handleInput}\r\n                        rows={1}\r\n                    />\r\n                    <div className={styles.messageImages}>\r\n                        <button type=\"button\" onClick={handleEmojiClick}>\r\n                            <img src={smiley} alt=\"emoji\" />\r\n                        </button>\r\n                        {isEmojiPickerOpen && (\r\n                            <div className={styles.emojiWrapper} ref={emojiPickerRef}>\r\n                                <div className={styles.emojiContainer}>\r\n                                    <EmojiPicker onSelect={handleEmojiSelect} mainEmojis={mainEmojis} />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <button type=\"button\" onClick={handleGifClick}>\r\n                            <img src={gifImg} alt=\"gif\" />\r\n                        </button>\r\n\r\n                        {isGifPanelOpen && (\r\n                            <div className={styles.emojiWrapper} ref={gifPanelRef}>\r\n                                <div className={styles.emojiContainer}>\r\n                                    <GifPicker onSelect={handleGifSelect} />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        <button type=\"button\" onClick={handleImageAttachClick}>\r\n                            <img src={cross} alt=\"attach image\" />\r\n                        </button>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            multiple\r\n                            ref={fileInputRef}\r\n                            style={{ display: 'none' }}\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                        <button type=\"button\"><img src={microfon} alt=\"audio\" /></button>\r\n                        <button type=\"submit\"><img src={arrow} alt=\"send\" /></button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Chat);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}