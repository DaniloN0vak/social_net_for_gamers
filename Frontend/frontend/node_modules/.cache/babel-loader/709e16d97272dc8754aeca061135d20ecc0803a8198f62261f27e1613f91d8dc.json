{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\custom-audio-player\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport styles from './CustomAudioPlayer.module.css';\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\nimport play from '../../../assets/images/custom-audio-player/play.png';\nimport AudioTimer from '../audio-recorder/AudioTimer';\n\n// Хук для управления аудио и прогрессом с плавным обновлением\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useAudioProgress(audioRef) {\n  _s();\n  const [isReady, setIsReady] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  // Ref для хранения текущего времени без вызова setState на каждый кадр\n  const currentTimeRef = useRef(0);\n  const rafId = useRef(null);\n  const lastUpdate = useRef(0);\n\n  // Обновление времени прогресса с throttling (200мс)\n  const updateProgress = time => {\n    currentTimeRef.current = time;\n    const now = performance.now();\n    if (now - lastUpdate.current > 200) {\n      setCurrentTime(time);\n      lastUpdate.current = now;\n    }\n  };\n\n  // Функция цикла для requestAnimationFrame\n  const tick = useCallback(() => {\n    if (!audioRef.current) return;\n    if (!audioRef.current.paused) {\n      updateProgress(audioRef.current.currentTime);\n      rafId.current = requestAnimationFrame(tick);\n    }\n  }, [audioRef]);\n\n  // Событие метаданных\n  const onLoadedMetadata = useCallback(() => {\n    if (!audioRef.current) return;\n    const dur = audioRef.current.duration;\n    if (!isNaN(dur) && dur > 0) {\n      setDuration(dur);\n      setIsReady(true);\n    }\n  }, [audioRef]);\n\n  // canplay — тоже обновляем duration\n  const onCanPlay = useCallback(() => {\n    onLoadedMetadata();\n  }, [onLoadedMetadata]);\n\n  // Play/Pause toggle\n  const togglePlay = useCallback(() => {\n    if (!isReady || !audioRef.current) return;\n    if (audioRef.current.paused) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          setIsPlaying(true);\n          rafId.current = requestAnimationFrame(tick);\n        }).catch(() => {\n          setIsPlaying(false);\n        });\n      } else {\n        setIsPlaying(true);\n        rafId.current = requestAnimationFrame(tick);\n      }\n    } else {\n      audioRef.current.pause();\n      setIsPlaying(false);\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n        rafId.current = null;\n      }\n    }\n  }, [isReady, audioRef, tick]);\n\n  // Клик по прогрессбару для перемотки\n  const onProgressClick = useCallback(e => {\n    if (!isReady || !audioRef.current || duration <= 0) return;\n    const {\n      left,\n      width\n    } = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - left;\n    const ratio = Math.min(Math.max(clickX / width, 0), 1);\n    audioRef.current.currentTime = ratio * duration;\n\n    // Обновляем прогресс локально и в состоянии\n    updateProgress(audioRef.current.currentTime);\n  }, [isReady, audioRef, duration]);\n\n  // Обработка окончания воспроизведения\n  const onEnded = useCallback(() => {\n    setIsPlaying(false);\n    if (rafId.current) {\n      cancelAnimationFrame(rafId.current);\n      rafId.current = null;\n    }\n    updateProgress(0);\n  }, []);\n\n  // Сброс при смене src\n  const reset = useCallback(() => {\n    setIsReady(false);\n    setIsPlaying(false);\n    setDuration(0);\n    setCurrentTime(0);\n    currentTimeRef.current = 0;\n    if (rafId.current) {\n      cancelAnimationFrame(rafId.current);\n      rafId.current = null;\n    }\n  }, []);\n  return {\n    isReady,\n    isPlaying,\n    duration,\n    currentTime,\n    togglePlay,\n    onProgressClick,\n    onLoadedMetadata,\n    onCanPlay,\n    onEnded,\n    reset\n  };\n}\n_s(useAudioProgress, \"saBSFMxcNnwP0prqUEEVACX+6Tc=\");\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s2();\n  const audioRef = useRef(null);\n  const {\n    isReady,\n    isPlaying,\n    duration,\n    currentTime,\n    togglePlay,\n    onProgressClick,\n    onLoadedMetadata,\n    onCanPlay,\n    onEnded,\n    reset\n  } = useAudioProgress(audioRef);\n\n  // Сбрасываем при смене src\n  useEffect(() => {\n    reset();\n  }, [src, reset]);\n  const progressPercent = duration > 0 ? currentTime / duration * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      preload: \"metadata\",\n      onLoadedMetadata: onLoadedMetadata,\n      onCanPlay: onCanPlay,\n      onEnded: onEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: togglePlay,\n      className: styles.playButton,\n      disabled: !isReady,\n      \"aria-label\": !isReady ? 'Loading…' : isPlaying ? 'Pause' : 'Play',\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pause,\n        alt: \"Pause\",\n        className: styles.play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: play,\n        alt: isReady ? 'Play' : 'Loading'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": duration,\n      \"aria-valuenow\": currentTime,\n      tabIndex: isReady ? 0 : -1,\n      onClick: onProgressClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${progressPercent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioTimer, {\n      isPaused: !isPlaying,\n      time: currentTime,\n      withDot: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s2(CustomAudioPlayer, \"pMqQUrlXmxWa+R9AKXWklRhcwis=\", false, function () {\n  return [useAudioProgress];\n});\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","styles","pause","play","AudioTimer","jsxDEV","_jsxDEV","useAudioProgress","audioRef","_s","isReady","setIsReady","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","currentTimeRef","rafId","lastUpdate","updateProgress","time","current","now","performance","tick","paused","requestAnimationFrame","onLoadedMetadata","dur","isNaN","onCanPlay","togglePlay","playPromise","undefined","then","catch","cancelAnimationFrame","onProgressClick","e","left","width","currentTarget","getBoundingClientRect","clickX","clientX","ratio","Math","min","max","onEnded","reset","CustomAudioPlayer","src","_s2","progressPercent","className","audioPlayer","children","ref","preload","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","playButton","disabled","alt","progressBar","role","tabIndex","progress","style","isPaused","withDot","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/custom-audio-player/CustomAudioPlayer.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport styles from './CustomAudioPlayer.module.css';\r\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\r\nimport play from '../../../assets/images/custom-audio-player/play.png';\r\nimport AudioTimer from '../audio-recorder/AudioTimer';\r\n\r\n// Хук для управления аудио и прогрессом с плавным обновлением\r\nfunction useAudioProgress(audioRef) {\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  // Ref для хранения текущего времени без вызова setState на каждый кадр\r\n  const currentTimeRef = useRef(0);\r\n  const rafId = useRef(null);\r\n  const lastUpdate = useRef(0);\r\n\r\n  // Обновление времени прогресса с throttling (200мс)\r\n  const updateProgress = (time) => {\r\n    currentTimeRef.current = time;\r\n    const now = performance.now();\r\n    if (now - lastUpdate.current > 200) {\r\n      setCurrentTime(time);\r\n      lastUpdate.current = now;\r\n    }\r\n  };\r\n\r\n  // Функция цикла для requestAnimationFrame\r\n  const tick = useCallback(() => {\r\n    if (!audioRef.current) return;\r\n    if (!audioRef.current.paused) {\r\n      updateProgress(audioRef.current.currentTime);\r\n      rafId.current = requestAnimationFrame(tick);\r\n    }\r\n  }, [audioRef]);\r\n\r\n  // Событие метаданных\r\n  const onLoadedMetadata = useCallback(() => {\r\n    if (!audioRef.current) return;\r\n    const dur = audioRef.current.duration;\r\n    if (!isNaN(dur) && dur > 0) {\r\n      setDuration(dur);\r\n      setIsReady(true);\r\n    }\r\n  }, [audioRef]);\r\n\r\n  // canplay — тоже обновляем duration\r\n  const onCanPlay = useCallback(() => {\r\n    onLoadedMetadata();\r\n  }, [onLoadedMetadata]);\r\n\r\n  // Play/Pause toggle\r\n  const togglePlay = useCallback(() => {\r\n    if (!isReady || !audioRef.current) return;\r\n\r\n    if (audioRef.current.paused) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise\r\n          .then(() => {\r\n            setIsPlaying(true);\r\n            rafId.current = requestAnimationFrame(tick);\r\n          })\r\n          .catch(() => {\r\n            setIsPlaying(false);\r\n          });\r\n      } else {\r\n        setIsPlaying(true);\r\n        rafId.current = requestAnimationFrame(tick);\r\n      }\r\n    } else {\r\n      audioRef.current.pause();\r\n      setIsPlaying(false);\r\n      if (rafId.current) {\r\n        cancelAnimationFrame(rafId.current);\r\n        rafId.current = null;\r\n      }\r\n    }\r\n  }, [isReady, audioRef, tick]);\r\n\r\n  // Клик по прогрессбару для перемотки\r\n  const onProgressClick = useCallback(\r\n    (e) => {\r\n      if (!isReady || !audioRef.current || duration <= 0) return;\r\n      const { left, width } = e.currentTarget.getBoundingClientRect();\r\n      const clickX = e.clientX - left;\r\n      const ratio = Math.min(Math.max(clickX / width, 0), 1);\r\n      audioRef.current.currentTime = ratio * duration;\r\n\r\n      // Обновляем прогресс локально и в состоянии\r\n      updateProgress(audioRef.current.currentTime);\r\n    },\r\n    [isReady, audioRef, duration]\r\n  );\r\n\r\n  // Обработка окончания воспроизведения\r\n  const onEnded = useCallback(() => {\r\n    setIsPlaying(false);\r\n    if (rafId.current) {\r\n      cancelAnimationFrame(rafId.current);\r\n      rafId.current = null;\r\n    }\r\n    updateProgress(0);\r\n  }, []);\r\n\r\n  // Сброс при смене src\r\n  const reset = useCallback(() => {\r\n    setIsReady(false);\r\n    setIsPlaying(false);\r\n    setDuration(0);\r\n    setCurrentTime(0);\r\n    currentTimeRef.current = 0;\r\n    if (rafId.current) {\r\n      cancelAnimationFrame(rafId.current);\r\n      rafId.current = null;\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    isReady,\r\n    isPlaying,\r\n    duration,\r\n    currentTime,\r\n    togglePlay,\r\n    onProgressClick,\r\n    onLoadedMetadata,\r\n    onCanPlay,\r\n    onEnded,\r\n    reset,\r\n  };\r\n}\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n  const audioRef = useRef(null);\r\n\r\n  const {\r\n    isReady,\r\n    isPlaying,\r\n    duration,\r\n    currentTime,\r\n    togglePlay,\r\n    onProgressClick,\r\n    onLoadedMetadata,\r\n    onCanPlay,\r\n    onEnded,\r\n    reset,\r\n  } = useAudioProgress(audioRef);\r\n\r\n  // Сбрасываем при смене src\r\n  useEffect(() => {\r\n    reset();\r\n  }, [src, reset]);\r\n\r\n  const progressPercent = duration > 0 ? (currentTime / duration) * 100 : 0;\r\n\r\n  return (\r\n    <div className={styles.audioPlayer}>\r\n      <audio\r\n        ref={audioRef}\r\n        src={src}\r\n        preload=\"metadata\"\r\n        onLoadedMetadata={onLoadedMetadata}\r\n        onCanPlay={onCanPlay}\r\n        onEnded={onEnded}\r\n      />\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={togglePlay}\r\n        className={styles.playButton}\r\n        disabled={!isReady}\r\n        aria-label={!isReady ? 'Loading…' : isPlaying ? 'Pause' : 'Play'}\r\n      >\r\n        {isPlaying ? (\r\n          <img src={pause} alt=\"Pause\" className={styles.play} />\r\n        ) : (\r\n          <img src={play} alt={isReady ? 'Play' : 'Loading'} />\r\n        )}\r\n      </button>\r\n\r\n      <div\r\n        className={styles.progressBar}\r\n        role=\"progressbar\"\r\n        aria-valuemin={0}\r\n        aria-valuemax={duration}\r\n        aria-valuenow={currentTime}\r\n        tabIndex={isReady ? 0 : -1}\r\n        onClick={onProgressClick}\r\n      >\r\n        <div\r\n          className={styles.progress}\r\n          style={{ width: `${progressPercent}%` }}\r\n        />\r\n      </div>\r\n\r\n      <AudioTimer isPaused={!isPlaying} time={currentTime} withDot={false} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}