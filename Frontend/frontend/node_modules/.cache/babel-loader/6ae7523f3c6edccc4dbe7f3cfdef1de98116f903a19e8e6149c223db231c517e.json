{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\MessageGroupList.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport MessageGroup from './MessageGroup';\nimport DateSeparator from './DateSeparator';\nimport { formatDateForSeparator, isNewDay } from '../utils/dateUtils';\nimport styles from '../styles/MessageGroupList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageGroupList(props) {\n  _s();\n  const {\n    messages,\n    currentUserId\n  } = props;\n  const renderedGroups = useMemo(() => {\n    const elements = [];\n    let currentGroup = [];\n    let lastUserId = null;\n    let lastDate = null;\n    messages.forEach((msg, index) => {\n      const userId = msg.user.id;\n      const msgDate = msg.sentAt;\n      const newDay = !lastDate || isNewDay(lastDate, msgDate);\n      const newUser = userId !== lastUserId;\n      if (currentGroup.length > 0 && (newUser || newDay)) {\n        elements.push(/*#__PURE__*/_jsxDEV(MessageGroup, {\n          messages: currentGroup,\n          isLeft: currentGroup[0].user.id !== currentUserId\n        }, `group-${currentGroup[0].id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this));\n        currentGroup = [];\n      }\n      if (newDay) {\n        elements.push(/*#__PURE__*/_jsxDEV(DateSeparator, {\n          date: msg.sentAt instanceof Date ? formatDateForSeparator(msg.sentAt) : \"Не вказано\"\n        }, `date-${msg.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this));\n      }\n      currentGroup.push(msg);\n      lastUserId = userId;\n      lastDate = msgDate;\n    });\n    if (currentGroup.length > 0) {\n      elements.push(/*#__PURE__*/_jsxDEV(MessageGroup, {\n        messages: currentGroup,\n        isLeft: currentGroup[0].user.id !== currentUserId\n      }, `group-${currentGroup[0].id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this));\n    }\n    return elements;\n  }, [messages, currentUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: renderedGroups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n}\n_s(MessageGroupList, \"WAji6TKU//AFyxItvHNXql+O2z0=\");\n_c = MessageGroupList;\nexport default _c2 = /*#__PURE__*/React.memo(MessageGroupList);\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageGroupList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useMemo","MessageGroup","DateSeparator","formatDateForSeparator","isNewDay","styles","jsxDEV","_jsxDEV","MessageGroupList","props","_s","messages","currentUserId","renderedGroups","elements","currentGroup","lastUserId","lastDate","forEach","msg","index","userId","user","id","msgDate","sentAt","newDay","newUser","length","push","isLeft","fileName","_jsxFileName","lineNumber","columnNumber","date","Date","className","container","children","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/MessageGroupList.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport MessageGroup from './MessageGroup';\r\nimport DateSeparator from './DateSeparator';\r\nimport { formatDateForSeparator, isNewDay } from '../utils/dateUtils';\r\nimport styles from '../styles/MessageGroupList.module.css';\r\n\r\nfunction MessageGroupList(props) {\r\n    const { messages, currentUserId } = props;\r\n    const renderedGroups = useMemo(() => {\r\n        const elements = [];\r\n        let currentGroup = [];\r\n        let lastUserId = null;\r\n        let lastDate = null;\r\n\r\n        messages.forEach((msg, index) => {\r\n            const userId = msg.user.id;\r\n            const msgDate = msg.sentAt;\r\n\r\n            const newDay = !lastDate || isNewDay(lastDate, msgDate);\r\n            const newUser = userId !== lastUserId;\r\n\r\n            if (currentGroup.length > 0 && (newUser || newDay)) {\r\n                elements.push(\r\n                    <MessageGroup\r\n                        key={`group-${currentGroup[0].id}`}\r\n                        messages={currentGroup}\r\n                        isLeft={currentGroup[0].user.id !== currentUserId}\r\n                    />\r\n                );\r\n                currentGroup = [];\r\n            }\r\n\r\n            if (newDay) {\r\n                elements.push(\r\n                    <DateSeparator\r\n                        key={`date-${msg.id}`}\r\n                        date={msg.sentAt instanceof Date ? formatDateForSeparator(msg.sentAt) : \"Не вказано\"}\r\n                    />\r\n                );\r\n            }\r\n\r\n            currentGroup.push(msg);\r\n            lastUserId = userId;\r\n            lastDate = msgDate;\r\n        });\r\n\r\n        if (currentGroup.length > 0) {\r\n            elements.push(\r\n                <MessageGroup\r\n                    key={`group-${currentGroup[0].id}`}\r\n                    messages={currentGroup}\r\n                    isLeft={currentGroup[0].user.id !== currentUserId}\r\n                />\r\n            );\r\n        }\r\n\r\n        return elements;\r\n    }, [messages, currentUserId]);\r\n\r\n    return <div className={styles.container}>{renderedGroups}</div>;\r\n}\r\n\r\nexport default React.memo(MessageGroupList);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}