{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport MessageGroupList from './chat-items/message-list/MessageGroupList';\nimport EmojiPicker from './EmojiPicker';\nimport styles from '../styles/Chat.module.css';\nimport smiley from '../assets/images/message-form/smiley.png';\nimport gifImg from '../assets/images/message-form/gif.png';\nimport arrow from '../assets/images/message-form/arrow.png';\nimport microfon from '../assets/images/message-form/microfon.png';\nimport smileySelected from '../assets/images/message-form/smiley-selected.png';\nimport gifImgSelected from '../assets/images/message-form/gif-selected.png';\nimport arrowSelected from '../assets/images/message-form/arrow-selected.png';\nimport microfonSelected from '../assets/images/message-form/microfon-selected.png';\nimport cross from '../assets/images/message-form/cross.png';\nimport GifPicker from './GifPicker';\nimport MediaPreview from './FilePreviewArea';\nimport { useModal } from '../contexts/ModalContext';\nimport Header from './chat-items/header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const {\n    messages,\n    currentUser,\n    companion\n  } = props;\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  const emojiPickerRef = useRef(null);\n  const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\n  const gifPanelRef = useRef(null);\n  const [mediaList, setMediaList] = useState([]);\n  const [message, setMessage] = useState([]);\n  const fileInputRef = useRef(null);\n  const [gifList, setGifList] = useState([]);\n  const {\n    isModalOpen\n  } = useModal();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const handleAudioClick = async () => {\n    if (!isRecording) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const recorder = new MediaRecorder(stream);\n        const chunks = [];\n        recorder.ondataavailable = e => {\n          if (e.data.size > 0) chunks.push(e.data);\n        };\n        recorder.onstop = () => {\n          const audioBlob = new Blob(chunks, {\n            type: 'audio/webm'\n          });\n          const audioUrl = URL.createObjectURL(audioBlob);\n          const newAudio = {\n            id: `${Date.now()}_audio`,\n            type: 'audio',\n            src: audioUrl,\n            file: audioBlob\n          };\n          setMediaList(prev => [...prev, newAudio]);\n        };\n        recorder.start();\n        setMediaRecorder(recorder);\n        setAudioChunks(chunks);\n        setIsRecording(true);\n      } catch (err) {\n        console.error('Ошибка при доступе к микрофону', err);\n      }\n    } else {\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n      setIsRecording(false);\n    }\n  };\n  const [mainEmojis, setMainEmojis] = useState(() => {\n    try {\n      const saved = localStorage.getItem('mainEmojis');\n      return saved ? JSON.parse(saved) : [];\n    } catch (e) {\n      console.error('Failed to load emojis from localStorage:', e);\n      return [];\n    }\n  });\n  const handleImageUpload = event => {\n    if (mediaList.length < 11) {\n      const files = Array.from(event.target.files);\n      const newMedia = files.map((file, index) => ({\n        id: `${Date.now()}_${index}`,\n        type: file.type.startsWith('video') ? 'video' : 'image',\n        src: URL.createObjectURL(file),\n        file\n      }));\n      setMediaList(prev => [...prev, ...newMedia]);\n    }\n  };\n  const handleRemoveMedia = media => {\n    if (media.type === 'selected_gif') {\n      setGifList(prev => prev.filter(gif => gif.id !== media.id));\n    } else {\n      setMediaList(prev => prev.filter(content => content.id !== media.id));\n    }\n  };\n  const handleGifClick = () => {\n    setIsGifPanelOpen(prev => !prev);\n    setIsEmojiPickerOpen(false);\n  };\n  const textareaRef = useRef(null);\n  const handleGifSelect = gifUrl => {\n    if (gifList.length < 11) {\n      const newGif = {\n        id: `${Date.now()}_gif`,\n        type: 'selected_gif',\n        src: gifUrl\n      };\n      setGifList(prev => [...prev, newGif]);\n      setIsGifPanelOpen(false);\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (gifPanelRef.current && !gifPanelRef.current.contains(event.target)) {\n        setIsGifPanelOpen(false);\n      }\n    };\n    if (isGifPanelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isGifPanelOpen]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {\n        setIsEmojiPickerOpen(false);\n      }\n    };\n    if (isEmojiPickerOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEmojiPickerOpen]);\n  const handleInput = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = textarea.scrollHeight + 'px';\n    }\n  };\n  const handleEmojiSelect = emoji => {\n    if (textareaRef.current) {\n      const textarea = textareaRef.current;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const value = textarea.value;\n      textarea.value = value.slice(0, start) + emoji + value.slice(end);\n      textarea.focus();\n      textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\n      handleInput();\n      setMessage(textarea.value);\n      setMainEmojis(prevMainEmojis => {\n        const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\n        const finalList = newList.slice(0, 44);\n        try {\n          localStorage.setItem('mainEmojis', JSON.stringify(finalList));\n        } catch (e) {\n          console.error('Failed to save emojis to localStorage:', e);\n        }\n        return finalList;\n      });\n    }\n  };\n  const handleEmojiClick = () => {\n    setIsEmojiPickerOpen(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      companion: {\n        firstName: 'allo',\n        lastName: 'allo',\n        event: 'hello'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageGroupList, {\n      messages: messages,\n      currentUserId: currentUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.messageInputContainer} ${isModalOpen ? styles.hidden : ''}`,\n      children: [(mediaList.length > 0 || gifList.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mediaPreview,\n        children: /*#__PURE__*/_jsxDEV(MediaPreview, {\n          mediaList: mediaList,\n          gifList: gifList,\n          onRemove: handleRemoveMedia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"messageInput\",\n        className: styles.messageForm,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          name: \"message\",\n          className: styles.messageInput,\n          autoComplete: \"off\",\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448\\u0435 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\",\n          onInput: handleInput,\n          rows: 1,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messageImages,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleEmojiClick,\n            children: isEmojiPickerOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: smileySelected,\n              alt: \"emoji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 34\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: smiley,\n              alt: \"emoji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), isEmojiPickerOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emojiWrapper,\n            ref: emojiPickerRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emojiContainer,\n              children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n                onSelect: handleEmojiSelect,\n                mainEmojis: mainEmojis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleGifClick,\n            children: isGifPanelOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: gifImgSelected,\n              alt: \"gif\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: gifImg,\n              alt: \"gif\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), isGifPanelOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emojiWrapper,\n            ref: gifPanelRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emojiContainer,\n              children: /*#__PURE__*/_jsxDEV(GifPicker, {\n                onSelect: handleGifSelect,\n                setIsGifPanelOpen: setIsGifPanelOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              var _fileInputRef$current;\n              return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cross,\n              alt: \"attach media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*,video/*\",\n            multiple: true,\n            ref: fileInputRef,\n            style: {\n              display: 'none'\n            },\n            onChange: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAudioClick,\n            children: isRecording ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: microfonSelected,\n              alt: \"audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: microfon,\n              alt: \"audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 92\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: arrow,\n              alt: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"t86dSvbTTcbs/+oBi8tQnaN0/DU=\", false, function () {\n  return [useModal];\n});\n_c = Chat;\nexport default _c2 = /*#__PURE__*/React.memo(Chat);\nvar _c, _c2;\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MessageGroupList","EmojiPicker","styles","smiley","gifImg","arrow","microfon","smileySelected","gifImgSelected","arrowSelected","microfonSelected","cross","GifPicker","MediaPreview","useModal","Header","jsxDEV","_jsxDEV","Chat","props","_s","messages","currentUser","companion","isEmojiPickerOpen","setIsEmojiPickerOpen","emojiPickerRef","isGifPanelOpen","setIsGifPanelOpen","gifPanelRef","mediaList","setMediaList","message","setMessage","fileInputRef","gifList","setGifList","isModalOpen","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","audioChunks","setAudioChunks","handleAudioClick","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","e","data","size","push","onstop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","newAudio","id","Date","now","src","file","prev","start","err","console","error","stop","mainEmojis","setMainEmojis","saved","localStorage","getItem","JSON","parse","handleImageUpload","event","length","files","Array","from","target","newMedia","map","index","startsWith","handleRemoveMedia","media","filter","gif","content","handleGifClick","textareaRef","handleGifSelect","gifUrl","newGif","handleClickOutside","current","contains","document","addEventListener","removeEventListener","handleInput","textarea","style","height","scrollHeight","handleEmojiSelect","emoji","selectionStart","end","selectionEnd","value","slice","focus","prevMainEmojis","newList","finalList","setItem","stringify","handleEmojiClick","className","container","children","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","currentUserId","messageInputContainer","hidden","mediaPreview","onRemove","name","messageForm","ref","messageInput","autoComplete","placeholder","onInput","rows","onChange","messageImages","onClick","alt","emojiWrapper","emojiContainer","onSelect","_fileInputRef$current","click","accept","multiple","display","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport MessageGroupList from './chat-items/message-list/MessageGroupList';\r\nimport EmojiPicker from './EmojiPicker';\r\nimport styles from '../styles/Chat.module.css';\r\nimport smiley from '../assets/images/message-form/smiley.png';\r\nimport gifImg from '../assets/images/message-form/gif.png';\r\nimport arrow from '../assets/images/message-form/arrow.png';\r\nimport microfon from '../assets/images/message-form/microfon.png';\r\nimport smileySelected from '../assets/images/message-form/smiley-selected.png';\r\nimport gifImgSelected from '../assets/images/message-form/gif-selected.png';\r\nimport arrowSelected from '../assets/images/message-form/arrow-selected.png';\r\nimport microfonSelected from '../assets/images/message-form/microfon-selected.png';\r\nimport cross from '../assets/images/message-form/cross.png';\r\nimport GifPicker from './GifPicker';\r\nimport MediaPreview from './FilePreviewArea';\r\nimport { useModal } from '../contexts/ModalContext';\r\nimport Header from './chat-items/header/Header';\r\n\r\nfunction Chat(props) {\r\n    const { messages, currentUser, companion } = props;\r\n    const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\r\n    const emojiPickerRef = useRef(null);\r\n    const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\r\n    const gifPanelRef = useRef(null);\r\n    const [mediaList, setMediaList] = useState([]);\r\n    const [message, setMessage] = useState([]);\r\n    const fileInputRef = useRef(null);\r\n    const [gifList, setGifList] = useState([]);\r\n    const { isModalOpen } = useModal();\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [audioChunks, setAudioChunks] = useState([]);\r\n\r\n    const handleAudioClick = async () => {\r\n        if (!isRecording) {\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n                const recorder = new MediaRecorder(stream);\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    if (e.data.size > 0) chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = () => {\r\n                    const audioBlob = new Blob(chunks, { type: 'audio/webm' });\r\n                    const audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n                    const newAudio = {\r\n                        id: `${Date.now()}_audio`,\r\n                        type: 'audio',\r\n                        src: audioUrl,\r\n                        file: audioBlob\r\n                    };\r\n                    setMediaList(prev => [...prev, newAudio]);\r\n                };\r\n\r\n                recorder.start();\r\n                setMediaRecorder(recorder);\r\n                setAudioChunks(chunks);\r\n                setIsRecording(true);\r\n            } catch (err) {\r\n                console.error('Ошибка при доступе к микрофону', err);\r\n            }\r\n        } else {\r\n            mediaRecorder?.stop();\r\n            setIsRecording(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const [mainEmojis, setMainEmojis] = useState(() => {\r\n        try {\r\n            const saved = localStorage.getItem('mainEmojis');\r\n            return saved ? JSON.parse(saved) : [];\r\n        } catch (e) {\r\n            console.error('Failed to load emojis from localStorage:', e);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const handleImageUpload = (event) => {\r\n        if (mediaList.length < 11) {\r\n            const files = Array.from(event.target.files);\r\n            const newMedia = files.map((file, index) => ({\r\n                id: `${Date.now()}_${index}`,\r\n                type: file.type.startsWith('video') ? 'video' : 'image',\r\n                src: URL.createObjectURL(file),\r\n                file\r\n            }));\r\n            setMediaList((prev) => [...prev, ...newMedia]);\r\n        }\r\n    };\r\n\r\n    const handleRemoveMedia = (media) => {\r\n        if (media.type === 'selected_gif') {\r\n            setGifList((prev) => prev.filter((gif) => gif.id !== media.id));\r\n        }\r\n        else {\r\n            setMediaList((prev) => prev.filter((content) => content.id !== media.id));\r\n        }\r\n    };\r\n\r\n    const handleGifClick = () => {\r\n        setIsGifPanelOpen((prev) => !prev);\r\n        setIsEmojiPickerOpen(false);\r\n    };\r\n\r\n\r\n    const textareaRef = useRef(null);\r\n    const handleGifSelect = (gifUrl) => {\r\n        if (gifList.length < 11) {\r\n\r\n            const newGif = {\r\n                id: (`${Date.now()}_gif`),\r\n                type: 'selected_gif',\r\n                src: gifUrl\r\n            };\r\n            setGifList((prev) => [...prev, newGif]);\r\n            setIsGifPanelOpen(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                gifPanelRef.current &&\r\n                !gifPanelRef.current.contains(event.target)\r\n            ) {\r\n                setIsGifPanelOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isGifPanelOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isGifPanelOpen]);\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                emojiPickerRef.current &&\r\n                !emojiPickerRef.current.contains(event.target)\r\n            ) {\r\n                setIsEmojiPickerOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isEmojiPickerOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        } else {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isEmojiPickerOpen]);\r\n\r\n    const handleInput = () => {\r\n        const textarea = textareaRef.current;\r\n        if (textarea) {\r\n            textarea.style.height = 'auto';\r\n            textarea.style.height = textarea.scrollHeight + 'px';\r\n        }\r\n    };\r\n\r\n    const handleEmojiSelect = (emoji) => {\r\n        if (textareaRef.current) {\r\n            const textarea = textareaRef.current;\r\n            const start = textarea.selectionStart;\r\n            const end = textarea.selectionEnd;\r\n            const value = textarea.value;\r\n            textarea.value = value.slice(0, start) + emoji + value.slice(end);\r\n            textarea.focus();\r\n            textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\r\n            handleInput();\r\n            setMessage(textarea.value);\r\n            setMainEmojis((prevMainEmojis) => {\r\n                const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\r\n                const finalList = newList.slice(0, 44);\r\n\r\n                try {\r\n                    localStorage.setItem('mainEmojis', JSON.stringify(finalList));\r\n                } catch (e) {\r\n                    console.error('Failed to save emojis to localStorage:', e);\r\n                }\r\n\r\n                return finalList;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleEmojiClick = () => {\r\n        setIsEmojiPickerOpen((prev) => !prev);\r\n    };\r\n    return (\r\n        <div className={styles.container}>\r\n            <Header companion={{firstName:'allo', lastName:'allo', event:'hello'}}/>\r\n            <MessageGroupList messages={messages} currentUserId={currentUser.id} />\r\n            <div className={`${styles.messageInputContainer} ${isModalOpen ? styles.hidden : ''}`}>\r\n                {(mediaList.length > 0 || gifList.length > 0) && (\r\n                    <div className={styles.mediaPreview}>\r\n                        <MediaPreview mediaList={mediaList} gifList={gifList} onRemove={handleRemoveMedia} />\r\n                    </div>\r\n                )}\r\n                <form name=\"messageInput\" className={styles.messageForm}>\r\n                    <textarea\r\n                        ref={textareaRef}\r\n                        name=\"message\"\r\n                        className={styles.messageInput}\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Напишіть ваше повідомлення\"\r\n                        onInput={handleInput}\r\n                        rows={1}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                    />\r\n                    <div className={styles.messageImages}>\r\n                        <button type=\"button\" onClick={handleEmojiClick}>\r\n                            {isEmojiPickerOpen ?\r\n                                (<img src={smileySelected} alt=\"emoji\" />) : (<img src={smiley} alt=\"emoji\" />)\r\n                            }\r\n                        </button>\r\n                        {isEmojiPickerOpen && (\r\n                            <div className={styles.emojiWrapper} ref={emojiPickerRef}>\r\n                                <div className={styles.emojiContainer}>\r\n                                    <EmojiPicker onSelect={handleEmojiSelect} mainEmojis={mainEmojis} />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <button type=\"button\" onClick={handleGifClick}>\r\n                            {isGifPanelOpen ? (\r\n                                <img src={gifImgSelected} alt=\"gif\" />\r\n                            ) : <img src={gifImg} alt=\"gif\" />}\r\n                        </button>\r\n\r\n                        {isGifPanelOpen && (\r\n                            <div className={styles.emojiWrapper} ref={gifPanelRef}>\r\n                                <div className={styles.emojiContainer}>\r\n                                    <GifPicker onSelect={handleGifSelect} setIsGifPanelOpen={setIsGifPanelOpen} />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        <button type=\"button\" onClick={() => fileInputRef.current?.click()}>\r\n                            <img src={cross} alt=\"attach media\" />\r\n                        </button>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/*,video/*\"\r\n                            multiple\r\n                            ref={fileInputRef}\r\n                            style={{ display: 'none' }}\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                        <button type=\"button\" onClick={handleAudioClick}>\r\n                            {isRecording ? (<img src={microfonSelected} alt=\"audio\" />) : (<img src={microfon} alt=\"audio\" />)}\r\n                        </button>\r\n\r\n                        <button type=\"submit\"><img src={arrow} alt=\"send\" /></button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Chat);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}