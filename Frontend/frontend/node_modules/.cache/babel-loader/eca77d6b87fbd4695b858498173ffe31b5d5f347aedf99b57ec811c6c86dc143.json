{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\message-input\\\\MessageInput.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRef, useState } from \"react\";\nimport styles from './MessageInput.module.css';\nimport smiley from '../../../assets/images/message-form/smiley.png';\nimport gifImg from '../../../assets/images/message-form/gif.png';\nimport arrow from '../../../assets/images/message-form/arrow.png';\nimport microfon from '../../../assets/images/message-form/microfon.png';\nimport smileySelected from '../../../assets/images/message-form/smiley-selected.png';\nimport gifImgSelected from '../../../assets/images/message-form/gif-selected.png';\nimport arrowSelected from '../../../assets/images/message-form/arrow-selected.png';\nimport microfonSelected from '../../../assets/images/message-form/microfon-selected.png';\nimport cross from '../../../assets/images/message-form/cross.png';\nimport GifPicker from '../../shared/gif-picker/GifPicker';\nimport EmojiPicker from '../../shared/emoji-picker/EmojiPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageInput({\n  setMessage\n}) {\n  _s();\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  const emojiPickerRef = useRef(null);\n  const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\n  const gifPanelRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleAudioClick = async () => {\n    if (!isRecording) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const recorder = new MediaRecorder(stream);\n        const chunks = [];\n        recorder.ondataavailable = e => {\n          if (e.data.size > 0) chunks.push(e.data);\n        };\n        recorder.onstop = () => {\n          const audioBlob = new Blob(chunks, {\n            type: 'audio/webm'\n          });\n          const audioUrl = URL.createObjectURL(audioBlob);\n          const newAudio = {\n            id: `${Date.now()}_audio`,\n            type: 'audio',\n            src: audioUrl,\n            file: audioBlob\n          };\n          setMediaList(prev => [...prev, newAudio]);\n        };\n        recorder.start();\n        setMediaRecorder(recorder);\n        setAudioChunks(chunks);\n        setIsRecording(true);\n      } catch (err) {\n        console.error('Ошибка при доступе к микрофону', err);\n      }\n    } else {\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n      setIsRecording(false);\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (gifPanelRef.current && !gifPanelRef.current.contains(event.target)) {\n        setIsGifPanelOpen(false);\n      }\n    };\n    if (isGifPanelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isGifPanelOpen]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {\n        setIsEmojiPickerOpen(false);\n      }\n    };\n    if (isEmojiPickerOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEmojiPickerOpen]);\n  const handleRemoveMedia = media => {\n    if (media.type === 'selected_gif') {\n      setGifList(prev => prev.filter(gif => gif.id !== media.id));\n    } else {\n      setMediaList(prev => prev.filter(content => content.id !== media.id));\n    }\n  };\n  const handleEmojiClick = () => {\n    setIsEmojiPickerOpen(prev => !prev);\n  };\n  const handleEmojiSelect = emoji => {\n    if (textareaRef.current) {\n      const textarea = textareaRef.current;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const value = textarea.value;\n      textarea.value = value.slice(0, start) + emoji + value.slice(end);\n      textarea.focus();\n      textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\n      handleInput();\n      setMessage(textarea.value);\n      setMainEmojis(prevMainEmojis => {\n        const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\n        const finalList = newList.slice(0, 44);\n        try {\n          localStorage.setItem('mainEmojis', JSON.stringify(finalList));\n        } catch (e) {\n          console.error('Failed to save emojis to localStorage:', e);\n        }\n        return finalList;\n      });\n    }\n  };\n  const textareaRef = useRef(null);\n  const handleGifSelect = gifUrl => {\n    if (gifList.length < 11) {\n      const newGif = {\n        id: `${Date.now()}_gif`,\n        type: 'selected_gif',\n        src: gifUrl\n      };\n      setGifList(prev => [...prev, newGif]);\n      setIsGifPanelOpen(false);\n    }\n  };\n  const handleInput = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = textarea.scrollHeight + 'px';\n    }\n  };\n  const handleImageUpload = event => {\n    if (mediaList.length < 11) {\n      const files = Array.from(event.target.files);\n      const newMedia = files.map((file, index) => ({\n        id: `${Date.now()}_${index}`,\n        type: file.type.startsWith('video') ? 'video' : 'image',\n        src: URL.createObjectURL(file),\n        file\n      }));\n      setMediaList(prev => [...prev, ...newMedia]);\n    }\n  };\n  const [mainEmojis, setMainEmojis] = useState(() => {\n    try {\n      const saved = localStorage.getItem('mainEmojis');\n      return saved ? JSON.parse(saved) : [];\n    } catch (e) {\n      console.error('Failed to load emojis from localStorage:', e);\n      return [];\n    }\n  });\n  const handleGifClick = () => {\n    setIsGifPanelOpen(prev => !prev);\n    setIsEmojiPickerOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    name: \"messageInput\",\n    className: styles.messageForm,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      name: \"message\",\n      className: styles.messageInput,\n      autoComplete: \"off\",\n      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448\\u0435 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\",\n      onInput: handleInput,\n      rows: 1,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageImages,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleEmojiClick,\n        children: isEmojiPickerOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: smileySelected,\n          alt: \"emoji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: smiley,\n          alt: \"emoji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this), isEmojiPickerOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.emojiWrapper,\n        ref: emojiPickerRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.emojiContainer,\n          children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            onSelect: handleEmojiSelect,\n            mainEmojis: mainEmojis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGifClick,\n        children: isGifPanelOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gifImgSelected,\n          alt: \"gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gifImg,\n          alt: \"gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), isGifPanelOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.emojiWrapper,\n        ref: gifPanelRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.emojiContainer,\n          children: /*#__PURE__*/_jsxDEV(GifPicker, {\n            onSelect: handleGifSelect,\n            setIsGifPanelOpen: setIsGifPanelOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          var _fileInputRef$current;\n          return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cross,\n          alt: \"attach media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*,video/*\",\n        multiple: true,\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAudioClick,\n        children: isRecording ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: microfonSelected,\n          alt: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: microfon,\n          alt: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow,\n          alt: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 13\n  }, this);\n}\n_s(MessageInput, \"Bw/L7FF5z7DyP5f7actmkoxJ15I=\");\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useRef","useState","styles","smiley","gifImg","arrow","microfon","smileySelected","gifImgSelected","arrowSelected","microfonSelected","cross","GifPicker","EmojiPicker","jsxDEV","_jsxDEV","MessageInput","setMessage","_s","isEmojiPickerOpen","setIsEmojiPickerOpen","emojiPickerRef","isGifPanelOpen","setIsGifPanelOpen","gifPanelRef","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","fileInputRef","handleAudioClick","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","e","data","size","push","onstop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","newAudio","id","Date","now","src","file","setMediaList","prev","start","setAudioChunks","err","console","error","stop","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleRemoveMedia","media","setGifList","filter","gif","content","handleEmojiClick","handleEmojiSelect","emoji","textareaRef","textarea","selectionStart","end","selectionEnd","value","slice","focus","length","handleInput","setMainEmojis","prevMainEmojis","newList","finalList","localStorage","setItem","JSON","stringify","handleGifSelect","gifUrl","gifList","newGif","style","height","scrollHeight","handleImageUpload","mediaList","files","Array","from","newMedia","map","index","startsWith","mainEmojis","saved","getItem","parse","handleGifClick","name","className","messageForm","children","ref","messageInput","autoComplete","placeholder","onInput","rows","onChange","fileName","_jsxFileName","lineNumber","columnNumber","messageImages","onClick","alt","emojiWrapper","emojiContainer","onSelect","_fileInputRef$current","click","accept","multiple","display","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/message-input/MessageInput.js"],"sourcesContent":["import React from \"react\";\r\nimport { useRef, useState } from \"react\";\r\nimport styles from './MessageInput.module.css';\r\nimport smiley from '../../../assets/images/message-form/smiley.png';\r\nimport gifImg from '../../../assets/images/message-form/gif.png';\r\nimport arrow from '../../../assets/images/message-form/arrow.png';\r\nimport microfon from '../../../assets/images/message-form/microfon.png';\r\nimport smileySelected from '../../../assets/images/message-form/smiley-selected.png';\r\nimport gifImgSelected from '../../../assets/images/message-form/gif-selected.png';\r\nimport arrowSelected from '../../../assets/images/message-form/arrow-selected.png';\r\nimport microfonSelected from '../../../assets/images/message-form/microfon-selected.png';\r\nimport cross from '../../../assets/images/message-form/cross.png';\r\nimport GifPicker from '../../shared/gif-picker/GifPicker';\r\nimport EmojiPicker from '../../shared/emoji-picker/EmojiPicker';\r\n\r\nfunction MessageInput({ setMessage, }) {\r\n    const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\r\n    const emojiPickerRef = useRef(null);\r\n    const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\r\n    const gifPanelRef = useRef(null);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n\r\n\r\n\r\n    const fileInputRef = useRef(null);\r\n    const handleAudioClick = async () => {\r\n        if (!isRecording) {\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n                const recorder = new MediaRecorder(stream);\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    if (e.data.size > 0) chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = () => {\r\n                    const audioBlob = new Blob(chunks, { type: 'audio/webm' });\r\n                    const audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n                    const newAudio = {\r\n                        id: `${Date.now()}_audio`,\r\n                        type: 'audio',\r\n                        src: audioUrl,\r\n                        file: audioBlob\r\n                    };\r\n                    setMediaList(prev => [...prev, newAudio]);\r\n                };\r\n\r\n                recorder.start();\r\n                setMediaRecorder(recorder);\r\n                setAudioChunks(chunks);\r\n                setIsRecording(true);\r\n            } catch (err) {\r\n                console.error('Ошибка при доступе к микрофону', err);\r\n            }\r\n        } else {\r\n            mediaRecorder?.stop();\r\n            setIsRecording(false);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                gifPanelRef.current &&\r\n                !gifPanelRef.current.contains(event.target)\r\n            ) {\r\n                setIsGifPanelOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isGifPanelOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isGifPanelOpen]);\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                emojiPickerRef.current &&\r\n                !emojiPickerRef.current.contains(event.target)\r\n            ) {\r\n                setIsEmojiPickerOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isEmojiPickerOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        } else {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isEmojiPickerOpen]);\r\n    const handleRemoveMedia = (media) => {\r\n        if (media.type === 'selected_gif') {\r\n            setGifList((prev) => prev.filter((gif) => gif.id !== media.id));\r\n        }\r\n        else {\r\n            setMediaList((prev) => prev.filter((content) => content.id !== media.id));\r\n        }\r\n    };\r\n    const handleEmojiClick = () => {\r\n        setIsEmojiPickerOpen((prev) => !prev);\r\n    };\r\n    const handleEmojiSelect = (emoji) => {\r\n        if (textareaRef.current) {\r\n            const textarea = textareaRef.current;\r\n            const start = textarea.selectionStart;\r\n            const end = textarea.selectionEnd;\r\n            const value = textarea.value;\r\n            textarea.value = value.slice(0, start) + emoji + value.slice(end);\r\n            textarea.focus();\r\n            textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\r\n            handleInput();\r\n            setMessage(textarea.value);\r\n            setMainEmojis((prevMainEmojis) => {\r\n                const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\r\n                const finalList = newList.slice(0, 44);\r\n\r\n                try {\r\n                    localStorage.setItem('mainEmojis', JSON.stringify(finalList));\r\n                } catch (e) {\r\n                    console.error('Failed to save emojis to localStorage:', e);\r\n                }\r\n\r\n                return finalList;\r\n            });\r\n        }\r\n    };\r\n    const textareaRef = useRef(null);\r\n    const handleGifSelect = (gifUrl) => {\r\n        if (gifList.length < 11) {\r\n\r\n            const newGif = {\r\n                id: (`${Date.now()}_gif`),\r\n                type: 'selected_gif',\r\n                src: gifUrl\r\n            };\r\n            setGifList((prev) => [...prev, newGif]);\r\n            setIsGifPanelOpen(false);\r\n        }\r\n    };\r\n    const handleInput = () => {\r\n        const textarea = textareaRef.current;\r\n        if (textarea) {\r\n            textarea.style.height = 'auto';\r\n            textarea.style.height = textarea.scrollHeight + 'px';\r\n        }\r\n    };\r\n\r\n    const handleImageUpload = (event) => {\r\n        if (mediaList.length < 11) {\r\n            const files = Array.from(event.target.files);\r\n            const newMedia = files.map((file, index) => ({\r\n                id: `${Date.now()}_${index}`,\r\n                type: file.type.startsWith('video') ? 'video' : 'image',\r\n                src: URL.createObjectURL(file),\r\n                file\r\n            }));\r\n            setMediaList((prev) => [...prev, ...newMedia]);\r\n        }\r\n    };\r\n    const [mainEmojis, setMainEmojis] = useState(() => {\r\n        try {\r\n            const saved = localStorage.getItem('mainEmojis');\r\n            return saved ? JSON.parse(saved) : [];\r\n        } catch (e) {\r\n            console.error('Failed to load emojis from localStorage:', e);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const handleGifClick = () => {\r\n        setIsGifPanelOpen((prev) => !prev);\r\n        setIsEmojiPickerOpen(false);\r\n    };\r\n\r\n    return (<form name=\"messageInput\" className={styles.messageForm}>\r\n        <textarea\r\n            ref={textareaRef}\r\n            name=\"message\"\r\n            className={styles.messageInput}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Напишіть ваше повідомлення\"\r\n            onInput={handleInput}\r\n            rows={1}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <div className={styles.messageImages}>\r\n            <button type=\"button\" onClick={handleEmojiClick}>\r\n                {isEmojiPickerOpen ?\r\n                    (<img src={smileySelected} alt=\"emoji\" />) : (<img src={smiley} alt=\"emoji\" />)\r\n                }\r\n            </button>\r\n            {isEmojiPickerOpen && (\r\n                <div className={styles.emojiWrapper} ref={emojiPickerRef}>\r\n                    <div className={styles.emojiContainer}>\r\n                        <EmojiPicker onSelect={handleEmojiSelect} mainEmojis={mainEmojis} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <button type=\"button\" onClick={handleGifClick}>\r\n                {isGifPanelOpen ? (\r\n                    <img src={gifImgSelected} alt=\"gif\" />\r\n                ) : <img src={gifImg} alt=\"gif\" />}\r\n            </button>\r\n\r\n            {isGifPanelOpen && (\r\n                <div className={styles.emojiWrapper} ref={gifPanelRef}>\r\n                    <div className={styles.emojiContainer}>\r\n                        <GifPicker onSelect={handleGifSelect} setIsGifPanelOpen={setIsGifPanelOpen} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <button type=\"button\" onClick={() => fileInputRef.current?.click()}>\r\n                <img src={cross} alt=\"attach media\" />\r\n            </button>\r\n            <input\r\n                type=\"file\"\r\n                accept=\"image/*,video/*\"\r\n                multiple\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n                onChange={handleImageUpload}\r\n            />\r\n            <button type=\"button\" onClick={handleAudioClick}>\r\n                {isRecording ? (<img src={microfonSelected} alt=\"audio\" />) : (<img src={microfon} alt=\"audio\" />)}\r\n            </button>\r\n\r\n            <button type=\"submit\"><img src={arrow} alt=\"send\" /></button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default MessageInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}