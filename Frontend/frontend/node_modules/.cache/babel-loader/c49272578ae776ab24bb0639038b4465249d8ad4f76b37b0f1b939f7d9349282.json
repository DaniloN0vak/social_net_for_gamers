{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\custom-audio-player\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styles from './CustomAudioPlayer.module.css';\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\nimport play from '../../../assets/images/custom-audio-player/play.png';\nimport AudioTimer from '../audio-recorder/AudioTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTime(sec) {\n  const minutes = Math.floor(sec / 60);\n  const seconds = Math.floor(sec % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n}\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n      setIsPlaying(true);\n    } else {\n      audio.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    if (!isNaN(audio.duration) && audio.duration > 0) {\n      setCurrentTime(audio.currentTime);\n      setProgress(audio.currentTime / audio.duration * 100);\n    }\n  };\n  const handleLoadedMetadata = () => {\n    const audio = audioRef.current;\n    setDuration(audio.duration);\n    // до проигрывания показываем полную длину в таймере\n    setCurrentTime(0);\n    setProgress(0);\n  };\n  const handleProgressClick = e => {\n    if (duration <= 0) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const newProgress = clickX / rect.width;\n    const audio = audioRef.current;\n    audio.currentTime = newProgress * audio.duration;\n    setCurrentTime(audio.currentTime);\n    setProgress(newProgress * 100);\n  };\n  useEffect(() => {\n    const audio = audioRef.current;\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n    return () => {\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n    };\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: () => setIsPlaying(false),\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: togglePlay,\n      className: styles.playButton,\n      \"aria-label\": isPlaying ? 'Pause audio' : 'Play audio',\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pause,\n        alt: \"Pause\",\n        className: styles.play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: play,\n        alt: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      onClick: handleProgressClick,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": duration,\n      \"aria-valuenow\": currentTime,\n      tabIndex: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.timer,\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomAudioPlayer, \"W4K5VeO2fxA/wKncmGs8m6wbArA=\");\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styles","pause","play","AudioTimer","jsxDEV","_jsxDEV","formatTime","sec","minutes","Math","floor","seconds","toString","padStart","CustomAudioPlayer","src","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","duration","setDuration","currentTime","setCurrentTime","togglePlay","audio","current","paused","handleTimeUpdate","isNaN","handleLoadedMetadata","handleProgressClick","e","rect","currentTarget","getBoundingClientRect","clickX","clientX","left","newProgress","width","addEventListener","removeEventListener","className","audioPlayer","children","ref","onTimeUpdate","onEnded","preload","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","playButton","alt","progressBar","role","tabIndex","style","timer","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/custom-audio-player/CustomAudioPlayer.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport styles from './CustomAudioPlayer.module.css';\r\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\r\nimport play from '../../../assets/images/custom-audio-player/play.png';\r\nimport AudioTimer from '../audio-recorder/AudioTimer';\r\n\r\nfunction formatTime(sec) {\r\n  const minutes = Math.floor(sec / 60);\r\n  const seconds = Math.floor(sec % 60);\r\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n}\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n  const audioRef = useRef(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  const togglePlay = () => {\r\n    const audio = audioRef.current;\r\n    if (audio.paused) {\r\n      audio.play();\r\n      setIsPlaying(true);\r\n    } else {\r\n      audio.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    const audio = audioRef.current;\r\n    if (!isNaN(audio.duration) && audio.duration > 0) {\r\n      setCurrentTime(audio.currentTime);\r\n      setProgress((audio.currentTime / audio.duration) * 100);\r\n    }\r\n  };\r\n\r\n  const handleLoadedMetadata = () => {\r\n    const audio = audioRef.current;\r\n    setDuration(audio.duration);\r\n    // до проигрывания показываем полную длину в таймере\r\n    setCurrentTime(0);\r\n    setProgress(0);\r\n  };\r\n\r\n  const handleProgressClick = (e) => {\r\n    if (duration <= 0) return;\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const clickX = e.clientX - rect.left;\r\n    const newProgress = clickX / rect.width;\r\n    const audio = audioRef.current;\r\n    audio.currentTime = newProgress * audio.duration;\r\n    setCurrentTime(audio.currentTime);\r\n    setProgress(newProgress * 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const audio = audioRef.current;\r\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n    return () => {\r\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n    };\r\n  }, [src]);\r\n\r\n  return (\r\n    <div className={styles.audioPlayer}>\r\n      <audio\r\n        ref={audioRef}\r\n        src={src}\r\n        onTimeUpdate={handleTimeUpdate}\r\n        onEnded={() => setIsPlaying(false)}\r\n        preload=\"metadata\"\r\n      />\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={togglePlay}\r\n        className={styles.playButton}\r\n        aria-label={isPlaying ? 'Pause audio' : 'Play audio'}\r\n      >\r\n        {isPlaying\r\n          ? <img src={pause} alt=\"Pause\" className={styles.play} />\r\n          : <img src={play} alt=\"Play\" />}\r\n      </button>\r\n\r\n      <div\r\n        className={styles.progressBar}\r\n        onClick={handleProgressClick}\r\n        role=\"progressbar\"\r\n        aria-valuemin={0}\r\n        aria-valuemax={duration}\r\n        aria-valuenow={currentTime}\r\n        tabIndex={0}\r\n      >\r\n        <div\r\n          className={styles.progress}\r\n          style={{ width: `${progress}%` }}\r\n        />\r\n      </div>\r\n\r\n      {/* Таймер показывающий текущий и общий прогресс */}\r\n      <div className={styles.timer}>\r\n        {formatTime(currentTime)} / {formatTime(duration)}\r\n      </div>\r\n\r\n      {/* Если вы всё же хотите использовать AudioTimer */}\r\n      {/* <AudioTimer \r\n          isPaused={!isPlaying} \r\n          time={isPlaying ? currentTime : duration} \r\n          withDot={false} \r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}