{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\picker-containers\\\\emoji-picker-container\\\\EmojiPickerContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ModalChatContainer from \"../../modal-chat-container/ModalChatContainer\";\nimport EmojiPicker from \"../../emoji-picker/EmojiPicker\";\nimport useOutsideClick from \"../../modal-chat-container/useOutsideClick\";\nimport smiley from '../../../../assets/images/message-form/smiley.png';\nimport smileySelected from '../../../../assets/images/message-form/smiley-selected.png';\nimport useLocalStorage from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EmojiPickerContainer({\n  setMessage,\n  textareaRef,\n  handleInput,\n  backColor,\n  inFileArea = false\n}) {\n  _s();\n  const emojiPickerRef = useRef(null);\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  useOutsideClick(emojiPickerRef, () => setIsEmojiPickerOpen(false), isEmojiPickerOpen);\n  const handleEmojiClick = useCallback(() => {\n    setIsEmojiPickerOpen(prev => !prev);\n  }, []);\n  const [mainEmojis, setMainEmojis] = useLocalStorage('mainEmojis', []);\n  const handleEmojiSelect = useCallback(emoji => {\n    if (!textareaRef.current) return;\n    const textarea = textareaRef.current;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const value = textarea.value;\n    const newValue = value.slice(0, start) + emoji + value.slice(end);\n    textarea.value = newValue;\n    textarea.focus();\n    textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\n    handleInput();\n    setMessage(newValue);\n    setMainEmojis(prevMainEmojis => {\n      const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\n      return newList.slice(0, 44);\n    });\n  }, [handleInput, setMainEmojis, setMessage, textareaRef]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleEmojiClick,\n      \"aria-label\": isEmojiPickerOpen ? \"Закрыть выбор эмодзи\" : \"Открыть выбор эмодзи\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isEmojiPickerOpen ? smileySelected : smiley,\n        alt: \"emoji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), isEmojiPickerOpen && /*#__PURE__*/_jsxDEV(ModalChatContainer, {\n      backColor: backColor,\n      elementRef: emojiPickerRef,\n      inFileArea: inFileArea,\n      children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onSelect: handleEmojiSelect,\n        mainEmojis: mainEmojis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(EmojiPickerContainer, \"/URfjejbfZa+BXmHVJOYMIsVkaQ=\", false, function () {\n  return [useOutsideClick, useLocalStorage];\n});\n_c = EmojiPickerContainer;\nEmojiPickerContainer.propTypes = {\n  setMessage: PropTypes.func.isRequired,\n  textareaRef: PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  }).isRequired,\n  handleInput: PropTypes.func.isRequired\n};\nexport default _c2 = /*#__PURE__*/React.memo(EmojiPickerContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmojiPickerContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useRef","useCallback","PropTypes","ModalChatContainer","EmojiPicker","useOutsideClick","smiley","smileySelected","useLocalStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","EmojiPickerContainer","setMessage","textareaRef","handleInput","backColor","inFileArea","_s","emojiPickerRef","isEmojiPickerOpen","setIsEmojiPickerOpen","handleEmojiClick","prev","mainEmojis","setMainEmojis","handleEmojiSelect","emoji","current","textarea","start","selectionStart","end","selectionEnd","value","newValue","slice","focus","length","prevMainEmojis","newList","filter","e","children","type","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","elementRef","onSelect","_c","propTypes","func","isRequired","shape","instanceOf","Element","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/picker-containers/emoji-picker-container/EmojiPickerContainer.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ModalChatContainer from \"../../modal-chat-container/ModalChatContainer\";\r\nimport EmojiPicker from \"../../emoji-picker/EmojiPicker\";\r\nimport useOutsideClick from \"../../modal-chat-container/useOutsideClick\";\r\nimport smiley from '../../../../assets/images/message-form/smiley.png';\r\nimport smileySelected from '../../../../assets/images/message-form/smiley-selected.png';\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\n\r\n\r\nfunction EmojiPickerContainer({ setMessage, textareaRef, handleInput, backColor, inFileArea = false }) {\r\n    const emojiPickerRef = useRef(null);\r\n    const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\r\n\r\n    useOutsideClick(emojiPickerRef, () => setIsEmojiPickerOpen(false), isEmojiPickerOpen);\r\n\r\n    const handleEmojiClick = useCallback(() => {\r\n        setIsEmojiPickerOpen((prev) => !prev);\r\n    }, []);\r\n\r\n    const [mainEmojis, setMainEmojis] = useLocalStorage('mainEmojis', []);\r\n\r\n    const handleEmojiSelect = useCallback((emoji) => {\r\n        if (!textareaRef.current) return;\r\n\r\n        const textarea = textareaRef.current;\r\n        const start = textarea.selectionStart;\r\n        const end = textarea.selectionEnd;\r\n        const value = textarea.value;\r\n\r\n        const newValue = value.slice(0, start) + emoji + value.slice(end);\r\n        textarea.value = newValue;\r\n        textarea.focus();\r\n        textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\r\n\r\n        handleInput();\r\n        setMessage(newValue);\r\n\r\n        setMainEmojis((prevMainEmojis) => {\r\n            const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\r\n            return newList.slice(0, 44);\r\n        });\r\n    }, [handleInput, setMainEmojis, setMessage, textareaRef]);\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                onClick={handleEmojiClick}\r\n                aria-label={isEmojiPickerOpen ? \"Закрыть выбор эмодзи\" : \"Открыть выбор эмодзи\"}\r\n            >\r\n                <img src={isEmojiPickerOpen ? smileySelected : smiley} alt=\"emoji\" />\r\n            </button>\r\n            {isEmojiPickerOpen && (\r\n                <ModalChatContainer backColor={backColor} elementRef={emojiPickerRef} inFileArea={inFileArea}>\r\n                    <EmojiPicker onSelect={handleEmojiSelect} mainEmojis={mainEmojis} />\r\n                </ModalChatContainer>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nEmojiPickerContainer.propTypes = {\r\n    setMessage: PropTypes.func.isRequired,\r\n    textareaRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\r\n    handleInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(EmojiPickerContainer);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}