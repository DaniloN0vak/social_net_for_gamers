{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\MediaPreview.js\";\nimport React from 'react';\nimport styles from '../styles/MediaPreview.module.css';\nimport CustomAudioPlayer from './CustomAudioPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaPreview(props) {\n  const {\n    mediaList,\n    gifList,\n    onRemove\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.previewContainer,\n    children: [mediaList.map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: media.type === 'audio' ? styles.audioContainer : styles.itemContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: media.type === 'audio' ? styles.audio : styles.previewItem,\n        children: [media.type === 'image' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: media.src,\n          alt: \"preview\",\n          className: styles.previewMedia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 29\n        }, this), (media.type === 'video' || media.type === 'gif') && /*#__PURE__*/_jsxDEV(\"video\", {\n          src: media.src,\n          className: styles.previewMedia,\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this), media.type === 'audio' && /*#__PURE__*/_jsxDEV(CustomAudioPlayer, {\n          src: media.src\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: media.type === 'audio' ? styles.btnAudio : styles.removeButton,\n          onClick: () => onRemove(media),\n          \"aria-label\": \"Remove media\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this)\n    }, media.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)), gifList.map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.itemContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.previewItem,\n        children: [media.type === 'selected_gif' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: media.src,\n          alt: \"preview\",\n          className: styles.previewMedia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.removeButton,\n          onClick: () => onRemove(media),\n          \"aria-label\": \"Remove media\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, media.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = MediaPreview;\nexport default _c2 = /*#__PURE__*/React.memo(MediaPreview);\nvar _c, _c2;\n$RefreshReg$(_c, \"MediaPreview\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","styles","CustomAudioPlayer","jsxDEV","_jsxDEV","MediaPreview","props","mediaList","gifList","onRemove","className","previewContainer","children","map","media","type","audioContainer","itemContainer","audio","previewItem","src","alt","previewMedia","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","loop","muted","playsInline","btnAudio","removeButton","onClick","id","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/MediaPreview.js"],"sourcesContent":["import React from 'react';\r\nimport styles from '../styles/MediaPreview.module.css';\r\nimport CustomAudioPlayer from './CustomAudioPlayer';\r\n\r\nfunction MediaPreview(props) {\r\n    const { mediaList, gifList, onRemove } = props;\r\n\r\n    return (\r\n        <div className={styles.previewContainer}>\r\n            {mediaList.map((media) => (\r\n                <div key={media.id} className={media.type === 'audio' ? styles.audioContainer : styles.itemContainer}>\r\n                    <div className={media.type === 'audio' ? styles.audio : styles.previewItem}>\r\n                        {media.type === 'image' && (\r\n                            <img src={media.src} alt=\"preview\" className={styles.previewMedia} />\r\n                        )}\r\n                        {(media.type === 'video' || media.type === 'gif') && (\r\n                            <video\r\n                                src={media.src}\r\n                                className={styles.previewMedia}\r\n                                autoPlay\r\n                                loop\r\n                                muted\r\n                                playsInline\r\n                            />\r\n                        )}\r\n                        {media.type === 'audio' && (\r\n                            <CustomAudioPlayer\r\n                                src={media.src}\r\n                            />\r\n                        )}\r\n                        <button\r\n                            type=\"button\"\r\n                            className={media.type === 'audio' ? styles.btnAudio : styles.removeButton}\r\n                            onClick={() => onRemove(media)}\r\n                            aria-label=\"Remove media\"\r\n                        >\r\n                            ×\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {gifList.map((media) => (\r\n                <div key={media.id} className={styles.itemContainer}>\r\n                    <div className={styles.previewItem}>\r\n                        {media.type === 'selected_gif' && (\r\n                            <img src={media.src} alt=\"preview\" className={styles.previewMedia} />\r\n                        )}\r\n                        <button\r\n                            type=\"button\"\r\n                            className={styles.removeButton}\r\n                            onClick={() => onRemove(media)}\r\n                            aria-label=\"Remove media\"\r\n                        >\r\n                            ×\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(MediaPreview);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}