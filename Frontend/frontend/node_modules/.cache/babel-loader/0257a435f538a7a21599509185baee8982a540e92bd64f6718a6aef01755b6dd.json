{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\EmojiPicker.js\",\n  _s = $RefreshSig$();\nimport { useRef, useMemo, memo } from 'react';\nimport styles from '../styles/EmojiPicker.module.css';\nimport emojiData from 'unicode-emoji-json/data-by-group';\nimport DataSeparator from './DataSeparator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = props => {\n  _s();\n  const {\n    onSelect,\n    mainEmojis\n  } = props;\n  const groupRefs = useRef({});\n  const emojis = useMemo(() => Object.entries(emojiData), []);\n  const handleScrollToGroup = groupKey => {\n    const ref = groupRefs.current[groupKey];\n    if (ref) {\n      ref.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  const renderNavigation = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nav,\n    children: emojis.map(([groupKey, data]) => {\n      var _data$emojis$;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.emoji,\n        onClick: () => handleScrollToGroup(groupKey),\n        type: \"button\",\n        title: data.name,\n        children: ((_data$emojis$ = data.emojis[0]) === null || _data$emojis$ === void 0 ? void 0 : _data$emojis$.emoji) || '❓'\n      }, groupKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n  const renderEmojis = () => emojis.map(([groupKey, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => groupRefs.current[groupKey] = el,\n    className: styles.groupContainer,\n    children: [/*#__PURE__*/_jsxDEV(DataSeparator, {\n      styleContainer: {\n        marginTop: '14px'\n      },\n      styleText: {\n        fontSize: '14px',\n        fontWeight: '400',\n        fontFamily: '\"Ralaway\" sans-serif',\n        color: '#ADADBD',\n        margin: '0 15px',\n        letterSpacing: '0%'\n      },\n      data: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), data.emojis.map(emojiData => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSelect(emojiData.emoji),\n      className: styles.emoji,\n      type: \"button\",\n      \"aria-label\": emojiData.name,\n      title: emojiData.name,\n      children: emojiData.emoji\n    }, emojiData.emoji, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this))]\n  }, groupKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [renderNavigation(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emojiSection,\n      children: renderEmojis()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(EmojiPicker, \"O5mzsbJSvJHcme5UQSywpMoFXqQ=\");\n_c = EmojiPicker;\nexport default _c2 = /*#__PURE__*/memo(EmojiPicker);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmojiPicker\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useRef","useMemo","memo","styles","emojiData","DataSeparator","jsxDEV","_jsxDEV","EmojiPicker","props","_s","onSelect","mainEmojis","groupRefs","emojis","Object","entries","handleScrollToGroup","groupKey","ref","current","scrollIntoView","behavior","block","renderNavigation","className","nav","children","map","data","_data$emojis$","emoji","onClick","type","title","name","fileName","_jsxFileName","lineNumber","columnNumber","renderEmojis","el","groupContainer","styleContainer","marginTop","styleText","fontSize","fontWeight","fontFamily","color","margin","letterSpacing","container","emojiSection","_c","_c2","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/EmojiPicker.js"],"sourcesContent":["import { useRef, useMemo, memo } from 'react';\r\nimport styles from '../styles/EmojiPicker.module.css';\r\nimport emojiData from 'unicode-emoji-json/data-by-group';\r\nimport DataSeparator from './DataSeparator';\r\n\r\nconst EmojiPicker = (props) => {\r\n\r\n    const { onSelect, mainEmojis } = props;\r\n    const groupRefs = useRef({});\r\n\r\n    const emojis = useMemo(() => Object.entries(emojiData), []);\r\n\r\n    const handleScrollToGroup = (groupKey) => {\r\n        const ref = groupRefs.current[groupKey];\r\n        if (ref) {\r\n            ref.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n    };\r\n\r\n    const renderNavigation = () => (\r\n        <div className={styles.nav}>\r\n            {emojis.map(([groupKey, data]) => (\r\n                <button\r\n                    key={groupKey}\r\n                    className={styles.emoji}\r\n                    onClick={() => handleScrollToGroup(groupKey)}\r\n                    type=\"button\"\r\n                    title={data.name}\r\n                >\r\n                    {data.emojis[0]?.emoji || '❓'}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    const renderEmojis = () => (\r\n        emojis.map(([groupKey, data]) => (\r\n            <div\r\n                key={groupKey}\r\n                ref={(el) => (groupRefs.current[groupKey] = el)}\r\n                className={styles.groupContainer}\r\n            >\r\n                <DataSeparator \r\n                styleContainer={\r\n                    {\r\n                        marginTop:'14px'\r\n                    }\r\n                }\r\n                styleText={\r\n                    {\r\n                        fontSize: '14px',\r\n                        fontWeight: '400',\r\n                        fontFamily: '\"Ralaway\" sans-serif',\r\n                        color: '#ADADBD',\r\n                        margin: '0 15px',\r\n                        letterSpacing: '0%'\r\n                    }\r\n                }\r\n                    data={data.name} />\r\n                {data.emojis.map((emojiData) => (\r\n                    <button\r\n                        key={emojiData.emoji}\r\n                        onClick={() => onSelect(emojiData.emoji)}\r\n                        className={styles.emoji}\r\n                        type=\"button\"\r\n                        aria-label={emojiData.name}\r\n                        title={emojiData.name}\r\n                    >\r\n                        {emojiData.emoji}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        ))\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {renderNavigation()}\r\n            <div className={styles.emojiSection}>\r\n                {renderEmojis()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(EmojiPicker);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}