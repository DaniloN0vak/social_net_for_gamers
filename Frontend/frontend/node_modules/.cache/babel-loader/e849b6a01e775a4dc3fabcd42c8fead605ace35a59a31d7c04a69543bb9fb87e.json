{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\picker-containers\\\\file-picker-container\\\\FilePickerContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport FilePicker from '../../file-picker/FilePicker';\nimport ModalChatContainer from '../../modal-chat-container/ModalChatContainer';\nimport useOutsideClick from '../../modal-chat-container/useOutsideClick';\nimport styles from './FilePickerContainer.module.css';\nimport attachIcon from '../../../../assets/images/message-form/cross.png';\nimport attachIconSelected from '../../../../assets/images/message-form/cross-selected.png';\nimport FilePreviewArea from '../file-preview-area/FilePreviewArea';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FilePickerContainer({\n  filesControl\n}) {\n  _s();\n  const {\n    files,\n    setFiles\n  } = filesControl;\n  const filePanelRef = useRef(null);\n  const [isFilePanelOpen, setIsFilePanelOpen] = useState(false);\n  useOutsideClick(filePanelRef, () => setIsFilePanelOpen(false), isFilePanelOpen);\n  const handleFileClick = useCallback(() => {\n    setIsFilePanelOpen(prev => !prev);\n  }, []);\n  const handleFileSelect = useCallback(files => {\n    setIsFilePanelOpen(false);\n  }, []);\n  const handleOnClose = () => {\n    setIsFilePanelOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleFileClick,\n      \"aria-label\": isFilePanelOpen ? \"Закрыть выбор файлов\" : \"Открыть выбор файлов\",\n      className: styles.filePickerButton,\n      children: isFilePanelOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: attachIconSelected,\n        alt: \"attach media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: attachIcon,\n        alt: \"attach media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 90\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), isFilePanelOpen && /*#__PURE__*/_jsxDEV(ModalChatContainer, {\n      elementRef: filePanelRef,\n      children: /*#__PURE__*/_jsxDEV(FilePicker, {\n        onFileSelect: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(FilePreviewArea, {\n      files: files,\n      onClose: handleOnClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true);\n}\n_s(FilePickerContainer, \"3v8QFy6h25J57CtpAUbSSnyw7eE=\", false, function () {\n  return [useOutsideClick];\n});\n_c = FilePickerContainer;\nvar _c;\n$RefreshReg$(_c, \"FilePickerContainer\");","map":{"version":3,"names":["React","useState","useRef","useCallback","FilePicker","ModalChatContainer","useOutsideClick","styles","attachIcon","attachIconSelected","FilePreviewArea","jsxDEV","_jsxDEV","Fragment","_Fragment","FilePickerContainer","filesControl","_s","files","setFiles","filePanelRef","isFilePanelOpen","setIsFilePanelOpen","handleFileClick","prev","handleFileSelect","handleOnClose","children","type","onClick","className","filePickerButton","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","elementRef","onFileSelect","length","onClose","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/picker-containers/file-picker-container/FilePickerContainer.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport FilePicker from '../../file-picker/FilePicker';\r\nimport ModalChatContainer from '../../modal-chat-container/ModalChatContainer';\r\nimport useOutsideClick from '../../modal-chat-container/useOutsideClick';\r\nimport styles from './FilePickerContainer.module.css';\r\nimport attachIcon from '../../../../assets/images/message-form/cross.png';\r\nimport attachIconSelected from '../../../../assets/images/message-form/cross-selected.png';\r\nimport FilePreviewArea from '../file-preview-area/FilePreviewArea';\r\n\r\nexport default function FilePickerContainer({ filesControl }) {\r\n    const { files, setFiles } = filesControl;\r\n    const filePanelRef = useRef(null);\r\n    const [isFilePanelOpen, setIsFilePanelOpen] = useState(false);\r\n\r\n    useOutsideClick(filePanelRef, () => setIsFilePanelOpen(false), isFilePanelOpen);\r\n\r\n    const handleFileClick = useCallback(() => {\r\n        setIsFilePanelOpen(prev => !prev);\r\n    }, []);\r\n\r\n    const handleFileSelect = useCallback((files) => {\r\n        setIsFilePanelOpen(false);\r\n    }, []);\r\n\r\n    const handleOnClose = () =>{\r\n        setIsFilePanelOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                onClick={handleFileClick}\r\n                aria-label={isFilePanelOpen ? \"Закрыть выбор файлов\" : \"Открыть выбор файлов\"}\r\n                className={styles.filePickerButton}\r\n            >\r\n                {isFilePanelOpen ? <img src={attachIconSelected} alt=\"attach media\" /> : <img src={attachIcon} alt=\"attach media\" />}\r\n            </button>\r\n\r\n            {isFilePanelOpen && (\r\n                <ModalChatContainer elementRef={filePanelRef}>\r\n                    <FilePicker onFileSelect={handleFileSelect} />\r\n                </ModalChatContainer>\r\n            )}\r\n\r\n            {files.length > 0 && <FilePreviewArea files={files} onClose={handleOnClose} />}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAC5D,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,kBAAkB,MAAM,+CAA+C;AAC9E,OAAOC,eAAe,MAAM,4CAA4C;AACxE,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,UAAU,MAAM,kDAAkD;AACzE,OAAOC,kBAAkB,MAAM,2DAA2D;AAC1F,OAAOC,eAAe,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnE,eAAe,SAASC,mBAAmBA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,YAAY;EACxC,MAAMI,YAAY,GAAGlB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAE7DK,eAAe,CAACc,YAAY,EAAE,MAAME,kBAAkB,CAAC,KAAK,CAAC,EAAED,eAAe,CAAC;EAE/E,MAAME,eAAe,GAAGpB,WAAW,CAAC,MAAM;IACtCmB,kBAAkB,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAGtB,WAAW,CAAEe,KAAK,IAAK;IAC5CI,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,aAAa,GAAGA,CAAA,KAAK;IACvBJ,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACIV,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MACIgB,IAAI,EAAC,QAAQ;MACbC,OAAO,EAAEN,eAAgB;MACzB,cAAYF,eAAe,GAAG,sBAAsB,GAAG,sBAAuB;MAC9ES,SAAS,EAAEvB,MAAM,CAACwB,gBAAiB;MAAAJ,QAAA,EAElCN,eAAe,gBAAGT,OAAA;QAAKoB,GAAG,EAAEvB,kBAAmB;QAACwB,GAAG,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGzB,OAAA;QAAKoB,GAAG,EAAExB,UAAW;QAACyB,GAAG,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChH,CAAC,EAERhB,eAAe,iBACZT,OAAA,CAACP,kBAAkB;MAACiC,UAAU,EAAElB,YAAa;MAAAO,QAAA,eACzCf,OAAA,CAACR,UAAU;QAACmC,YAAY,EAAEd;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACvB,EAEAnB,KAAK,CAACsB,MAAM,GAAG,CAAC,iBAAI5B,OAAA,CAACF,eAAe;MAACQ,KAAK,EAAEA,KAAM;MAACuB,OAAO,EAAEf;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAChF,CAAC;AAEX;AAACpB,EAAA,CAvCuBF,mBAAmB;EAAA,QAKvCT,eAAe;AAAA;AAAAoC,EAAA,GALK3B,mBAAmB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}