{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\chat-items\\\\message-list\\\\MessageGroupList.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Virtuoso } from 'react-virtuoso';\nimport MessageGroup from '../../MessageGroup';\nimport DataSeparator from '../../DataSeparator';\nimport { formatDateForSeparator, checkNewDay } from '../../../utils/dateUtils';\nimport styles from '../styles/MessageGroupList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageGroupList({\n  messages,\n  currentUserId\n}) {\n  _s();\n  const renderedItems = useMemo(() => {\n    const result = [];\n    let group = [];\n    let lastUser = null;\n    let lastDate = null;\n    messages.forEach((msg, index) => {\n      const isNewUser = msg.user.id !== lastUser;\n      const isNewDay = !lastDate || checkNewDay(lastDate, msg.sentAt);\n      if (group.length && (isNewUser || isNewDay)) {\n        result.push({\n          type: 'group',\n          messages: group,\n          isLeft: group[0].user.id !== currentUserId\n        });\n        group = [];\n      }\n      if (isNewDay) {\n        result.push({\n          type: 'date',\n          date: msg.sentAt\n        });\n      }\n      group.push(msg);\n      lastUser = msg.user.id;\n      lastDate = msg.sentAt;\n    });\n    if (group.length) {\n      result.push({\n        type: 'group',\n        messages: group,\n        isLeft: group[0].user.id !== currentUserId\n      });\n    }\n    return result;\n  }, [messages, currentUserId]);\n  const separatorStyles = {\n    styleContainer: {\n      width: '100%',\n      marginTop: '20px',\n      marginBottom: '40px',\n      color: '#2C2F36',\n      padding: '0 12.37%'\n    },\n    styleText: {\n      margin: '0 12px',\n      fontSize: '16px',\n      fontFamily: '\"Raleway\" sans-serif',\n      lineHeight: '25px',\n      letterSpacing: '0',\n      color: '#ADADBD',\n      fontWeight: '400'\n    },\n    lineColor: '#2C2F36'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Virtuoso, {\n      data: renderedItems,\n      className: styles.myScrollContainer,\n      style: {\n        height: '100%'\n      },\n      itemContent: (index, item) => {\n        if (item.type === 'group') {\n          return /*#__PURE__*/_jsxDEV(MessageGroup, {\n            messages: item.messages,\n            isLeft: item.isLeft\n          }, `group-${item.messages[0].id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this);\n        }\n        if (item.type === 'date') {\n          return /*#__PURE__*/_jsxDEV(DataSeparator, {\n            data: item.date instanceof Date ? formatDateForSeparator(item.date) : 'Невідомо',\n            separatorStyles: separatorStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      },\n      followOutput: \"smooth\",\n      initialTopMostItemIndex: renderedItems.length - 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(MessageGroupList, \"6yjJXpdUabcgWpTRKM3yzFw9kqY=\");\n_c = MessageGroupList;\nexport default _c2 = /*#__PURE__*/React.memo(MessageGroupList);\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageGroupList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useMemo","Virtuoso","MessageGroup","DataSeparator","formatDateForSeparator","checkNewDay","styles","jsxDEV","_jsxDEV","MessageGroupList","messages","currentUserId","_s","renderedItems","result","group","lastUser","lastDate","forEach","msg","index","isNewUser","user","id","isNewDay","sentAt","length","push","type","isLeft","date","separatorStyles","styleContainer","width","marginTop","marginBottom","color","padding","styleText","margin","fontSize","fontFamily","lineHeight","letterSpacing","fontWeight","lineColor","className","container","children","data","myScrollContainer","style","height","itemContent","item","fileName","_jsxFileName","lineNumber","columnNumber","Date","followOutput","initialTopMostItemIndex","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/chat-items/message-list/MessageGroupList.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { Virtuoso } from 'react-virtuoso';\r\nimport MessageGroup from '../../MessageGroup';\r\nimport DataSeparator from '../../DataSeparator';\r\nimport { formatDateForSeparator, checkNewDay } from '../../../utils/dateUtils';\r\nimport styles from '../styles/MessageGroupList.module.css';\r\n\r\nfunction MessageGroupList({ messages, currentUserId }) {\r\n    const renderedItems = useMemo(() => {\r\n        const result = [];\r\n        let group = [];\r\n        let lastUser = null;\r\n        let lastDate = null;\r\n\r\n        messages.forEach((msg, index) => {\r\n            const isNewUser = msg.user.id !== lastUser;\r\n            const isNewDay = !lastDate || checkNewDay(lastDate, msg.sentAt);\r\n\r\n            if (group.length && (isNewUser || isNewDay)) {\r\n                result.push({ type: 'group', messages: group, isLeft: group[0].user.id !== currentUserId });\r\n                group = [];\r\n            }\r\n\r\n            if (isNewDay) {\r\n                result.push({ type: 'date', date: msg.sentAt });\r\n            }\r\n\r\n            group.push(msg);\r\n            lastUser = msg.user.id;\r\n            lastDate = msg.sentAt;\r\n        });\r\n\r\n        if (group.length) {\r\n            result.push({ type: 'group', messages: group, isLeft: group[0].user.id !== currentUserId });\r\n        }\r\n\r\n        return result;\r\n    }, [messages, currentUserId]);\r\n\r\n    const separatorStyles = {\r\n        styleContainer: {\r\n            width: '100%',\r\n            marginTop: '20px',\r\n            marginBottom: '40px',\r\n            color: '#2C2F36',\r\n            padding: '0 12.37%'\r\n        },\r\n        styleText: {\r\n            margin:'0 12px',\r\n            fontSize:'16px',\r\n            fontFamily: '\"Raleway\" sans-serif',\r\n            lineHeight:'25px',\r\n            letterSpacing:'0',\r\n            color:'#ADADBD',\r\n            fontWeight:'400'\r\n        },\r\n        lineColor: '#2C2F36',\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Virtuoso\r\n                data={renderedItems}\r\n                className={styles.myScrollContainer}\r\n                style={{ height: '100%' }}\r\n                itemContent={(index, item) => {\r\n                    if (item.type === 'group') {\r\n                        return (\r\n                            <MessageGroup\r\n                                messages={item.messages}\r\n                                isLeft={item.isLeft}\r\n                                key={`group-${item.messages[0].id}`}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    if (item.type === 'date') {\r\n                        return (\r\n                            <DataSeparator\r\n                                data={\r\n                                    item.date instanceof Date\r\n                                        ? formatDateForSeparator(item.date)\r\n                                        : 'Невідомо'\r\n                                }\r\n                                separatorStyles={separatorStyles}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                }}\r\n\r\n                followOutput=\"smooth\"\r\n                initialTopMostItemIndex={renderedItems.length - 1}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(MessageGroupList);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}