{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\GifPicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styles from '../styles/GifPicker.module.css';\nimport cross from '../assets/images/gif-picker/cross.png';\nimport magnifier from '../assets/images/gif-picker/magnifier.png';\nimport selected from '../assets/images/gif-picker/selected.png';\nimport watch from '../assets/images/gif-picker/watch.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TENOR_API_KEY = 'AIzaSyBHdF6XBz7mujjoH1Sj25AiE7sdvZrJonY';\nconst TENOR_ENDPOINT = 'https://tenor.googleapis.com/v2/search';\nconst LOCAL_STORAGE_KEY = 'recent_gifs';\nfunction GifPicker({\n  onSelect,\n  setIsGifPanelOpen\n}) {\n  _s();\n  const [query, setQuery] = useState('');\n  const [gifs, setGifs] = useState([]);\n  const [tab, setTab] = useState('search'); // 'search' или 'recent'\n  const [recentGifs, setRecentGifs] = useState([]);\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\n    setRecentGifs(saved);\n  }, []);\n  const handleCloseGifPanel = () => {\n    setIsGifPanelOpen(false);\n  };\n  const handleGifClick = url => {\n    onSelect(url);\n    saveToRecent(url);\n  };\n  const saveToRecent = url => {\n    const updated = [url, ...recentGifs.filter(item => item !== url)].slice(0, 20);\n    setRecentGifs(updated);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(updated));\n  };\n  const fetchGifs = useCallback(async () => {\n    try {\n      const searchQuery = query.trim() || 'smile';\n      const url = `${TENOR_ENDPOINT}?q=${encodeURIComponent(searchQuery)}&key=${TENOR_API_KEY}&limit=48`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setGifs(data.results || []);\n      setTab('search');\n    } catch (error) {\n      console.error('Ошибка при загрузке GIF:', error);\n    }\n  }, [query]);\n  const renderGifButton = (url, key) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleGifClick(url),\n    className: styles.gifButton,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"gif\",\n      className: styles.gifImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerImages,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selected,\n          alt: \"selected\",\n          onClick: () => setTab('search'),\n          className: tab === 'search' ? styles.activeTab : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: watch,\n          alt: \"recent\",\n          onClick: () => setTab('recent'),\n          className: tab === 'recent' ? styles.activeTab : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && query.trim() && fetchGifs(),\n          className: styles.searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputImages,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: magnifier,\n            alt: \"search\",\n            className: styles.clickable,\n            onClick: () => query.trim() && fetchGifs()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cross,\n            alt: \"close\",\n            onClick: handleCloseGifPanel,\n            className: styles.clickable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gifGrid,\n      children: [tab === 'search' && gifs.map(gif => renderGifButton(gif.media_formats.tinygif.url, gif.id)), tab === 'recent' && recentGifs.map((url, idx) => renderGifButton(url, idx))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(GifPicker, \"mOiv0fqkGdvBPIPLbuVp4+cFUfg=\");\n_c = GifPicker;\nexport default GifPicker;\nvar _c;\n$RefreshReg$(_c, \"GifPicker\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styles","cross","magnifier","selected","watch","jsxDEV","_jsxDEV","TENOR_API_KEY","TENOR_ENDPOINT","LOCAL_STORAGE_KEY","GifPicker","onSelect","setIsGifPanelOpen","_s","query","setQuery","gifs","setGifs","tab","setTab","recentGifs","setRecentGifs","saved","JSON","parse","localStorage","getItem","handleCloseGifPanel","handleGifClick","url","saveToRecent","updated","filter","item","slice","setItem","stringify","fetchGifs","searchQuery","trim","encodeURIComponent","response","fetch","data","json","results","error","console","renderGifButton","key","onClick","className","gifButton","children","src","alt","gifImage","fileName","_jsxFileName","lineNumber","columnNumber","container","header","headerImages","activeTab","inputContainer","type","placeholder","value","onChange","e","target","onKeyDown","searchInput","inputImages","clickable","gifGrid","map","gif","media_formats","tinygif","id","idx","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/GifPicker.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport styles from '../styles/GifPicker.module.css';\r\nimport cross from '../assets/images/gif-picker/cross.png';\r\nimport magnifier from '../assets/images/gif-picker/magnifier.png';\r\nimport selected from '../assets/images/gif-picker/selected.png';\r\nimport watch from '../assets/images/gif-picker/watch.png';\r\n\r\nconst TENOR_API_KEY = 'AIzaSyBHdF6XBz7mujjoH1Sj25AiE7sdvZrJonY';\r\nconst TENOR_ENDPOINT = 'https://tenor.googleapis.com/v2/search';\r\nconst LOCAL_STORAGE_KEY = 'recent_gifs';\r\n\r\nfunction GifPicker({ onSelect, setIsGifPanelOpen }) {\r\n    const [query, setQuery] = useState('');\r\n    const [gifs, setGifs] = useState([]);\r\n    const [tab, setTab] = useState('search'); // 'search' или 'recent'\r\n    const [recentGifs, setRecentGifs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const saved = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\r\n        setRecentGifs(saved);\r\n    }, []);\r\n\r\n    const handleCloseGifPanel = () => {\r\n        setIsGifPanelOpen(false);\r\n    };\r\n\r\n    const handleGifClick = (url) => {\r\n        onSelect(url);\r\n        saveToRecent(url);\r\n    };\r\n\r\n    const saveToRecent = (url) => {\r\n        const updated = [url, ...recentGifs.filter(item => item !== url)].slice(0, 20);\r\n        setRecentGifs(updated);\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(updated));\r\n    };\r\n\r\n    const fetchGifs = useCallback(async () => {\r\n        try {\r\n            const searchQuery = query.trim() || 'smile';\r\n            const url = `${TENOR_ENDPOINT}?q=${encodeURIComponent(searchQuery)}&key=${TENOR_API_KEY}&limit=48`;\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setGifs(data.results || []);\r\n            setTab('search');\r\n        } catch (error) {\r\n            console.error('Ошибка при загрузке GIF:', error);\r\n        }\r\n    }, [query]);\r\n\r\n    const renderGifButton = (url, key) => (\r\n        <button\r\n            key={key}\r\n            onClick={() => handleGifClick(url)}\r\n            className={styles.gifButton}\r\n        >\r\n            <img\r\n                src={url}\r\n                alt=\"gif\"\r\n                className={styles.gifImage}\r\n            />\r\n        </button>\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                <div className={styles.headerImages}>\r\n                    <img\r\n                        src={selected}\r\n                        alt='selected'\r\n                        onClick={() => setTab('search')}\r\n                        className={tab === 'search' ? styles.activeTab : ''}\r\n                    />\r\n                    <img\r\n                        src={watch}\r\n                        alt='recent'\r\n                        onClick={() => setTab('recent')}\r\n                        className={tab === 'recent' ? styles.activeTab : ''}\r\n                    />\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Пошук\"\r\n                        value={query}\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        onKeyDown={(e) => e.key === 'Enter' && query.trim() && fetchGifs()}\r\n                        className={styles.searchInput}\r\n                    />\r\n                    <div className={styles.inputImages}>\r\n                        <img\r\n                            src={magnifier}\r\n                            alt=\"search\"\r\n                            className={styles.clickable}\r\n                            onClick={() => query.trim() && fetchGifs()}\r\n                        />\r\n                        <img\r\n                            src={cross}\r\n                            alt=\"close\"\r\n                            onClick={handleCloseGifPanel}\r\n                            className={styles.clickable}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.gifGrid}>\r\n                {tab === 'search' && gifs.map(gif =>\r\n                    renderGifButton(gif.media_formats.tinygif.url, gif.id)\r\n                )}\r\n                {tab === 'recent' && recentGifs.map((url, idx) =>\r\n                    renderGifButton(url, idx)\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}