{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\EmojiPicker.js\",\n  _s = $RefreshSig$();\nimport { useRef, useMemo, memo } from 'react';\nimport styles from '../styles/EmojiPicker.module.css';\nimport emojiData from 'unicode-emoji-json/data-by-group';\nimport DataSeparator from './DataSeparator';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = props => {\n  _s();\n  const {\n    onSelect,\n    mainEmojis\n  } = props;\n  const groupRefs = useRef({});\n  const emojis = useMemo(() => Object.entries(emojiData), []);\n  const handleScrollToGroup = groupKey => {\n    const ref = groupRefs.current[groupKey];\n    if (ref) {\n      ref.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  const renderNavigation = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nav,\n    children: [(mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.emoji,\n      onClick: () => handleScrollToGroup('frequent'),\n      type: \"button\",\n      title: \"\\u0427\\u0430\\u0441\\u0442\\u043E \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u043C\\u044B\\u0435\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2B50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), emojis.map(([groupKey, data]) => {\n      var _data$emojis$;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.emoji,\n        onClick: () => handleScrollToGroup(groupKey),\n        type: \"button\",\n        title: data.name,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: ((_data$emojis$ = data.emojis[0]) === null || _data$emojis$ === void 0 ? void 0 : _data$emojis$.emoji) || '❓'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, groupKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n  const renderEmojis = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => groupRefs.current['frequent'] = el,\n      className: styles.groupContainer,\n      children: [/*#__PURE__*/_jsxDEV(DataSeparator, {\n        styleContainer: {\n          marginTop: '14px'\n        },\n        styleText: {\n          fontSize: '14px',\n          fontWeight: '400',\n          fontFamily: '\"Raleway\", sans-serif',\n          color: '#ADADBD',\n          margin: '0 15px',\n          letterSpacing: '0%'\n        },\n        data: \"\\u0427\\u0430\\u0441\\u0442\\u043E \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u043C\\u044B\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), mainEmojis.map(emoji => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSelect(emoji),\n        className: styles.emoji,\n        type: \"button\",\n        \"aria-label\": emoji,\n        title: emoji,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", emoji]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)\n      }, emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), emojis.map(([groupKey, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => groupRefs.current[groupKey] = el,\n      className: styles.groupContainer,\n      children: [/*#__PURE__*/_jsxDEV(DataSeparator, {\n        styleContainer: {\n          marginTop: '14px'\n        },\n        styleText: {\n          fontSize: '14px',\n          fontWeight: '400',\n          fontFamily: '\"Raleway\", sans-serif',\n          color: '#ADADBD',\n          margin: '0 15px',\n          letterSpacing: '0%'\n        },\n        data: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), data.emojis.map(emojiData => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSelect(emojiData.emoji),\n        className: styles.emoji,\n        type: \"button\",\n        \"aria-label\": emojiData.name,\n        title: emojiData.name,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: emojiData.emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)\n      }, emojiData.emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this))]\n    }, groupKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [renderNavigation(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emojiSection,\n      children: renderEmojis()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(EmojiPicker, \"O5mzsbJSvJHcme5UQSywpMoFXqQ=\");\n_c = EmojiPicker;\nexport default _c2 = /*#__PURE__*/memo(EmojiPicker);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmojiPicker\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useRef","useMemo","memo","styles","emojiData","DataSeparator","jsxDEV","_jsxDEV","Fragment","_Fragment","EmojiPicker","props","_s","onSelect","mainEmojis","groupRefs","emojis","Object","entries","handleScrollToGroup","groupKey","ref","current","scrollIntoView","behavior","block","renderNavigation","className","nav","children","length","emoji","onClick","type","title","fileName","_jsxFileName","lineNumber","columnNumber","map","data","_data$emojis$","name","renderEmojis","el","groupContainer","styleContainer","marginTop","styleText","fontSize","fontWeight","fontFamily","color","margin","letterSpacing","container","emojiSection","_c","_c2","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/EmojiPicker.js"],"sourcesContent":["import { useRef, useMemo, memo } from 'react';\r\nimport styles from '../styles/EmojiPicker.module.css';\r\nimport emojiData from 'unicode-emoji-json/data-by-group';\r\nimport DataSeparator from './DataSeparator';\r\n\r\nconst EmojiPicker = (props) => {\r\n    const { onSelect, mainEmojis } = props;\r\n    const groupRefs = useRef({});\r\n\r\n    const emojis = useMemo(() => Object.entries(emojiData), []);\r\n\r\n    const handleScrollToGroup = (groupKey) => {\r\n        const ref = groupRefs.current[groupKey];\r\n        if (ref) {\r\n            ref.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n    };\r\n\r\n    const renderNavigation = () => (\r\n        <div className={styles.nav}>\r\n            {mainEmojis?.length > 0 && (\r\n                <button\r\n                    className={styles.emoji}\r\n                    onClick={() => handleScrollToGroup('frequent')}\r\n                    type=\"button\"\r\n                    title=\"Часто используемые\"\r\n                >\r\n                    <div>\r\n                        <span>⭐</span>\r\n                    </div>\r\n                </button>\r\n            )}\r\n            {emojis.map(([groupKey, data]) => (\r\n                <button\r\n                    key={groupKey}\r\n                    className={styles.emoji}\r\n                    onClick={() => handleScrollToGroup(groupKey)}\r\n                    type=\"button\"\r\n                    title={data.name}\r\n                >\r\n                    <div>\r\n                        <span>\r\n                            {data.emojis[0]?.emoji || '❓'}\r\n                        </span>\r\n                    </div>\r\n\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    const renderEmojis = () => (\r\n        <>\r\n            {mainEmojis?.length > 0 && (\r\n                <div\r\n                    ref={(el) => (groupRefs.current['frequent'] = el)}\r\n                    className={styles.groupContainer}\r\n                >\r\n                    <DataSeparator\r\n                        styleContainer={{ marginTop: '14px' }}\r\n                        styleText={{\r\n                            fontSize: '14px',\r\n                            fontWeight: '400',\r\n                            fontFamily: '\"Raleway\", sans-serif',\r\n                            color: '#ADADBD',\r\n                            margin: '0 15px',\r\n                            letterSpacing: '0%',\r\n                        }}\r\n                        data=\"Часто используемые\"\r\n                    />\r\n                    {mainEmojis.map((emoji) => (\r\n                        <button\r\n                            key={emoji}\r\n                            onClick={() => onSelect(emoji)}\r\n                            className={styles.emoji}\r\n                            type=\"button\"\r\n                            aria-label={emoji}\r\n                            title={emoji}\r\n                        >\r\n                            <div>< span> {emoji}</span></div>\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {emojis.map(([groupKey, data]) => (\r\n                <div\r\n                    key={groupKey}\r\n                    ref={(el) => (groupRefs.current[groupKey] = el)}\r\n                    className={styles.groupContainer}\r\n                >\r\n                    <DataSeparator\r\n                        styleContainer={{ marginTop: '14px' }}\r\n                        styleText={{\r\n                            fontSize: '14px',\r\n                            fontWeight: '400',\r\n                            fontFamily: '\"Raleway\", sans-serif',\r\n                            color: '#ADADBD',\r\n                            margin: '0 15px',\r\n                            letterSpacing: '0%',\r\n                        }}\r\n                        data={data.name}\r\n                    />\r\n                    {data.emojis.map((emojiData) => (\r\n                        <button\r\n                            key={emojiData.emoji}\r\n                            onClick={() => onSelect(emojiData.emoji)}\r\n                            className={styles.emoji}\r\n                            type=\"button\"\r\n                            aria-label={emojiData.name}\r\n                            title={emojiData.name}\r\n                        >\r\n                            <div><span>{emojiData.emoji}</span></div>\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {renderNavigation()}\r\n            <div className={styles.emojiSection}>\r\n                {renderEmojis()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(EmojiPicker);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}