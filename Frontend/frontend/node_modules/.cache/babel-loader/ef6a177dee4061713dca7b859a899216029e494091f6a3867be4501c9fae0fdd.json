{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\picker-containers\\\\emoji-picker-container\\\\EmojiPickerContainer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ModalChatContainer from \"../../modal-chat-container/ModalChatContainer\";\nimport EmojiPicker from \"../../emoji-picker/EmojiPicker\";\nimport useOutsideClick from \"../../modal-chat-container/useOutsideClick\";\nimport smiley from '../../../../assets/images/message-form/smiley.png';\nimport smileySelected from '../../../../assets/images/message-form/smiley-selected.png';\n\n// Кастомный хук для работы с localStorage\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction useLocalStorage(key, initialValue) {\n  _s();\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(`Failed to get localStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  });\n  const setValue = useCallback(value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(`Failed to set localStorage key \"${key}\":`, error);\n    }\n  }, [key, storedValue]);\n  return [storedValue, setValue];\n}\n_s(useLocalStorage, \"NMNBf1sDqAIsNO+LVr8i52446DY=\");\nfunction EmojiPickerContainer({\n  setMessage,\n  textareaRef,\n  handleInput\n}) {\n  _s2();\n  const emojiPickerRef = useRef(null);\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  useOutsideClick(emojiPickerRef, () => setIsEmojiPickerOpen(false), isEmojiPickerOpen);\n  const handleEmojiClick = useCallback(() => {\n    setIsEmojiPickerOpen(prev => !prev);\n  }, []);\n  const [mainEmojis, setMainEmojis] = useLocalStorage('mainEmojis', []);\n  const handleEmojiSelect = useCallback(emoji => {\n    if (!textareaRef.current) return;\n    const textarea = textareaRef.current;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const value = textarea.value;\n    const newValue = value.slice(0, start) + emoji + value.slice(end);\n    textarea.value = newValue;\n    textarea.focus();\n    textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\n    handleInput();\n    setMessage(newValue);\n    setMainEmojis(prevMainEmojis => {\n      const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\n      return newList.slice(0, 44);\n    });\n  }, [handleInput, setMainEmojis, setMessage, textareaRef]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleEmojiClick,\n      \"aria-label\": isEmojiPickerOpen ? \"Закрыть выбор эмодзи\" : \"Открыть выбор эмодзи\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isEmojiPickerOpen ? smileySelected : smiley,\n        alt: \"emoji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), isEmojiPickerOpen && /*#__PURE__*/_jsxDEV(ModalChatContainer, {\n      elementRef: emojiPickerRef,\n      children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onSelect: handleEmojiSelect,\n        mainEmojis: mainEmojis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s2(EmojiPickerContainer, \"/URfjejbfZa+BXmHVJOYMIsVkaQ=\", false, function () {\n  return [useOutsideClick, useLocalStorage];\n});\n_c = EmojiPickerContainer;\nEmojiPickerContainer.propTypes = {\n  setMessage: PropTypes.func.isRequired,\n  textareaRef: PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  }).isRequired,\n  handleInput: PropTypes.func.isRequired\n};\nexport default _c2 = /*#__PURE__*/React.memo(EmojiPickerContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmojiPickerContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useRef","useCallback","PropTypes","ModalChatContainer","EmojiPicker","useOutsideClick","smiley","smileySelected","jsxDEV","_jsxDEV","Fragment","_Fragment","useLocalStorage","key","initialValue","_s","storedValue","setStoredValue","item","localStorage","getItem","JSON","parse","error","console","setValue","value","valueToStore","Function","setItem","stringify","EmojiPickerContainer","setMessage","textareaRef","handleInput","_s2","emojiPickerRef","isEmojiPickerOpen","setIsEmojiPickerOpen","handleEmojiClick","prev","mainEmojis","setMainEmojis","handleEmojiSelect","emoji","current","textarea","start","selectionStart","end","selectionEnd","newValue","slice","focus","length","prevMainEmojis","newList","filter","e","children","type","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","elementRef","onSelect","_c","propTypes","func","isRequired","shape","instanceOf","Element","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/picker-containers/emoji-picker-container/EmojiPickerContainer.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ModalChatContainer from \"../../modal-chat-container/ModalChatContainer\";\r\nimport EmojiPicker from \"../../emoji-picker/EmojiPicker\";\r\nimport useOutsideClick from \"../../modal-chat-container/useOutsideClick\";\r\nimport smiley from '../../../../assets/images/message-form/smiley.png';\r\nimport smileySelected from '../../../../assets/images/message-form/smiley-selected.png';\r\n\r\n// Кастомный хук для работы с localStorage\r\nfunction useLocalStorage(key, initialValue) {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            console.error(`Failed to get localStorage key \"${key}\":`, error);\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    const setValue = useCallback((value) => {\r\n        try {\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore);\r\n            localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n            console.error(`Failed to set localStorage key \"${key}\":`, error);\r\n        }\r\n    }, [key, storedValue]);\r\n\r\n    return [storedValue, setValue];\r\n}\r\n\r\nfunction EmojiPickerContainer({ setMessage, textareaRef, handleInput }) {\r\n    const emojiPickerRef = useRef(null);\r\n    const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\r\n\r\n    useOutsideClick(emojiPickerRef, () => setIsEmojiPickerOpen(false), isEmojiPickerOpen);\r\n\r\n    const handleEmojiClick = useCallback(() => {\r\n        setIsEmojiPickerOpen((prev) => !prev);\r\n    }, []);\r\n\r\n    const [mainEmojis, setMainEmojis] = useLocalStorage('mainEmojis', []);\r\n\r\n    const handleEmojiSelect = useCallback((emoji) => {\r\n        if (!textareaRef.current) return;\r\n\r\n        const textarea = textareaRef.current;\r\n        const start = textarea.selectionStart;\r\n        const end = textarea.selectionEnd;\r\n        const value = textarea.value;\r\n\r\n        const newValue = value.slice(0, start) + emoji + value.slice(end);\r\n        textarea.value = newValue;\r\n        textarea.focus();\r\n        textarea.selectionStart = textarea.selectionEnd = start + emoji.length;\r\n\r\n        handleInput();\r\n        setMessage(newValue);\r\n\r\n        setMainEmojis((prevMainEmojis) => {\r\n            const newList = [emoji, ...prevMainEmojis.filter(e => e !== emoji)];\r\n            return newList.slice(0, 44);\r\n        });\r\n    }, [handleInput, setMainEmojis, setMessage, textareaRef]);\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                onClick={handleEmojiClick}\r\n                aria-label={isEmojiPickerOpen ? \"Закрыть выбор эмодзи\" : \"Открыть выбор эмодзи\"}\r\n            >\r\n                <img src={isEmojiPickerOpen ? smileySelected : smiley} alt=\"emoji\" />\r\n            </button>\r\n            {isEmojiPickerOpen && (\r\n                <ModalChatContainer elementRef={emojiPickerRef}>\r\n                    <EmojiPicker onSelect={handleEmojiSelect} mainEmojis={mainEmojis} />\r\n                </ModalChatContainer>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nEmojiPickerContainer.propTypes = {\r\n    setMessage: PropTypes.func.isRequired,\r\n    textareaRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\r\n    handleInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(EmojiPickerContainer);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}