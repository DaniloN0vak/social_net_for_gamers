{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Frontend\\\\frontend\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport styles from '../styles/Message.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatRelativeDateTime(dateParameter) {\n  const now = new Date();\n  const date = dateParameter;\n  const pad = n => n.toString().padStart(2, '0');\n  const time = `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n  const isSameDay = (d1, d2) => d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();\n  const yesterday = new Date();\n  yesterday.setDate(now.getDate() - 1);\n  if (isSameDay(date, now)) {\n    return `сьогодні ${time}`;\n  } else if (isSameDay(date, yesterday)) {\n    return `вчора ${time}`;\n  } else {\n    return `${pad(date.getDate())}.${pad(date.getMonth() + 1)}.${date.getFullYear()} ${time}`;\n  }\n}\nconst Message = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(function Message(props) {\n  _s();\n  const {\n    content,\n    sentAt,\n    isEdited,\n    isRead,\n    images,\n    user,\n    isLeft\n  } = props;\n  const photosElements = useMemo(() => {\n    return images.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: `photo-${index}`,\n      className: styles.contentPhoto\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this));\n  }, [images]);\n  const message = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.main} ${isLeft ? styles.mainLeft : styles.mainRight}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.info}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.infoImage,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avatar,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: (user === null || user === void 0 ? void 0 : user.avatar) || '/default-avatar.png',\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.infoName,\n        children: [user.firstName, \" \", user.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.infoTime,\n        children: formatRelativeDateTime(sentAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentText,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), images && images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.contentPhotos} ${styles[`contentPhotos${images.length}`]}`,\n        children: photosElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), isEdited && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.isEdited,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Edited\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n  return message;\n}, \"4k0Lp+rR0WBQMQNha75KM6d9h5M=\")), \"4k0Lp+rR0WBQMQNha75KM6d9h5M=\");\n_c2 = Message;\nexport default Message;\nvar _c, _c2;\n$RefreshReg$(_c, \"Message$React.memo\");\n$RefreshReg$(_c2, \"Message\");","map":{"version":3,"names":["React","useMemo","styles","jsxDEV","_jsxDEV","formatRelativeDateTime","dateParameter","now","Date","date","pad","n","toString","padStart","time","getHours","getMinutes","isSameDay","d1","d2","getDate","getMonth","getFullYear","yesterday","setDate","Message","_s","memo","_c","props","content","sentAt","isEdited","isRead","images","user","isLeft","photosElements","map","url","index","src","alt","className","contentPhoto","fileName","_jsxFileName","lineNumber","columnNumber","message","main","mainLeft","mainRight","children","info","infoImage","avatar","infoName","firstName","lastName","infoTime","contentText","length","contentPhotos","_c2","$RefreshReg$"],"sources":["D:/Diplomarbeit/Frontend/frontend/src/components/Message.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport styles from '../styles/Message.module.css'\r\n\r\nfunction formatRelativeDateTime(dateParameter) {\r\n    const now = new Date();\r\n    const date = dateParameter;\r\n\r\n    const pad = (n) => n.toString().padStart(2, '0');\r\n    const time = `${pad(date.getHours())}:${pad(date.getMinutes())}`;\r\n\r\n    const isSameDay = (d1, d2) =>\r\n        d1.getDate() === d2.getDate() &&\r\n        d1.getMonth() === d2.getMonth() &&\r\n        d1.getFullYear() === d2.getFullYear();\r\n\r\n    const yesterday = new Date();\r\n    yesterday.setDate(now.getDate() - 1);\r\n\r\n    if (isSameDay(date, now)) {\r\n        return `сьогодні ${time}`;\r\n    } else if (isSameDay(date, yesterday)) {\r\n        return `вчора ${time}`;\r\n    } else {\r\n        return `${pad(date.getDate())}.${pad(date.getMonth() + 1)}.${date.getFullYear()} ${time}`;\r\n    }\r\n}\r\n\r\nconst Message = React.memo(function Message(props) {\r\n    const { content, sentAt, isEdited, isRead, images, user, isLeft } = props;\r\n    const photosElements = useMemo(() => {\r\n        return images.map((url, index) => (\r\n            <img key={index} src={url} alt={`photo-${index}`} className={styles.contentPhoto} />\r\n        ));\r\n    }, [images]);\r\n\r\n\r\n    const message = (\r\n        <div className={`${styles.main} ${isLeft ? styles.mainLeft : styles.mainRight}`}>\r\n            <div className={`${styles.info}`}>\r\n                <div className={styles.infoImage}>\r\n                    <div className={styles.avatar} >\r\n                        <img src={user?.avatar || '/default-avatar.png'} alt=\"Avatar\" />\r\n                    </div>\r\n                </div>\r\n                <div className={styles.infoName}>\r\n                    {user.firstName} {user.lastName}\r\n                </div>\r\n                <div className={styles.infoTime}>\r\n                    {formatRelativeDateTime(sentAt)}\r\n                </div>\r\n                {/* <div className={styles.isRead}>\r\n                    {isRead ? <p>Read</p> : <p>Not read</p>}\r\n                </div> */}\r\n            </div>\r\n            <div className={styles.content}>\r\n                <div className={styles.contentText}>\r\n                    {content}\r\n                </div>\r\n                {images && images.length > 0 && (\r\n                    <div className={`${styles.contentPhotos} ${styles[`contentPhotos${images.length}`]}`}>\r\n                        {photosElements}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {isEdited && <div className={styles.isEdited}>\r\n                <span>Edited</span>\r\n            </div>}\r\n        </div>\r\n    );\r\n    return message;\r\n});\r\n\r\nexport default Message;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}