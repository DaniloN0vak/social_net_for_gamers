{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport * as signalR from '@microsoft/signalr';\nfunction useChatWebSocket(chatId, onNewMessage) {\n  _s();\n  const connectionRef = useRef(null);\n  useEffect(() => {\n    if (!chatId) return;\n    const connection = new signalR.HubConnectionBuilder().withUrl(`${process.env.REACT_APP_API_URL}/chatHub?chatId=${chatId}`).withAutomaticReconnect().build();\n    connectionRef.current = connection;\n    const startConnection = async () => {\n      try {\n        await connection.start();\n        console.log('SignalR connected');\n        connection.on('ReceiveMessage', (receivedChatId, userId, message) => {\n          if (String(receivedChatId) === String(chatId)) {\n            onNewMessage(message);\n          }\n        });\n      } catch (err) {\n        console.error('SignalR error:', err);\n      }\n    };\n    startConnection();\n    return () => {\n      if (connection) {\n        connection.off('ReceiveMessage');\n        connection.stop().then(() => console.log('SignalR disconnected'));\n      }\n    };\n  }, [chatId, onNewMessage]);\n}\n_s(useChatWebSocket, \"Q75jzstoj70Xl4uzOerrVl9m/vI=\");\nexport default useChatWebSocket;","map":{"version":3,"names":["useEffect","useRef","signalR","useChatWebSocket","chatId","onNewMessage","_s","connectionRef","connection","HubConnectionBuilder","withUrl","process","env","REACT_APP_API_URL","withAutomaticReconnect","build","current","startConnection","start","console","log","on","receivedChatId","userId","message","String","err","error","off","stop","then"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/chat-items/main/components/useChatWebSocket.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\nfunction useChatWebSocket(chatId, onNewMessage) {\r\n  const connectionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!chatId) return;\r\n\r\n    const connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(`${process.env.REACT_APP_API_URL}/chatHub?chatId=${chatId}`)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    connectionRef.current = connection;\r\n\r\n    const startConnection = async () => {\r\n      try {\r\n        await connection.start();\r\n        console.log('SignalR connected');\r\n\r\n        connection.on('ReceiveMessage', (receivedChatId, userId, message) => {\r\n          if (String(receivedChatId) === String(chatId)) {\r\n            onNewMessage(message);\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.error('SignalR error:', err);\r\n      }\r\n    };\r\n\r\n    startConnection();\r\n\r\n    return () => {\r\n      if (connection) {\r\n        connection.off('ReceiveMessage');\r\n        connection.stop().then(() => console.log('SignalR disconnected'));\r\n      }\r\n    };\r\n  }, [chatId, onNewMessage]);\r\n}\r\n\r\nexport default useChatWebSocket;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAE7C,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,YAAY,EAAE;EAAAC,EAAA;EAC9C,MAAMC,aAAa,GAAGN,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,MAAM,EAAE;IAEb,MAAMI,UAAU,GAAG,IAAIN,OAAO,CAACO,oBAAoB,CAAC,CAAC,CAClDC,OAAO,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,mBAAmBT,MAAM,EAAE,CAAC,CACpEU,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;IAEVR,aAAa,CAACS,OAAO,GAAGR,UAAU;IAElC,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMT,UAAU,CAACU,KAAK,CAAC,CAAC;QACxBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAEhCZ,UAAU,CAACa,EAAE,CAAC,gBAAgB,EAAE,CAACC,cAAc,EAAEC,MAAM,EAAEC,OAAO,KAAK;UACnE,IAAIC,MAAM,CAACH,cAAc,CAAC,KAAKG,MAAM,CAACrB,MAAM,CAAC,EAAE;YAC7CC,YAAY,CAACmB,OAAO,CAAC;UACvB;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZP,OAAO,CAACQ,KAAK,CAAC,gBAAgB,EAAED,GAAG,CAAC;MACtC;IACF,CAAC;IAEDT,eAAe,CAAC,CAAC;IAEjB,OAAO,MAAM;MACX,IAAIT,UAAU,EAAE;QACdA,UAAU,CAACoB,GAAG,CAAC,gBAAgB,CAAC;QAChCpB,UAAU,CAACqB,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAMX,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAAC;MACnE;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,MAAM,EAAEC,YAAY,CAAC,CAAC;AAC5B;AAACC,EAAA,CArCQH,gBAAgB;AAuCzB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}