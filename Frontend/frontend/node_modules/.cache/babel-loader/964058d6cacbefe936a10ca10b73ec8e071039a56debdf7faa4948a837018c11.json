{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\emoji-picker\\\\EmojiPicker.js\",\n  _s = $RefreshSig$();\nimport { useRef, useMemo, memo } from 'react';\nimport { GroupedVirtuoso } from 'react-virtuoso';\nimport styles from './EmojiPicker.module.css';\nimport emojiData from 'unicode-emoji-json/data-by-group';\nimport DataSeparator from '../data-separator/DataSeparator';\nimport animal from '../../../assets/images/emojis/animal.png';\nimport ball from '../../../assets/images/emojis/ball.png';\nimport car from '../../../assets/images/emojis/car.png';\nimport diff from '../../../assets/images/emojis/diff.png';\nimport flag from '../../../assets/images/emojis/flag.png';\nimport food from '../../../assets/images/emojis/food.png';\nimport person from '../../../assets/images/emojis/person.png';\nimport smiley from '../../../assets/images/emojis/smiley.png';\nimport watch from '../../../assets/images/emojis/watch.png';\nimport bulb from '../../../assets/images/emojis/bulb.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = props => {\n  _s();\n  const {\n    onSelect,\n    mainEmojis\n  } = props;\n\n  // Преобразуем данные emojiData в формат групп + flat list эмодзи\n  const {\n    groupLabels,\n    emojisFlat\n  } = useMemo(() => {\n    const groups = [];\n    const emojis = [];\n    if ((mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0) {\n      groups.push('Часто використовувані');\n      emojis.push(...mainEmojis);\n    }\n    for (const [groupKey, data] of Object.entries(emojiData)) {\n      groups.push(data.name);\n      emojis.push(...data.emojis.map(e => e.emoji));\n    }\n    return {\n      groupLabels: groups,\n      emojisFlat: emojis\n    };\n  }, [mainEmojis]);\n\n  // Для отображения заголовков групп с изображениями\n  const groupImages = useMemo(() => {\n    const map = {};\n    for (const data of Object.values(emojiData)) {\n      if (data.name === 'Smileys & Emotion') map[data.name] = smiley;else if (data.name === 'People & Body') map[data.name] = person;else if (data.name === 'Animals & Nature') map[data.name] = animal;else if (data.name === 'Food & Drink') map[data.name] = food;else if (data.name === 'Travel & Places') map[data.name] = car;else if (data.name === 'Activities') map[data.name] = ball;else if (data.name === 'Objects') map[data.name] = bulb;else if (data.name === 'Symbols') map[data.name] = diff;else if (data.name === 'Flags') map[data.name] = flag;\n    }\n    map['Часто використовувані'] = watch;\n    return map;\n  }, []);\n\n  // Подсчёт количества эмодзи в группах для virtuoso\n  const groupCounts = useMemo(() => {\n    const counts = [];\n    if ((mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0) counts.push(mainEmojis.length);\n    for (const data of Object.values(emojiData)) {\n      counts.push(data.emojis.length);\n    }\n    return counts;\n  }, [mainEmojis]);\n\n  // Рендер заголовка группы\n  const groupHeader = index => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.groupContainer,\n    children: /*#__PURE__*/_jsxDEV(DataSeparator, {\n      separatorStyles: {\n        styleContainer: {\n          width: '100%',\n          color: '#2C2F36',\n          marginTop: '8px'\n        },\n        styleText: {\n          fontSize: '14px',\n          fontWeight: '400',\n          fontFamily: '\"Raleway\", sans-serif',\n          color: '#ADADBD',\n          margin: '0 15px',\n          letterSpacing: '0%'\n        },\n        lineColor: '#ADADBD'\n      },\n      data: groupLabels[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  // Рендер одного эмодзи\n  const emojiIndexToData = useMemo(() => {\n    // Чтобы при выборе emoji можно было отобразить имя и aria-label, сделаем мапу emoji => name\n    const map = new Map();\n    if ((mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0) {\n      mainEmojis.forEach(e => map.set(e, e)); // для часто используемых просто emoji без имени\n    }\n    for (const data of Object.values(emojiData)) {\n      data.emojis.forEach(e => {\n        map.set(e.emoji, e.name);\n      });\n    }\n    return map;\n  }, [mainEmojis]);\n  const emojiRenderer = index => {\n    const emoji = emojisFlat[index];\n    const name = emojiIndexToData.get(emoji) || emoji;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSelect(emoji),\n      className: styles.emoji,\n      type: \"button\",\n      \"aria-label\": name,\n      title: name,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, emoji, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nav,\n      children: [(mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.emoji,\n        onClick: () => {\n          // Прокрутка к первой группе (Часто використовувані)\n          // Тут можно потом добавить scroll logic через ref, если нужно\n          // Но react-virtuoso поддерживает scrollToIndex\n          // Пока оставим пустым или реализуем ниже\n          // Будем использовать ref:\n          virtuosoRef.current.scrollToIndex({\n            index: 0,\n            align: 'start'\n          });\n        },\n        type: \"button\",\n        title: \"\\u0427\\u0430\\u0441\\u0442\\u043E \\u0432\\u0438\\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u043E\\u0432\\u0443\\u0432\\u0430\\u043D\\u0456\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: watch,\n            alt: \"watch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), Object.values(emojiData).map(data => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.emoji,\n        onClick: () => {\n          // Найти индекс группы по имени и прокрутить\n          const idx = groupLabels.indexOf(data.name);\n          if (idx !== -1) virtuosoRef.current.scrollToIndex({\n            index: groupCounts.slice(0, idx).reduce((a, b) => a + b, 0),\n            align: 'start'\n          });\n        },\n        type: \"button\",\n        title: data.name,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: groupImages[data.name],\n            alt: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, data.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emojiSection,\n      children: /*#__PURE__*/_jsxDEV(GroupedVirtuoso, {\n        ref: virtuosoRef,\n        groupCounts: groupCounts,\n        groupContent: groupHeader,\n        itemContent: emojiRenderer,\n        style: {\n          height: '350px',\n          width: '100%',\n          overflowY: 'auto'\n        },\n        increaseViewportBy: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n// import { useRef } from 'react';\n// const virtuosoRef = useRef(null);\n_s(EmojiPicker, \"4wEArxU68xcvwSxHXfNycbek09A=\");\n_c = EmojiPicker;\nexport default _c2 = /*#__PURE__*/memo(EmojiPicker);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmojiPicker\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useRef","useMemo","memo","GroupedVirtuoso","styles","emojiData","DataSeparator","animal","ball","car","diff","flag","food","person","smiley","watch","bulb","jsxDEV","_jsxDEV","EmojiPicker","props","_s","onSelect","mainEmojis","groupLabels","emojisFlat","groups","emojis","length","push","groupKey","data","Object","entries","name","map","e","emoji","groupImages","values","groupCounts","counts","groupHeader","index","className","groupContainer","children","separatorStyles","styleContainer","width","color","marginTop","styleText","fontSize","fontWeight","fontFamily","margin","letterSpacing","lineColor","fileName","_jsxFileName","lineNumber","columnNumber","emojiIndexToData","Map","forEach","set","emojiRenderer","get","onClick","type","title","container","nav","virtuosoRef","current","scrollToIndex","align","src","alt","idx","indexOf","slice","reduce","a","b","emojiSection","ref","groupContent","itemContent","style","height","overflowY","increaseViewportBy","_c","_c2","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/emoji-picker/EmojiPicker.js"],"sourcesContent":["import { useRef, useMemo, memo } from 'react';\r\nimport { GroupedVirtuoso } from 'react-virtuoso';\r\nimport styles from './EmojiPicker.module.css';\r\nimport emojiData from 'unicode-emoji-json/data-by-group';\r\nimport DataSeparator from '../data-separator/DataSeparator';\r\nimport animal from '../../../assets/images/emojis/animal.png';\r\nimport ball from '../../../assets/images/emojis/ball.png';\r\nimport car from '../../../assets/images/emojis/car.png';\r\nimport diff from '../../../assets/images/emojis/diff.png';\r\nimport flag from '../../../assets/images/emojis/flag.png';\r\nimport food from '../../../assets/images/emojis/food.png';\r\nimport person from '../../../assets/images/emojis/person.png';\r\nimport smiley from '../../../assets/images/emojis/smiley.png';\r\nimport watch from '../../../assets/images/emojis/watch.png';\r\nimport bulb from '../../../assets/images/emojis/bulb.png';\r\n\r\nconst EmojiPicker = (props) => {\r\n  const { onSelect, mainEmojis } = props;\r\n\r\n  // Преобразуем данные emojiData в формат групп + flat list эмодзи\r\n  const { groupLabels, emojisFlat } = useMemo(() => {\r\n    const groups = [];\r\n    const emojis = [];\r\n\r\n    if (mainEmojis?.length > 0) {\r\n      groups.push('Часто використовувані');\r\n      emojis.push(...mainEmojis);\r\n    }\r\n\r\n    for (const [groupKey, data] of Object.entries(emojiData)) {\r\n      groups.push(data.name);\r\n      emojis.push(...data.emojis.map(e => e.emoji));\r\n    }\r\n\r\n    return { groupLabels: groups, emojisFlat: emojis };\r\n  }, [mainEmojis]);\r\n\r\n  // Для отображения заголовков групп с изображениями\r\n  const groupImages = useMemo(() => {\r\n    const map = {};\r\n    for (const data of Object.values(emojiData)) {\r\n      if (data.name === 'Smileys & Emotion') map[data.name] = smiley;\r\n      else if (data.name === 'People & Body') map[data.name] = person;\r\n      else if (data.name === 'Animals & Nature') map[data.name] = animal;\r\n      else if (data.name === 'Food & Drink') map[data.name] = food;\r\n      else if (data.name === 'Travel & Places') map[data.name] = car;\r\n      else if (data.name === 'Activities') map[data.name] = ball;\r\n      else if (data.name === 'Objects') map[data.name] = bulb;\r\n      else if (data.name === 'Symbols') map[data.name] = diff;\r\n      else if (data.name === 'Flags') map[data.name] = flag;\r\n    }\r\n    map['Часто використовувані'] = watch;\r\n    return map;\r\n  }, []);\r\n\r\n  // Подсчёт количества эмодзи в группах для virtuoso\r\n  const groupCounts = useMemo(() => {\r\n    const counts = [];\r\n    if (mainEmojis?.length > 0) counts.push(mainEmojis.length);\r\n    for (const data of Object.values(emojiData)) {\r\n      counts.push(data.emojis.length);\r\n    }\r\n    return counts;\r\n  }, [mainEmojis]);\r\n\r\n  // Рендер заголовка группы\r\n  const groupHeader = (index) => (\r\n    <div className={styles.groupContainer}>\r\n      <DataSeparator\r\n        separatorStyles={{\r\n          styleContainer: { width: '100%', color: '#2C2F36', marginTop: '8px' },\r\n          styleText: {\r\n            fontSize: '14px',\r\n            fontWeight: '400',\r\n            fontFamily: '\"Raleway\", sans-serif',\r\n            color: '#ADADBD',\r\n            margin: '0 15px',\r\n            letterSpacing: '0%',\r\n          },\r\n          lineColor: '#ADADBD',\r\n        }}\r\n        data={groupLabels[index]}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  // Рендер одного эмодзи\r\n  const emojiIndexToData = useMemo(() => {\r\n    // Чтобы при выборе emoji можно было отобразить имя и aria-label, сделаем мапу emoji => name\r\n    const map = new Map();\r\n\r\n    if (mainEmojis?.length > 0) {\r\n      mainEmojis.forEach(e => map.set(e, e)); // для часто используемых просто emoji без имени\r\n    }\r\n\r\n    for (const data of Object.values(emojiData)) {\r\n      data.emojis.forEach(e => {\r\n        map.set(e.emoji, e.name);\r\n      });\r\n    }\r\n\r\n    return map;\r\n  }, [mainEmojis]);\r\n\r\n  const emojiRenderer = (index) => {\r\n    const emoji = emojisFlat[index];\r\n    const name = emojiIndexToData.get(emoji) || emoji;\r\n\r\n    return (\r\n      <button\r\n        key={emoji}\r\n        onClick={() => onSelect(emoji)}\r\n        className={styles.emoji}\r\n        type=\"button\"\r\n        aria-label={name}\r\n        title={name}\r\n      >\r\n        <div><span>{emoji}</span></div>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {/* Навигация групп (сохранил как было) */}\r\n      <div className={styles.nav}>\r\n        {mainEmojis?.length > 0 && (\r\n          <button\r\n            className={styles.emoji}\r\n            onClick={() => {\r\n              // Прокрутка к первой группе (Часто використовувані)\r\n              // Тут можно потом добавить scroll logic через ref, если нужно\r\n              // Но react-virtuoso поддерживает scrollToIndex\r\n              // Пока оставим пустым или реализуем ниже\r\n              // Будем использовать ref:\r\n              virtuosoRef.current.scrollToIndex({ index: 0, align: 'start' });\r\n            }}\r\n            type=\"button\"\r\n            title=\"Часто використовувані\"\r\n          >\r\n            <div><img src={watch} alt=\"watch\" /></div>\r\n          </button>\r\n        )}\r\n        {Object.values(emojiData).map(data => (\r\n          <button\r\n            key={data.name}\r\n            className={styles.emoji}\r\n            onClick={() => {\r\n              // Найти индекс группы по имени и прокрутить\r\n              const idx = groupLabels.indexOf(data.name);\r\n              if (idx !== -1) virtuosoRef.current.scrollToIndex({ index: groupCounts.slice(0, idx).reduce((a,b) => a + b, 0), align: 'start' });\r\n            }}\r\n            type=\"button\"\r\n            title={data.name}\r\n          >\r\n            <div><img src={groupImages[data.name]} alt={data.name} /></div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Сам виртуализированный список */}\r\n      <div className={styles.emojiSection}>\r\n        <GroupedVirtuoso\r\n          ref={virtuosoRef}\r\n          groupCounts={groupCounts}\r\n          groupContent={groupHeader}\r\n          itemContent={emojiRenderer}\r\n          style={{ height: '350px', width: '100%', overflowY: 'auto' }}\r\n          increaseViewportBy={100}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// import { useRef } from 'react';\r\n// const virtuosoRef = useRef(null);\r\n\r\nexport default memo(EmojiPicker);\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,OAAO,EAAEC,IAAI,QAAQ,OAAO;AAC7C,SAASC,eAAe,QAAQ,gBAAgB;AAChD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,MAAM,MAAM,0CAA0C;AAC7D,OAAOC,IAAI,MAAM,wCAAwC;AACzD,OAAOC,GAAG,MAAM,uCAAuC;AACvD,OAAOC,IAAI,MAAM,wCAAwC;AACzD,OAAOC,IAAI,MAAM,wCAAwC;AACzD,OAAOC,IAAI,MAAM,wCAAwC;AACzD,OAAOC,MAAM,MAAM,0CAA0C;AAC7D,OAAOC,MAAM,MAAM,0CAA0C;AAC7D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,IAAI,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGH,KAAK;;EAEtC;EACA,MAAM;IAAEI,WAAW;IAAEC;EAAW,CAAC,GAAGxB,OAAO,CAAC,MAAM;IAChD,MAAMyB,MAAM,GAAG,EAAE;IACjB,MAAMC,MAAM,GAAG,EAAE;IAEjB,IAAI,CAAAJ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,MAAM,IAAG,CAAC,EAAE;MAC1BF,MAAM,CAACG,IAAI,CAAC,uBAAuB,CAAC;MACpCF,MAAM,CAACE,IAAI,CAAC,GAAGN,UAAU,CAAC;IAC5B;IAEA,KAAK,MAAM,CAACO,QAAQ,EAAEC,IAAI,CAAC,IAAIC,MAAM,CAACC,OAAO,CAAC5B,SAAS,CAAC,EAAE;MACxDqB,MAAM,CAACG,IAAI,CAACE,IAAI,CAACG,IAAI,CAAC;MACtBP,MAAM,CAACE,IAAI,CAAC,GAAGE,IAAI,CAACJ,MAAM,CAACQ,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,CAAC,CAAC;IAC/C;IAEA,OAAO;MAAEb,WAAW,EAAEE,MAAM;MAAED,UAAU,EAAEE;IAAO,CAAC;EACpD,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMe,WAAW,GAAGrC,OAAO,CAAC,MAAM;IAChC,MAAMkC,GAAG,GAAG,CAAC,CAAC;IACd,KAAK,MAAMJ,IAAI,IAAIC,MAAM,CAACO,MAAM,CAAClC,SAAS,CAAC,EAAE;MAC3C,IAAI0B,IAAI,CAACG,IAAI,KAAK,mBAAmB,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAGpB,MAAM,CAAC,KAC1D,IAAIiB,IAAI,CAACG,IAAI,KAAK,eAAe,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAGrB,MAAM,CAAC,KAC3D,IAAIkB,IAAI,CAACG,IAAI,KAAK,kBAAkB,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAG3B,MAAM,CAAC,KAC9D,IAAIwB,IAAI,CAACG,IAAI,KAAK,cAAc,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAGtB,IAAI,CAAC,KACxD,IAAImB,IAAI,CAACG,IAAI,KAAK,iBAAiB,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAGzB,GAAG,CAAC,KAC1D,IAAIsB,IAAI,CAACG,IAAI,KAAK,YAAY,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAG1B,IAAI,CAAC,KACtD,IAAIuB,IAAI,CAACG,IAAI,KAAK,SAAS,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAGlB,IAAI,CAAC,KACnD,IAAIe,IAAI,CAACG,IAAI,KAAK,SAAS,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAGxB,IAAI,CAAC,KACnD,IAAIqB,IAAI,CAACG,IAAI,KAAK,OAAO,EAAEC,GAAG,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAGvB,IAAI;IACvD;IACAwB,GAAG,CAAC,uBAAuB,CAAC,GAAGpB,KAAK;IACpC,OAAOoB,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,WAAW,GAAGvC,OAAO,CAAC,MAAM;IAChC,MAAMwC,MAAM,GAAG,EAAE;IACjB,IAAI,CAAAlB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,MAAM,IAAG,CAAC,EAAEa,MAAM,CAACZ,IAAI,CAACN,UAAU,CAACK,MAAM,CAAC;IAC1D,KAAK,MAAMG,IAAI,IAAIC,MAAM,CAACO,MAAM,CAAClC,SAAS,CAAC,EAAE;MAC3CoC,MAAM,CAACZ,IAAI,CAACE,IAAI,CAACJ,MAAM,CAACC,MAAM,CAAC;IACjC;IACA,OAAOa,MAAM;EACf,CAAC,EAAE,CAAClB,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMmB,WAAW,GAAIC,KAAK,iBACxBzB,OAAA;IAAK0B,SAAS,EAAExC,MAAM,CAACyC,cAAe;IAAAC,QAAA,eACpC5B,OAAA,CAACZ,aAAa;MACZyC,eAAe,EAAE;QACfC,cAAc,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,KAAK,EAAE,SAAS;UAAEC,SAAS,EAAE;QAAM,CAAC;QACrEC,SAAS,EAAE;UACTC,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,KAAK;UACjBC,UAAU,EAAE,uBAAuB;UACnCL,KAAK,EAAE,SAAS;UAChBM,MAAM,EAAE,QAAQ;UAChBC,aAAa,EAAE;QACjB,CAAC;QACDC,SAAS,EAAE;MACb,CAAE;MACF3B,IAAI,EAAEP,WAAW,CAACmB,KAAK;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACN;;EAED;EACA,MAAMC,gBAAgB,GAAG9D,OAAO,CAAC,MAAM;IACrC;IACA,MAAMkC,GAAG,GAAG,IAAI6B,GAAG,CAAC,CAAC;IAErB,IAAI,CAAAzC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,MAAM,IAAG,CAAC,EAAE;MAC1BL,UAAU,CAAC0C,OAAO,CAAC7B,CAAC,IAAID,GAAG,CAAC+B,GAAG,CAAC9B,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C;IAEA,KAAK,MAAML,IAAI,IAAIC,MAAM,CAACO,MAAM,CAAClC,SAAS,CAAC,EAAE;MAC3C0B,IAAI,CAACJ,MAAM,CAACsC,OAAO,CAAC7B,CAAC,IAAI;QACvBD,GAAG,CAAC+B,GAAG,CAAC9B,CAAC,CAACC,KAAK,EAAED,CAAC,CAACF,IAAI,CAAC;MAC1B,CAAC,CAAC;IACJ;IAEA,OAAOC,GAAG;EACZ,CAAC,EAAE,CAACZ,UAAU,CAAC,CAAC;EAEhB,MAAM4C,aAAa,GAAIxB,KAAK,IAAK;IAC/B,MAAMN,KAAK,GAAGZ,UAAU,CAACkB,KAAK,CAAC;IAC/B,MAAMT,IAAI,GAAG6B,gBAAgB,CAACK,GAAG,CAAC/B,KAAK,CAAC,IAAIA,KAAK;IAEjD,oBACEnB,OAAA;MAEEmD,OAAO,EAAEA,CAAA,KAAM/C,QAAQ,CAACe,KAAK,CAAE;MAC/BO,SAAS,EAAExC,MAAM,CAACiC,KAAM;MACxBiC,IAAI,EAAC,QAAQ;MACb,cAAYpC,IAAK;MACjBqC,KAAK,EAAErC,IAAK;MAAAY,QAAA,eAEZ5B,OAAA;QAAA4B,QAAA,eAAK5B,OAAA;UAAA4B,QAAA,EAAOT;QAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,GAP1BzB,KAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQJ,CAAC;EAEb,CAAC;EAED,oBACE5C,OAAA;IAAK0B,SAAS,EAAExC,MAAM,CAACoE,SAAU;IAAA1B,QAAA,gBAE/B5B,OAAA;MAAK0B,SAAS,EAAExC,MAAM,CAACqE,GAAI;MAAA3B,QAAA,GACxB,CAAAvB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,MAAM,IAAG,CAAC,iBACrBV,OAAA;QACE0B,SAAS,EAAExC,MAAM,CAACiC,KAAM;QACxBgC,OAAO,EAAEA,CAAA,KAAM;UACb;UACA;UACA;UACA;UACA;UACAK,WAAW,CAACC,OAAO,CAACC,aAAa,CAAC;YAAEjC,KAAK,EAAE,CAAC;YAAEkC,KAAK,EAAE;UAAQ,CAAC,CAAC;QACjE,CAAE;QACFP,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAC,2HAAuB;QAAAzB,QAAA,eAE7B5B,OAAA;UAAA4B,QAAA,eAAK5B,OAAA;YAAK4D,GAAG,EAAE/D,KAAM;YAACgE,GAAG,EAAC;UAAO;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CACT,EACA9B,MAAM,CAACO,MAAM,CAAClC,SAAS,CAAC,CAAC8B,GAAG,CAACJ,IAAI,iBAChCb,OAAA;QAEE0B,SAAS,EAAExC,MAAM,CAACiC,KAAM;QACxBgC,OAAO,EAAEA,CAAA,KAAM;UACb;UACA,MAAMW,GAAG,GAAGxD,WAAW,CAACyD,OAAO,CAAClD,IAAI,CAACG,IAAI,CAAC;UAC1C,IAAI8C,GAAG,KAAK,CAAC,CAAC,EAAEN,WAAW,CAACC,OAAO,CAACC,aAAa,CAAC;YAAEjC,KAAK,EAAEH,WAAW,CAAC0C,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC,CAACG,MAAM,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;YAAER,KAAK,EAAE;UAAQ,CAAC,CAAC;QACnI,CAAE;QACFP,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAExC,IAAI,CAACG,IAAK;QAAAY,QAAA,eAEjB5B,OAAA;UAAA4B,QAAA,eAAK5B,OAAA;YAAK4D,GAAG,EAAExC,WAAW,CAACP,IAAI,CAACG,IAAI,CAAE;YAAC6C,GAAG,EAAEhD,IAAI,CAACG;UAAK;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,GAV1D/B,IAAI,CAACG,IAAI;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWR,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN5C,OAAA;MAAK0B,SAAS,EAAExC,MAAM,CAACkF,YAAa;MAAAxC,QAAA,eAClC5B,OAAA,CAACf,eAAe;QACdoF,GAAG,EAAEb,WAAY;QACjBlC,WAAW,EAAEA,WAAY;QACzBgD,YAAY,EAAE9C,WAAY;QAC1B+C,WAAW,EAAEtB,aAAc;QAC3BuB,KAAK,EAAE;UAAEC,MAAM,EAAE,OAAO;UAAE1C,KAAK,EAAE,MAAM;UAAE2C,SAAS,EAAE;QAAO,CAAE;QAC7DC,kBAAkB,EAAE;MAAI;QAAAlC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AACA;AAAAzC,EAAA,CAhKMF,WAAW;AAAA2E,EAAA,GAAX3E,WAAW;AAkKjB,eAAA4E,GAAA,gBAAe7F,IAAI,CAACiB,WAAW,CAAC;AAAC,IAAA2E,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}