{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport * as signalR from '@microsoft/signalr';\nfunction useChatWebSocket(chatId, onNewMessage) {\n  _s();\n  const connectionRef = useRef(null);\n  useEffect(() => {\n    const connection = new signalR.HubConnectionBuilder().withUrl(`${process.env.REACT_APP_API_URL}/chatHub?chatId=${chatId}`).withAutomaticReconnect().build();\n    connection.start().then(() => {\n      console.log('SignalR connected');\n    }).catch(console.error);\n    connection.on('ReceiveMessage', (chatId, userId, message) => {\n      console.log('Новое сообщение:', message);\n      onNewMessage({\n        chatId,\n        userId,\n        message\n      });\n    });\n    connectionRef.current = connection;\n    return () => {\n      connection.stop();\n    };\n  }, [chatId]);\n}\n_s(useChatWebSocket, \"Q75jzstoj70Xl4uzOerrVl9m/vI=\");\nexport default useChatWebSocket;","map":{"version":3,"names":["useEffect","useRef","signalR","useChatWebSocket","chatId","onNewMessage","_s","connectionRef","connection","HubConnectionBuilder","withUrl","process","env","REACT_APP_API_URL","withAutomaticReconnect","build","start","then","console","log","catch","error","on","userId","message","current","stop"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/chat-items/main/components/useChatWebSocket.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\nfunction useChatWebSocket(chatId, onNewMessage) {\r\n  const connectionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(`${process.env.REACT_APP_API_URL}/chatHub?chatId=${chatId}`)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    connection\r\n      .start()\r\n      .then(() => {\r\n        console.log('SignalR connected');\r\n      })\r\n      .catch(console.error);\r\n\r\n    connection.on('ReceiveMessage', (chatId, userId, message) => {\r\n      console.log('Новое сообщение:', message);\r\n      onNewMessage({ chatId, userId, message });\r\n    });\r\n\r\n    connectionRef.current = connection;\r\n\r\n    return () => {\r\n      connection.stop();\r\n    };\r\n  }, [chatId]);\r\n}\r\n\r\nexport default useChatWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAE7C,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,YAAY,EAAE;EAAAC,EAAA;EAC9C,MAAMC,aAAa,GAAGN,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,IAAIN,OAAO,CAACO,oBAAoB,CAAC,CAAC,CAClDC,OAAO,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,mBAAmBT,MAAM,EAAE,CAAC,CACpEU,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;IAEVP,UAAU,CACPQ,KAAK,CAAC,CAAC,CACPC,IAAI,CAAC,MAAM;MACVC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAACF,OAAO,CAACG,KAAK,CAAC;IAEvBb,UAAU,CAACc,EAAE,CAAC,gBAAgB,EAAE,CAAClB,MAAM,EAAEmB,MAAM,EAAEC,OAAO,KAAK;MAC3DN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEK,OAAO,CAAC;MACxCnB,YAAY,CAAC;QAAED,MAAM;QAAEmB,MAAM;QAAEC;MAAQ,CAAC,CAAC;IAC3C,CAAC,CAAC;IAEFjB,aAAa,CAACkB,OAAO,GAAGjB,UAAU;IAElC,OAAO,MAAM;MACXA,UAAU,CAACkB,IAAI,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,CAACtB,MAAM,CAAC,CAAC;AACd;AAACE,EAAA,CA3BQH,gBAAgB;AA6BzB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}