{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\custom-audio-player\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport styles from './CustomAudioPlayer.module.css';\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\nimport play from '../../../assets/images/custom-audio-player/play.png';\nimport AudioTimer from '../audio-recorder/AudioTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useAudioProgress(audioRef) {\n  _s();\n  const [isReady, setIsReady] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const rafId = useRef(null);\n\n  // Обновляем текущее время с throttling (чтобы не слишком часто обновлять React)\n  const lastUpdate = useRef(0);\n  const updateProgress = time => {\n    const now = performance.now();\n    if (now - lastUpdate.current > 200) {\n      setCurrentTime(time);\n      lastUpdate.current = now;\n    }\n  };\n\n  // Цикл для плавного обновления через requestAnimationFrame\n  const tick = useCallback(() => {\n    if (!audioRef.current) return;\n    if (!audioRef.current.paused && !audioRef.current.ended) {\n      updateProgress(audioRef.current.currentTime);\n      rafId.current = requestAnimationFrame(tick);\n    }\n  }, [audioRef]);\n\n  // Метаданные загружены\n  const onLoadedMetadata = useCallback(() => {\n    if (!audioRef.current) return;\n    const dur = audioRef.current.duration;\n    if (!isNaN(dur) && dur > 0) {\n      setDuration(dur);\n      setIsReady(true);\n    }\n  }, [audioRef]);\n\n  // canplay\n  const onCanPlay = useCallback(() => {\n    onLoadedMetadata();\n  }, [onLoadedMetadata]);\n\n  // Обновление текущего времени по событию аудио\n  const onTimeUpdate = useCallback(() => {\n    if (!audioRef.current) return;\n    updateProgress(audioRef.current.currentTime);\n  }, [audioRef]);\n\n  // Переключение Play/Pause\n  const togglePlay = useCallback(() => {\n    if (!isReady || !audioRef.current) return;\n    if (audioRef.current.paused) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          setIsPlaying(true);\n          rafId.current = requestAnimationFrame(tick);\n        }).catch(() => {\n          setIsPlaying(false);\n        });\n      } else {\n        setIsPlaying(true);\n        rafId.current = requestAnimationFrame(tick);\n      }\n    } else {\n      audioRef.current.pause();\n      setIsPlaying(false);\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n        rafId.current = null;\n      }\n    }\n  }, [isReady, audioRef, tick]);\n\n  // Клик на прогрессбар для перемотки\n  const onProgressClick = useCallback(e => {\n    if (!isReady || !audioRef.current || duration <= 0) return;\n    const {\n      left,\n      width\n    } = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - left;\n    const ratio = Math.min(Math.max(clickX / width, 0), 1);\n    audioRef.current.currentTime = ratio * duration;\n    // Не вызываем updateProgress напрямую — onTimeUpdate сработает\n  }, [isReady, audioRef, duration]);\n\n  // Когда аудио заканчивается\n  const onEnded = useCallback(() => {\n    setIsPlaying(false);\n    if (rafId.current) {\n      cancelAnimationFrame(rafId.current);\n      rafId.current = null;\n    }\n    setCurrentTime(0);\n  }, []);\n\n  // Сброс состояния при смене src\n  const reset = useCallback(() => {\n    setIsReady(false);\n    setIsPlaying(false);\n    setDuration(0);\n    setCurrentTime(0);\n    if (rafId.current) {\n      cancelAnimationFrame(rafId.current);\n      rafId.current = null;\n    }\n  }, []);\n  return {\n    isReady,\n    isPlaying,\n    duration,\n    currentTime,\n    togglePlay,\n    onProgressClick,\n    onLoadedMetadata,\n    onCanPlay,\n    onTimeUpdate,\n    onEnded,\n    reset\n  };\n}\n_s(useAudioProgress, \"lW9/3uXDjSYbYYlFJyAsAsxYu5U=\");\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s2();\n  const audioRef = useRef(null);\n  const {\n    isReady,\n    isPlaying,\n    duration,\n    currentTime,\n    togglePlay,\n    onProgressClick,\n    onLoadedMetadata,\n    onCanPlay,\n    onTimeUpdate,\n    onEnded,\n    reset\n  } = useAudioProgress(audioRef);\n  useEffect(() => {\n    reset();\n  }, [src, reset]);\n  const progressPercent = duration > 0 ? currentTime / duration * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      preload: \"metadata\",\n      onLoadedMetadata: onLoadedMetadata,\n      onCanPlay: onCanPlay,\n      onTimeUpdate: onTimeUpdate,\n      onEnded: onEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: togglePlay,\n      className: styles.playButton,\n      disabled: !isReady,\n      \"aria-label\": !isReady ? 'Loading…' : isPlaying ? 'Pause' : 'Play',\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pause,\n        alt: \"Pause\",\n        className: styles.play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: play,\n        alt: isReady ? 'Play' : 'Loading'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": duration,\n      \"aria-valuenow\": currentTime,\n      tabIndex: isReady ? 0 : -1,\n      onClick: onProgressClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${progressPercent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AudioTimer, {\n      isPaused: !isPlaying,\n      time: currentTime,\n      withDot: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s2(CustomAudioPlayer, \"0dY0gO67PMIXNVvRMFz/YjIK7yM=\", false, function () {\n  return [useAudioProgress];\n});\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","styles","pause","play","AudioTimer","jsxDEV","_jsxDEV","useAudioProgress","audioRef","_s","isReady","setIsReady","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","rafId","lastUpdate","updateProgress","time","now","performance","current","tick","paused","ended","requestAnimationFrame","onLoadedMetadata","dur","isNaN","onCanPlay","onTimeUpdate","togglePlay","playPromise","undefined","then","catch","cancelAnimationFrame","onProgressClick","e","left","width","currentTarget","getBoundingClientRect","clickX","clientX","ratio","Math","min","max","onEnded","reset","CustomAudioPlayer","src","_s2","progressPercent","className","audioPlayer","children","ref","preload","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","playButton","disabled","alt","progressBar","role","tabIndex","progress","style","isPaused","withDot","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/custom-audio-player/CustomAudioPlayer.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport styles from './CustomAudioPlayer.module.css';\r\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\r\nimport play from '../../../assets/images/custom-audio-player/play.png';\r\nimport AudioTimer from '../audio-recorder/AudioTimer';\r\n\r\nfunction useAudioProgress(audioRef) {\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [duration, setDuration] = useState(0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const rafId = useRef(null);\r\n\r\n    // Обновляем текущее время с throttling (чтобы не слишком часто обновлять React)\r\n    const lastUpdate = useRef(0);\r\n    const updateProgress = (time) => {\r\n        const now = performance.now();\r\n        if (now - lastUpdate.current > 200) {\r\n            setCurrentTime(time);\r\n            lastUpdate.current = now;\r\n        }\r\n    };\r\n\r\n    // Цикл для плавного обновления через requestAnimationFrame\r\n    const tick = useCallback(() => {\r\n        if (!audioRef.current) return;\r\n        if (!audioRef.current.paused && !audioRef.current.ended) {\r\n            updateProgress(audioRef.current.currentTime);\r\n            rafId.current = requestAnimationFrame(tick);\r\n        }\r\n    }, [audioRef]);\r\n\r\n    // Метаданные загружены\r\n    const onLoadedMetadata = useCallback(() => {\r\n        if (!audioRef.current) return;\r\n        const dur = audioRef.current.duration;\r\n        if (!isNaN(dur) && dur > 0) {\r\n            setDuration(dur);\r\n            setIsReady(true);\r\n        }\r\n    }, [audioRef]);\r\n\r\n    // canplay\r\n    const onCanPlay = useCallback(() => {\r\n        onLoadedMetadata();\r\n    }, [onLoadedMetadata]);\r\n\r\n    // Обновление текущего времени по событию аудио\r\n    const onTimeUpdate = useCallback(() => {\r\n        if (!audioRef.current) return;\r\n        updateProgress(audioRef.current.currentTime);\r\n    }, [audioRef]);\r\n\r\n    // Переключение Play/Pause\r\n    const togglePlay = useCallback(() => {\r\n        if (!isReady || !audioRef.current) return;\r\n\r\n        if (audioRef.current.paused) {\r\n            const playPromise = audioRef.current.play();\r\n            if (playPromise !== undefined) {\r\n                playPromise\r\n                    .then(() => {\r\n                        setIsPlaying(true);\r\n                        rafId.current = requestAnimationFrame(tick);\r\n                    })\r\n                    .catch(() => {\r\n                        setIsPlaying(false);\r\n                    });\r\n            } else {\r\n                setIsPlaying(true);\r\n                rafId.current = requestAnimationFrame(tick);\r\n            }\r\n        } else {\r\n            audioRef.current.pause();\r\n            setIsPlaying(false);\r\n            if (rafId.current) {\r\n                cancelAnimationFrame(rafId.current);\r\n                rafId.current = null;\r\n            }\r\n        }\r\n    }, [isReady, audioRef, tick]);\r\n\r\n    // Клик на прогрессбар для перемотки\r\n    const onProgressClick = useCallback(\r\n        (e) => {\r\n            if (!isReady || !audioRef.current || duration <= 0) return;\r\n            const { left, width } = e.currentTarget.getBoundingClientRect();\r\n            const clickX = e.clientX - left;\r\n            const ratio = Math.min(Math.max(clickX / width, 0), 1);\r\n            audioRef.current.currentTime = ratio * duration;\r\n            // Не вызываем updateProgress напрямую — onTimeUpdate сработает\r\n        },\r\n        [isReady, audioRef, duration]\r\n    );\r\n\r\n    // Когда аудио заканчивается\r\n    const onEnded = useCallback(() => {\r\n        setIsPlaying(false);\r\n        if (rafId.current) {\r\n            cancelAnimationFrame(rafId.current);\r\n            rafId.current = null;\r\n        }\r\n        setCurrentTime(0);\r\n    }, []);\r\n\r\n    // Сброс состояния при смене src\r\n    const reset = useCallback(() => {\r\n        setIsReady(false);\r\n        setIsPlaying(false);\r\n        setDuration(0);\r\n        setCurrentTime(0);\r\n        if (rafId.current) {\r\n            cancelAnimationFrame(rafId.current);\r\n            rafId.current = null;\r\n        }\r\n    }, []);\r\n\r\n    return {\r\n        isReady,\r\n        isPlaying,\r\n        duration,\r\n        currentTime,\r\n        togglePlay,\r\n        onProgressClick,\r\n        onLoadedMetadata,\r\n        onCanPlay,\r\n        onTimeUpdate,\r\n        onEnded,\r\n        reset,\r\n    };\r\n}\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n    const audioRef = useRef(null);\r\n\r\n    const {\r\n        isReady,\r\n        isPlaying,\r\n        duration,\r\n        currentTime,\r\n        togglePlay,\r\n        onProgressClick,\r\n        onLoadedMetadata,\r\n        onCanPlay,\r\n        onTimeUpdate,\r\n        onEnded,\r\n        reset,\r\n    } = useAudioProgress(audioRef);\r\n\r\n    useEffect(() => {\r\n        reset();\r\n    }, [src, reset]);\r\n\r\n    const progressPercent = duration > 0 ? (currentTime / duration) * 100 : 0;\r\n\r\n    return (\r\n        <div className={styles.audioPlayer}>\r\n            <audio\r\n                ref={audioRef}\r\n                src={src}\r\n                preload=\"metadata\"\r\n                onLoadedMetadata={onLoadedMetadata}\r\n                onCanPlay={onCanPlay}\r\n                onTimeUpdate={onTimeUpdate}\r\n                onEnded={onEnded}\r\n            />\r\n\r\n            <button\r\n                type=\"button\"\r\n                onClick={togglePlay}\r\n                className={styles.playButton}\r\n                disabled={!isReady}\r\n                aria-label={!isReady ? 'Loading…' : isPlaying ? 'Pause' : 'Play'}\r\n            >\r\n                {isPlaying ? (\r\n                    <img src={pause} alt=\"Pause\" className={styles.play} />\r\n                ) : (\r\n                    <img src={play} alt={isReady ? 'Play' : 'Loading'} />\r\n                )}\r\n            </button>\r\n\r\n            <div\r\n                className={styles.progressBar}\r\n                role=\"progressbar\"\r\n                aria-valuemin={0}\r\n                aria-valuemax={duration}\r\n                aria-valuenow={currentTime}\r\n                tabIndex={isReady ? 0 : -1}\r\n                onClick={onProgressClick}\r\n            >\r\n                <div\r\n                    className={styles.progress}\r\n                    style={{ width: `${progressPercent}%` }}\r\n                />\r\n            </div>\r\n\r\n            <AudioTimer isPaused={!isPlaying} time={currentTime} withDot={false} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}