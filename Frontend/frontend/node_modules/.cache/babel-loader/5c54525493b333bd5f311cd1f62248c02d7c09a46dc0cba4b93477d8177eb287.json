{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\audio-recorder\\\\AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './AudioRecorder.module.css';\nimport microfon from './icons/microfon.svg';\nimport microfonSelected from './icons/microfonSelected.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioRecorder({\n  audioRecordingControl\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [audioSrc, setAudioSrc] = useState(null);\n  const [previewReady, setPreviewReady] = useState(false);\n  const chunksRef = useRef([]);\n  const streamRef = useRef(null);\n  const timerRef = useRef(null);\n  const formatTime = time => {\n    const minutes = String(Math.floor(time / 60)).padStart(2, '0');\n    const seconds = String(time % 60).padStart(2, '0');\n    return `${minutes}:${seconds}`;\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      streamRef.current = stream;\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      chunksRef.current = [];\n      recorder.ondataavailable = e => {\n        if (e.data.size > 0) chunksRef.current.push(e.data);\n      };\n      recorder.onstop = () => {\n        const blob = new Blob(chunksRef.current, {\n          type: 'audio/webm'\n        });\n        const url = URL.createObjectURL(blob);\n        setAudioSrc(url);\n        setPreviewReady(true);\n      };\n      recorder.start();\n      setIsRecording(true);\n      setModalOpen(true);\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (err) {\n      console.error('Microphone error:', err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n      var _streamRef$current;\n      mediaRecorder.stop();\n      (_streamRef$current = streamRef.current) === null || _streamRef$current === void 0 ? void 0 : _streamRef$current.getTracks().forEach(track => track.stop());\n      clearInterval(timerRef.current);\n    }\n    setIsRecording(false);\n    setIsPaused(false);\n  };\n  const pauseRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.pause();\n      clearInterval(timerRef.current);\n      setIsPaused(true);\n    }\n  };\n  const resumeRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'paused') {\n      mediaRecorder.resume();\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      setIsPaused(false);\n    }\n  };\n  const handleAudioClick = () => {\n    if (!isRecording) {\n      startRecording();\n    }\n  };\n  const handleSend = () => {\n    const blob = new Blob(chunksRef.current, {\n      type: 'audio/webm'\n    });\n    const file = new File([blob], 'voice-message.webm', {\n      type: 'audio/webm',\n      lastModified: Date.now()\n    });\n    audioRecordingControl.setAudio({\n      type: 'audio',\n      name: file.name,\n      id: Date.now().toString(),\n      file,\n      size: file.size,\n      src: audioSrc\n    });\n    reset();\n  };\n  const handleCancel = () => {\n    stopRecording();\n    reset();\n  };\n  const reset = () => {\n    setModalOpen(false);\n    setRecordingTime(0);\n    setMediaRecorder(null);\n    setAudioSrc(null);\n    setPreviewReady(false);\n    chunksRef.current = [];\n  };\n  useEffect(() => {\n    return () => {\n      stopRecording();\n      clearInterval(timerRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.button,\n      onClick: handleAudioClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isRecording ? microfonSelected : microfon,\n        alt: \"audio\",\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modalContent,\n        children: !previewReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timerWrapper,\n            children: [!isPaused && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.dot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.timer,\n              children: formatTime(recordingTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.status,\n              children: isPaused ? 'Пауза' : 'Запись'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.controls,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.pauseButton,\n              onClick: isPaused ? resumeRecording : pauseRecording,\n              children: isPaused ? 'Продолжить' : 'Пауза'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.stopButton,\n              onClick: stopRecording,\n              children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.audioPreview,\n            children: /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              src: audioSrc,\n              className: styles.audioPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.buttons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.cancelButton,\n              onClick: handleCancel,\n              children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.sendButton,\n              onClick: handleSend,\n              children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioRecorder, \"FryiJ/4x+oBUXMG2feJ/a3nPp+4=\");\n_c = AudioRecorder;\nAudioRecorder.propTypes = {\n  audioRecordingControl: PropTypes.shape({\n    audio: PropTypes.any,\n    setAudio: PropTypes.func.isRequired\n  }).isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PropTypes","styles","microfon","microfonSelected","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioRecorder","audioRecordingControl","_s","isRecording","setIsRecording","isPaused","setIsPaused","mediaRecorder","setMediaRecorder","recordingTime","setRecordingTime","modalOpen","setModalOpen","audioSrc","setAudioSrc","previewReady","setPreviewReady","chunksRef","streamRef","timerRef","formatTime","time","minutes","String","Math","floor","padStart","seconds","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","recorder","MediaRecorder","ondataavailable","e","data","size","push","onstop","blob","Blob","type","url","URL","createObjectURL","start","setInterval","prev","err","console","error","stopRecording","state","_streamRef$current","stop","getTracks","forEach","track","clearInterval","pauseRecording","pause","resumeRecording","resume","handleAudioClick","handleSend","file","File","lastModified","Date","now","setAudio","name","id","toString","src","reset","handleCancel","children","className","button","onClick","alt","icon","fileName","_jsxFileName","lineNumber","columnNumber","modal","modalContent","timerWrapper","dot","timer","status","controls","pauseButton","stopButton","audioPreview","audioPlayer","buttons","cancelButton","sendButton","_c","propTypes","shape","any","func","isRequired","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/audio-recorder/AudioRecorder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './AudioRecorder.module.css';\r\nimport microfon from './icons/microfon.svg';\r\nimport microfonSelected from './icons/microfonSelected.svg';\r\n\r\nexport default function AudioRecorder({ audioRecordingControl }) {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [recordingTime, setRecordingTime] = useState(0);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [audioSrc, setAudioSrc] = useState(null);\r\n    const [previewReady, setPreviewReady] = useState(false);\r\n\r\n    const chunksRef = useRef([]);\r\n    const streamRef = useRef(null);\r\n    const timerRef = useRef(null);\r\n\r\n    const formatTime = (time) => {\r\n        const minutes = String(Math.floor(time / 60)).padStart(2, '0');\r\n        const seconds = String(time % 60).padStart(2, '0');\r\n        return `${minutes}:${seconds}`;\r\n    };\r\n\r\n    const startRecording = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            streamRef.current = stream;\r\n            const recorder = new MediaRecorder(stream);\r\n            setMediaRecorder(recorder);\r\n            chunksRef.current = [];\r\n\r\n            recorder.ondataavailable = (e) => {\r\n                if (e.data.size > 0) chunksRef.current.push(e.data);\r\n            };\r\n\r\n            recorder.onstop = () => {\r\n                const blob = new Blob(chunksRef.current, { type: 'audio/webm' });\r\n                const url = URL.createObjectURL(blob);\r\n                setAudioSrc(url);\r\n                setPreviewReady(true);\r\n            };\r\n\r\n            recorder.start();\r\n            setIsRecording(true);\r\n            setModalOpen(true);\r\n\r\n            timerRef.current = setInterval(() => {\r\n                setRecordingTime((prev) => prev + 1);\r\n            }, 1000);\r\n        } catch (err) {\r\n            console.error('Microphone error:', err);\r\n        }\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        if (mediaRecorder && mediaRecorder.state !== 'inactive') {\r\n            mediaRecorder.stop();\r\n            streamRef.current?.getTracks().forEach((track) => track.stop());\r\n            clearInterval(timerRef.current);\r\n        }\r\n        setIsRecording(false);\r\n        setIsPaused(false);\r\n    };\r\n\r\n    const pauseRecording = () => {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n            clearInterval(timerRef.current);\r\n            setIsPaused(true);\r\n        }\r\n    };\r\n\r\n    const resumeRecording = () => {\r\n        if (mediaRecorder && mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n            timerRef.current = setInterval(() => {\r\n                setRecordingTime((prev) => prev + 1);\r\n            }, 1000);\r\n            setIsPaused(false);\r\n        }\r\n    };\r\n\r\n    const handleAudioClick = () => {\r\n        if (!isRecording) {\r\n            startRecording();\r\n        }\r\n    };\r\n\r\n    const handleSend = () => {\r\n        const blob = new Blob(chunksRef.current, { type: 'audio/webm' });\r\n        const file = new File([blob], 'voice-message.webm', {\r\n            type: 'audio/webm',\r\n            lastModified: Date.now(),\r\n        });\r\n\r\n        audioRecordingControl.setAudio({\r\n            type: 'audio',\r\n            name: file.name,\r\n            id: Date.now().toString(),\r\n            file,\r\n            size: file.size,\r\n            src: audioSrc,\r\n        });\r\n\r\n        reset();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        stopRecording();\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setModalOpen(false);\r\n        setRecordingTime(0);\r\n        setMediaRecorder(null);\r\n        setAudioSrc(null);\r\n        setPreviewReady(false);\r\n        chunksRef.current = [];\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            stopRecording();\r\n            clearInterval(timerRef.current);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" className={styles.button} onClick={handleAudioClick}>\r\n                <img\r\n                    src={isRecording ? microfonSelected : microfon}\r\n                    alt=\"audio\"\r\n                    className={styles.icon}\r\n                />\r\n            </button>\r\n\r\n            {modalOpen && (\r\n                <div className={styles.modal}>\r\n                    <div className={styles.modalContent}>\r\n                        {!previewReady ? (\r\n                            <>\r\n                                <div className={styles.timerWrapper}>\r\n                                    {!isPaused && <span className={styles.dot}></span>}\r\n                                    <span className={styles.timer}>{formatTime(recordingTime)}</span>\r\n                                    <span className={styles.status}>{isPaused ? 'Пауза' : 'Запись'}</span>\r\n                                </div>\r\n                                <div className={styles.controls}>\r\n                                    <button\r\n                                        className={styles.pauseButton}\r\n                                        onClick={isPaused ? resumeRecording : pauseRecording}\r\n                                    >\r\n                                        {isPaused ? 'Продолжить' : 'Пауза'}\r\n                                    </button>\r\n                                    <button className={styles.stopButton} onClick={stopRecording}>\r\n                                        Завершить\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div className={styles.audioPreview}>\r\n                                    <audio controls src={audioSrc} className={styles.audioPlayer} />\r\n                                </div>\r\n                                <div className={styles.buttons}>\r\n                                    <button className={styles.cancelButton} onClick={handleCancel}>\r\n                                        Отмена\r\n                                    </button>\r\n                                    <button className={styles.sendButton} onClick={handleSend}>\r\n                                        Отправить\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nAudioRecorder.propTypes = {\r\n    audioRecordingControl: PropTypes.shape({\r\n        audio: PropTypes.any,\r\n        setAudio: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}