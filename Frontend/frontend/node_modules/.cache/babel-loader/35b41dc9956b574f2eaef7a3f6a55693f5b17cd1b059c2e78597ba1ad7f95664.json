{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\custom-audio-player\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styles from './CustomAudioPlayer.module.css';\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\nimport play from '../../../assets/images/custom-audio-player/play.png';\nimport AudioTimer from '../audio-recorder/AudioTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s();\n  const audioRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  // Реф для текущего времени, чтобы не обновлять состояние слишком часто\n  const currentTimeRef = useRef(0);\n  const updateProgress = () => {\n    const audio = audioRef.current;\n    if (audio && !audio.paused && audio.duration > 0) {\n      currentTimeRef.current = audio.currentTime;\n      setCurrentTime(audio.currentTime);\n      setProgress(audio.currentTime / audio.duration * 100);\n      animationFrameRef.current = requestAnimationFrame(updateProgress);\n    }\n  };\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    if (audio.paused) {\n      audio.play();\n      setIsPlaying(true);\n      animationFrameRef.current = requestAnimationFrame(updateProgress);\n    } else {\n      audio.pause();\n      setIsPlaying(false);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    }\n  };\n  const handleLoadedMetadata = () => {\n    const audio = audioRef.current;\n    if (audio && !isNaN(audio.duration)) {\n      setDuration(audio.duration);\n    }\n  };\n  const handleProgressClick = e => {\n    const audio = audioRef.current;\n    if (!audio || duration <= 0 || audio.readyState < 1) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const newProgress = clickX / rect.width;\n    audio.currentTime = newProgress * audio.duration;\n    setProgress(newProgress * 100);\n    setCurrentTime(audio.currentTime);\n  };\n  useEffect(() => {\n    const audio = audioRef.current;\n    setIsPlaying(false);\n    setProgress(0);\n    setCurrentTime(0);\n    setDuration(0);\n    if (audio) {\n      if (audio.readyState >= 1) {\n        setDuration(audio.duration);\n      } else {\n        audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n        return () => {\n          audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        };\n      }\n    }\n\n    // Очистка анимации при размонтировании или смене src\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [src]);\n  useEffect(() => {\n    // Останавливаем анимацию, если аудио остановлено снаружи\n    if (!isPlaying && animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      onEnded: () => setIsPlaying(false),\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: togglePlay,\n      className: styles.playButton,\n      \"aria-label\": isPlaying ? 'Pause audio' : 'Play audio',\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pause,\n        alt: \"Pause\",\n        className: styles.play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: play,\n        alt: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 88\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      onClick: handleProgressClick,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": duration,\n      \"aria-valuenow\": currentTime,\n      tabIndex: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AudioTimer, {\n      isPaused: !isPlaying,\n      time: currentTime,\n      withDot: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomAudioPlayer, \"M8+9+39lE/jdjiHIlhf3T3EIxww=\");\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styles","pause","play","AudioTimer","jsxDEV","_jsxDEV","CustomAudioPlayer","src","_s","audioRef","animationFrameRef","isPlaying","setIsPlaying","progress","setProgress","duration","setDuration","currentTime","setCurrentTime","currentTimeRef","updateProgress","audio","current","paused","requestAnimationFrame","togglePlay","cancelAnimationFrame","handleLoadedMetadata","isNaN","handleProgressClick","e","readyState","rect","currentTarget","getBoundingClientRect","clickX","clientX","left","newProgress","width","addEventListener","removeEventListener","className","audioPlayer","children","ref","onEnded","preload","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","playButton","alt","progressBar","role","tabIndex","style","isPaused","time","withDot","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/custom-audio-player/CustomAudioPlayer.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport styles from './CustomAudioPlayer.module.css';\r\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\r\nimport play from '../../../assets/images/custom-audio-player/play.png';\r\nimport AudioTimer from '../audio-recorder/AudioTimer';\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n    const audioRef = useRef(null);\r\n    const animationFrameRef = useRef(null);\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [duration, setDuration] = useState(0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    // Реф для текущего времени, чтобы не обновлять состояние слишком часто\r\n    const currentTimeRef = useRef(0);\r\n\r\n    const updateProgress = () => {\r\n        const audio = audioRef.current;\r\n        if (audio && !audio.paused && audio.duration > 0) {\r\n            currentTimeRef.current = audio.currentTime;\r\n            setCurrentTime(audio.currentTime);\r\n            setProgress((audio.currentTime / audio.duration) * 100);\r\n            animationFrameRef.current = requestAnimationFrame(updateProgress);\r\n        }\r\n    };\r\n\r\n    const togglePlay = () => {\r\n        const audio = audioRef.current;\r\n        if (!audio) return;\r\n\r\n        if (audio.paused) {\r\n            audio.play();\r\n            setIsPlaying(true);\r\n            animationFrameRef.current = requestAnimationFrame(updateProgress);\r\n        } else {\r\n            audio.pause();\r\n            setIsPlaying(false);\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLoadedMetadata = () => {\r\n        const audio = audioRef.current;\r\n        if (audio && !isNaN(audio.duration)) {\r\n            setDuration(audio.duration);\r\n        }\r\n    };\r\n\r\n    const handleProgressClick = (e) => {\r\n        const audio = audioRef.current;\r\n        if (!audio || duration <= 0 || audio.readyState < 1) return;\r\n\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const clickX = e.clientX - rect.left;\r\n        const newProgress = clickX / rect.width;\r\n\r\n        audio.currentTime = newProgress * audio.duration;\r\n        setProgress(newProgress * 100);\r\n        setCurrentTime(audio.currentTime);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const audio = audioRef.current;\r\n        setIsPlaying(false);\r\n        setProgress(0);\r\n        setCurrentTime(0);\r\n        setDuration(0);\r\n\r\n        if (audio) {\r\n            if (audio.readyState >= 1) {\r\n                setDuration(audio.duration);\r\n            } else {\r\n                audio.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n                return () => {\r\n                    audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n                };\r\n            }\r\n        }\r\n\r\n        // Очистка анимации при размонтировании или смене src\r\n        return () => {\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n        };\r\n    }, [src]);\r\n\r\n    useEffect(() => {\r\n        // Останавливаем анимацию, если аудио остановлено снаружи\r\n        if (!isPlaying && animationFrameRef.current) {\r\n            cancelAnimationFrame(animationFrameRef.current);\r\n        }\r\n    }, [isPlaying]);\r\n\r\n    return (\r\n        <div className={styles.audioPlayer}>\r\n            <audio\r\n                ref={audioRef}\r\n                src={src}\r\n                onEnded={() => setIsPlaying(false)}\r\n                preload=\"metadata\"\r\n            />\r\n            <button\r\n                type='button'\r\n                onClick={togglePlay}\r\n                className={styles.playButton}\r\n                aria-label={isPlaying ? 'Pause audio' : 'Play audio'}\r\n            >\r\n                {isPlaying ? <img src={pause} alt='Pause' className={styles.play} /> : <img src={play} alt='Play' />}\r\n            </button>\r\n            <div\r\n                className={styles.progressBar}\r\n                onClick={handleProgressClick}\r\n                role=\"progressbar\"\r\n                aria-valuemin={0}\r\n                aria-valuemax={duration}\r\n                aria-valuenow={currentTime}\r\n                tabIndex={0}\r\n            >\r\n                <div\r\n                    className={styles.progress}\r\n                    style={{ width: `${progress}%` }}\r\n                />\r\n            </div>\r\n            <AudioTimer isPaused={!isPlaying} time={currentTime} withDot={false} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}