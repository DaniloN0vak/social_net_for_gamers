{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\MessageGroupList.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Virtuoso } from 'react-virtuoso';\nimport MessageGroup from './MessageGroup';\nimport DateSeparator from './DateSeparator';\nimport { formatDateForSeparator, isNewDay } from '../utils/dateUtils';\nimport styles from '../styles/MessageGroupList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageGroupList({\n  messages,\n  currentUserId\n}) {\n  _s();\n  const renderedGroups = useMemo(() => {\n    const elements = [];\n    let currentGroup = [];\n    let lastUserId = null;\n    let lastDate = null;\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      const {\n        user,\n        sentAt,\n        id\n      } = message;\n      const userId = user.id;\n      const isNewDate = !lastDate || isNewDay(lastDate, sentAt);\n      const isNewUser = userId !== lastUserId;\n      if (currentGroup.length > 0 && (isNewUser || isNewDate)) {\n        elements.push({\n          type: 'group',\n          key: `group-${currentGroup[0].id}`,\n          messages: currentGroup,\n          isLeft: currentGroup[0].user.id !== currentUserId\n        });\n        currentGroup = [];\n      }\n      if (isNewDate) {\n        elements.push({\n          type: 'date',\n          key: `date-${id}`,\n          date: sentAt instanceof Date ? formatDateForSeparator(sentAt) : 'Не вказано'\n        });\n      }\n      currentGroup.push(message);\n      lastUserId = userId;\n      lastDate = sentAt;\n    }\n    if (currentGroup.length > 0) {\n      elements.push({\n        type: 'group',\n        key: `group-${currentGroup[0].id}`,\n        messages: currentGroup,\n        isLeft: currentGroup[0].user.id !== currentUserId\n      });\n    }\n    return elements;\n  }, [messages, currentUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Virtuoso, {\n      data: renderedItems,\n      itemContent: (index, item) => {\n        if (item.type === 'group') {\n          return /*#__PURE__*/_jsxDEV(MessageGroup, {\n            messages: item.messages,\n            isLeft: item.isLeft\n          }, `group-${item.messages[0].id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        }\n        if (item.type === 'date') {\n          return /*#__PURE__*/_jsxDEV(DateSeparator, {\n            date: item.date instanceof Date ? formatDateForSeparator(item.date) : 'Невідомо'\n          }, `date-${item.date}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      },\n      followOutput: \"auto\",\n      initialTopMostItemIndex: renderedItems.length - 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(MessageGroupList, \"WAji6TKU//AFyxItvHNXql+O2z0=\");\n_c = MessageGroupList;\nexport default _c2 = /*#__PURE__*/React.memo(MessageGroupList);\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageGroupList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useMemo","Virtuoso","MessageGroup","DateSeparator","formatDateForSeparator","isNewDay","styles","jsxDEV","_jsxDEV","MessageGroupList","messages","currentUserId","_s","renderedGroups","elements","currentGroup","lastUserId","lastDate","i","length","message","user","sentAt","id","userId","isNewDate","isNewUser","push","type","key","isLeft","date","Date","className","container","children","data","renderedItems","itemContent","index","item","fileName","_jsxFileName","lineNumber","columnNumber","followOutput","initialTopMostItemIndex","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/MessageGroupList.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { Virtuoso } from 'react-virtuoso';\r\nimport MessageGroup from './MessageGroup';\r\nimport DateSeparator from './DateSeparator';\r\nimport { formatDateForSeparator, isNewDay } from '../utils/dateUtils';\r\nimport styles from '../styles/MessageGroupList.module.css';\r\n\r\nfunction MessageGroupList({ messages, currentUserId }) {\r\n    const renderedGroups = useMemo(() => {\r\n        const elements = [];\r\n        let currentGroup = [];\r\n        let lastUserId = null;\r\n        let lastDate = null;\r\n\r\n        for (let i = 0; i < messages.length; i++) {\r\n            const message = messages[i];\r\n            const { user, sentAt, id } = message;\r\n            const userId = user.id;\r\n\r\n            const isNewDate = !lastDate || isNewDay(lastDate, sentAt);\r\n            const isNewUser = userId !== lastUserId;\r\n\r\n            if (currentGroup.length > 0 && (isNewUser || isNewDate)) {\r\n                elements.push({\r\n                    type: 'group',\r\n                    key: `group-${currentGroup[0].id}`,\r\n                    messages: currentGroup,\r\n                    isLeft: currentGroup[0].user.id !== currentUserId,\r\n                });\r\n                currentGroup = [];\r\n            }\r\n\r\n            if (isNewDate) {\r\n                elements.push({\r\n                    type: 'date',\r\n                    key: `date-${id}`,\r\n                    date: sentAt instanceof Date ? formatDateForSeparator(sentAt) : 'Не вказано'\r\n                });\r\n            }\r\n\r\n            currentGroup.push(message);\r\n            lastUserId = userId;\r\n            lastDate = sentAt;\r\n        }\r\n\r\n        if (currentGroup.length > 0) {\r\n            elements.push({\r\n                type: 'group',\r\n                key: `group-${currentGroup[0].id}`,\r\n                messages: currentGroup,\r\n                isLeft: currentGroup[0].user.id !== currentUserId,\r\n            });\r\n        }\r\n\r\n        return elements;\r\n    }, [messages, currentUserId]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Virtuoso\r\n                data={renderedItems}\r\n                itemContent={(index, item) => {\r\n                    if (item.type === 'group') {\r\n                        return (\r\n                            <MessageGroup\r\n                                key={`group-${item.messages[0].id}`}\r\n                                messages={item.messages}\r\n                                isLeft={item.isLeft}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    if (item.type === 'date') {\r\n                        return (\r\n                            <DateSeparator\r\n                                key={`date-${item.date}`}\r\n                                date={item.date instanceof Date ? formatDateForSeparator(item.date) : 'Невідомо'}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                }}\r\n                followOutput=\"auto\"\r\n                initialTopMostItemIndex={renderedItems.length - 1}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(MessageGroupList);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}