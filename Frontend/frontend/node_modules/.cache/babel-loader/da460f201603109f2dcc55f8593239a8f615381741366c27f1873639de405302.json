{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styles from '../styles/CustomAudioPlayer.module.css';\nimport pause from '../assets/images/custom-audio-player/pause.png';\nimport play from '../assets/images/custom-audio-player/play.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s();\n  const audioRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0); // Целевой прогресс (на основе audio)\n  const [displayProgress, setDisplayProgress] = useState(0); // Текущий отображаемый прогресс (анимируется)\n\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n      setIsPlaying(true);\n    } else {\n      audio.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    setProgress(audio.currentTime / audio.duration * 100);\n  };\n  const animateProgress = targetProgress => {\n    setDisplayProgress(current => {\n      const diff = targetProgress - current;\n      if (Math.abs(diff) < 0.1) {\n        cancelAnimationFrame(animationFrameRef.current);\n        return targetProgress;\n      }\n      const nextProgress = current + diff * 0.1;\n      animationFrameRef.current = requestAnimationFrame(() => animateProgress(targetProgress));\n      return nextProgress;\n    });\n  };\n  useEffect(() => {\n    animationFrameRef.current = requestAnimationFrame(() => animateProgress(progress));\n    return () => cancelAnimationFrame(animationFrameRef.current);\n  }, [progress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: () => setIsPlaying(false),\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      className: styles.playButton,\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pause,\n        alt: \"pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: play,\n        alt: \"play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${displayProgress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomAudioPlayer, \"WBf2n7DGwiFgczKfU4aCF4a+1r8=\");\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styles","pause","play","jsxDEV","_jsxDEV","CustomAudioPlayer","src","_s","audioRef","animationFrameRef","isPlaying","setIsPlaying","progress","setProgress","displayProgress","setDisplayProgress","togglePlay","audio","current","paused","handleTimeUpdate","currentTime","duration","animateProgress","targetProgress","diff","Math","abs","cancelAnimationFrame","nextProgress","requestAnimationFrame","className","audioPlayer","children","ref","onTimeUpdate","onEnded","preload","fileName","_jsxFileName","lineNumber","columnNumber","onClick","playButton","alt","progressBar","style","width","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/CustomAudioPlayer.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport styles from '../styles/CustomAudioPlayer.module.css';\r\nimport pause from '../assets/images/custom-audio-player/pause.png'\r\nimport play from '../assets/images/custom-audio-player/play.png'\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n    const audioRef = useRef(null);\r\n    const animationFrameRef = useRef(null);\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [progress, setProgress] = useState(0);           // Целевой прогресс (на основе audio)\r\n    const [displayProgress, setDisplayProgress] = useState(0); // Текущий отображаемый прогресс (анимируется)\r\n\r\n    const togglePlay = () => {\r\n        const audio = audioRef.current;\r\n        if (audio.paused) {\r\n            audio.play();\r\n            setIsPlaying(true);\r\n        } else {\r\n            audio.pause();\r\n            setIsPlaying(false);\r\n        }\r\n    };\r\n\r\n    const handleTimeUpdate = () => {\r\n        const audio = audioRef.current;\r\n        setProgress((audio.currentTime / audio.duration) * 100);\r\n    };\r\n\r\n    const animateProgress = (targetProgress) => {\r\n        setDisplayProgress((current) => {\r\n            const diff = targetProgress - current;\r\n            if (Math.abs(diff) < 0.1) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n                return targetProgress;\r\n            }\r\n            const nextProgress = current + diff * 0.1;\r\n            animationFrameRef.current = requestAnimationFrame(() => animateProgress(targetProgress));\r\n            return nextProgress;\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        animationFrameRef.current = requestAnimationFrame(() => animateProgress(progress));\r\n        return () => cancelAnimationFrame(animationFrameRef.current);\r\n    }, [progress]);\r\n\r\n    return (\r\n        <div className={styles.audioPlayer}>\r\n            <audio\r\n                ref={audioRef}\r\n                src={src}\r\n                onTimeUpdate={handleTimeUpdate}\r\n                onEnded={() => setIsPlaying(false)}\r\n                preload=\"metadata\"\r\n            />\r\n            <button onClick={togglePlay} className={styles.playButton}>\r\n                {isPlaying ? <img src={pause} alt='pause'/> : <img src={play} alt='play'/>}\r\n            </button>\r\n            <div className={styles.progressBar}>\r\n                <div\r\n                    className={styles.progress}\r\n                    style={{ width: `${displayProgress}%` }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}