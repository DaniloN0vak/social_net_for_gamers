{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\MediaPreview.js\";\nimport React from 'react';\nimport styles from './MediaPreview.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaPreview({\n  mediaList,\n  onRemove\n}) {\n  /*\r\n  mediaList — массив объектов вида:\r\n  {\r\n    id: уникальный идентификатор (string или number),\r\n    type: 'image' | 'video' | 'gif',\r\n    src: ссылка или локальный URL (string)\r\n  }\r\n  onRemove — функция, вызываемая с id для удаления элемента\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.previewContainer,\n    children: mediaList.map(({\n      id,\n      type,\n      src\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.previewItem,\n      children: [type === 'image' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: \"preview\",\n        className: styles.previewMedia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 32\n      }, this), (type === 'video' || type === 'gif') && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: src,\n        className: styles.previewMedia,\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.removeButton,\n        onClick: () => onRemove(id),\n        \"aria-label\": \"Remove media\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = MediaPreview;\nexport default _c2 = /*#__PURE__*/React.memo(MediaPreview);\nvar _c, _c2;\n$RefreshReg$(_c, \"MediaPreview\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","MediaPreview","mediaList","onRemove","className","previewContainer","children","map","id","type","src","previewItem","alt","previewMedia","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","loop","muted","playsInline","removeButton","onClick","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/MediaPreview.js"],"sourcesContent":["import React from 'react';\r\nimport styles from './MediaPreview.module.css';\r\n\r\nfunction MediaPreview({ mediaList, onRemove }) {\r\n  /*\r\n  mediaList — массив объектов вида:\r\n  {\r\n    id: уникальный идентификатор (string или number),\r\n    type: 'image' | 'video' | 'gif',\r\n    src: ссылка или локальный URL (string)\r\n  }\r\n  onRemove — функция, вызываемая с id для удаления элемента\r\n  */\r\n\r\n  return (\r\n    <div className={styles.previewContainer}>\r\n      {mediaList.map(({ id, type, src }) => (\r\n        <div key={id} className={styles.previewItem}>\r\n          {type === 'image' && <img src={src} alt=\"preview\" className={styles.previewMedia} />}\r\n          {(type === 'video' || type === 'gif') && (\r\n            <video\r\n              src={src}\r\n              className={styles.previewMedia}\r\n              autoPlay\r\n              loop\r\n              muted\r\n              playsInline\r\n            />\r\n          )}\r\n          <button\r\n            type=\"button\"\r\n            className={styles.removeButton}\r\n            onClick={() => onRemove(id)}\r\n            aria-label=\"Remove media\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MediaPreview);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAC7C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACEH,OAAA;IAAKI,SAAS,EAAEN,MAAM,CAACO,gBAAiB;IAAAC,QAAA,EACrCJ,SAAS,CAACK,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAEC,IAAI;MAAEC;IAAI,CAAC,kBAC/BV,OAAA;MAAcI,SAAS,EAAEN,MAAM,CAACa,WAAY;MAAAL,QAAA,GACzCG,IAAI,KAAK,OAAO,iBAAIT,OAAA;QAAKU,GAAG,EAAEA,GAAI;QAACE,GAAG,EAAC,SAAS;QAACR,SAAS,EAAEN,MAAM,CAACe;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnF,CAACR,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,KAAK,kBAClCT,OAAA;QACEU,GAAG,EAAEA,GAAI;QACTN,SAAS,EAAEN,MAAM,CAACe,YAAa;QAC/BK,QAAQ;QACRC,IAAI;QACJC,KAAK;QACLC,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CACF,eACDjB,OAAA;QACES,IAAI,EAAC,QAAQ;QACbL,SAAS,EAAEN,MAAM,CAACwB,YAAa;QAC/BC,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAACK,EAAE,CAAE;QAC5B,cAAW,cAAc;QAAAF,QAAA,EAC1B;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAnBDT,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoBP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACO,EAAA,GAtCQvB,YAAY;AAwCrB,eAAAwB,GAAA,gBAAe5B,KAAK,CAAC6B,IAAI,CAACzB,YAAY,CAAC;AAAC,IAAAuB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}