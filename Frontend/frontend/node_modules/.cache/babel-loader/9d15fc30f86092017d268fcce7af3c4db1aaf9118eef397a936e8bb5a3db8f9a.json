{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\custom-audio-player\\\\AudioVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioVisualizer({\n  audioRef\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const animationId = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const sourceRef = useRef(null);\n  useEffect(() => {\n    if (!audioRef.current) return;\n\n    // Создаём AudioContext один раз\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    const audioCtx = audioContextRef.current;\n\n    // Создаём AnalyserNode один раз\n    analyserRef.current = audioCtx.createAnalyser();\n    analyserRef.current.fftSize = 64;\n\n    // Проверяем, что source ещё не создан (исключаем дублирование)\n    if (!sourceRef.current) {\n      try {\n        sourceRef.current = audioCtx.createMediaElementSource(audioRef.current);\n        sourceRef.current.connect(analyserRef.current);\n        analyserRef.current.connect(audioCtx.destination);\n      } catch (e) {\n        console.error('MediaElementSource уже создан для этого аудио', e);\n      }\n    }\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    function draw() {\n      animationId.current = requestAnimationFrame(draw);\n      analyserRef.current.getByteFrequencyData(dataArray);\n      ctx.clearRect(0, 0, WIDTH, HEIGHT);\n      const barWidth = WIDTH / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const barHeight = dataArray[i] / 255 * HEIGHT;\n        ctx.fillStyle = '#4A90E2';\n        ctx.fillRect(x, HEIGHT - barHeight, barWidth * 0.8, barHeight);\n        x += barWidth;\n      }\n    }\n    draw();\n    return () => {\n      cancelAnimationFrame(animationId.current);\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      sourceRef.current = null; // чтобы не пытаться повторно использовать\n    };\n  }, [audioRef]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 300,\n    height: 50,\n    style: {\n      width: '100%',\n      height: '50px',\n      backgroundColor: '#222'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioVisualizer, \"2BFrLFN0pBkTkGmop8myGDAa3Xo=\");\n_c = AudioVisualizer;\nexport default AudioVisualizer;\nvar _c;\n$RefreshReg$(_c, \"AudioVisualizer\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","AudioVisualizer","audioRef","_s","canvasRef","animationId","audioContextRef","analyserRef","sourceRef","current","window","AudioContext","webkitAudioContext","audioCtx","createAnalyser","fftSize","createMediaElementSource","connect","destination","e","console","error","bufferLength","frequencyBinCount","dataArray","Uint8Array","canvas","ctx","getContext","WIDTH","width","HEIGHT","height","draw","requestAnimationFrame","getByteFrequencyData","clearRect","barWidth","x","i","barHeight","fillStyle","fillRect","cancelAnimationFrame","close","ref","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/custom-audio-player/AudioVisualizer.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nfunction AudioVisualizer({ audioRef }) {\r\n  const canvasRef = useRef(null);\r\n  const animationId = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const sourceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!audioRef.current) return;\r\n\r\n    // Создаём AudioContext один раз\r\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n    const audioCtx = audioContextRef.current;\r\n\r\n    // Создаём AnalyserNode один раз\r\n    analyserRef.current = audioCtx.createAnalyser();\r\n    analyserRef.current.fftSize = 64;\r\n\r\n    // Проверяем, что source ещё не создан (исключаем дублирование)\r\n    if (!sourceRef.current) {\r\n      try {\r\n        sourceRef.current = audioCtx.createMediaElementSource(audioRef.current);\r\n        sourceRef.current.connect(analyserRef.current);\r\n        analyserRef.current.connect(audioCtx.destination);\r\n      } catch (e) {\r\n        console.error('MediaElementSource уже создан для этого аудио', e);\r\n      }\r\n    }\r\n\r\n    const bufferLength = analyserRef.current.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const WIDTH = canvas.width;\r\n    const HEIGHT = canvas.height;\r\n\r\n    function draw() {\r\n      animationId.current = requestAnimationFrame(draw);\r\n\r\n      analyserRef.current.getByteFrequencyData(dataArray);\r\n\r\n      ctx.clearRect(0, 0, WIDTH, HEIGHT);\r\n\r\n      const barWidth = WIDTH / bufferLength;\r\n      let x = 0;\r\n\r\n      for (let i = 0; i < bufferLength; i++) {\r\n        const barHeight = (dataArray[i] / 255) * HEIGHT;\r\n\r\n        ctx.fillStyle = '#4A90E2';\r\n        ctx.fillRect(x, HEIGHT - barHeight, barWidth * 0.8, barHeight);\r\n\r\n        x += barWidth;\r\n      }\r\n    }\r\n\r\n    draw();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationId.current);\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n      sourceRef.current = null; // чтобы не пытаться повторно использовать\r\n    };\r\n  }, [audioRef]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={300}\r\n      height={50}\r\n      style={{ width: '100%', height: '50px', backgroundColor: '#222' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AudioVisualizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}