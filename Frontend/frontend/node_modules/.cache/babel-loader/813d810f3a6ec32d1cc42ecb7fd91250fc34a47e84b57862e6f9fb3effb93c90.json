{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport styles from '../styles/CustomAudioPlayer.module.css';\nimport pause from '../assets/images/custom-audio-player/pause.png';\nimport play from '../assets/images/custom-audio-player/play.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s();\n  const audioRef = useRef(null);\n  const lastUpdateTimeRef = useRef(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n      setIsPlaying(true);\n    } else {\n      audio.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    const currentTime = audio.currentTime;\n    if (currentTime - lastUpdateTimeRef.current >= 0.1 || currentTime === 0) {\n      setProgress(currentTime / audio.duration * 100);\n      lastUpdateTimeRef.current = currentTime;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: () => setIsPlaying(false),\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      className: styles.playButton,\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pause,\n        alt: \"pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: play,\n        alt: \"play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomAudioPlayer, \"xJ9MhNj7ksufb+KPpgcnAp5s2s4=\");\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","styles","pause","play","jsxDEV","_jsxDEV","CustomAudioPlayer","src","_s","audioRef","lastUpdateTimeRef","isPlaying","setIsPlaying","progress","setProgress","togglePlay","audio","current","paused","handleTimeUpdate","currentTime","duration","className","audioPlayer","children","ref","onTimeUpdate","onEnded","preload","fileName","_jsxFileName","lineNumber","columnNumber","onClick","playButton","alt","progressBar","style","width","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/CustomAudioPlayer.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styles from '../styles/CustomAudioPlayer.module.css';\r\nimport pause from '../assets/images/custom-audio-player/pause.png'\r\nimport play from '../assets/images/custom-audio-player/play.png'\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n    const audioRef = useRef(null);\r\n    const lastUpdateTimeRef = useRef(0); \r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const togglePlay = () => {\r\n        const audio = audioRef.current;\r\n        if (audio.paused) {\r\n            audio.play();\r\n            setIsPlaying(true);\r\n        } else {\r\n            audio.pause();\r\n            setIsPlaying(false);\r\n        }\r\n    };\r\n\r\n    const handleTimeUpdate = () => {\r\n        const audio = audioRef.current;\r\n        const currentTime = audio.currentTime;\r\n        if (currentTime - lastUpdateTimeRef.current >= 0.1 || currentTime === 0) {\r\n            setProgress((currentTime / audio.duration) * 100);\r\n            lastUpdateTimeRef.current = currentTime;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.audioPlayer}>\r\n            <audio\r\n                ref={audioRef}\r\n                src={src}\r\n                onTimeUpdate={handleTimeUpdate}\r\n                onEnded={() => setIsPlaying(false)}\r\n                preload=\"metadata\"\r\n            />\r\n            <button onClick={togglePlay} className={styles.playButton}>\r\n                {isPlaying ? <img src={pause} alt='pause'/> : <img src={play} alt='play'/>}\r\n            </button>\r\n            <div className={styles.progressBar}>\r\n                <div\r\n                    className={styles.progress}\r\n                    style={{ width: `${progress}%` }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}