{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\emoji-picker\\\\EmojiPicker.js\",\n  _s = $RefreshSig$();\nimport { useRef, useMemo, memo, useCallback } from 'react';\nimport { Virtuoso } from 'react-virtuoso';\nimport styles from './EmojiPicker.module.css';\nimport emojiData from 'unicode-emoji-json/data-by-group';\nimport DataSeparator from '../data-separator/DataSeparator';\nimport animal from '../../../assets/images/emojis/animal.png';\nimport ball from '../../../assets/images/emojis/ball.png';\nimport car from '../../../assets/images/emojis/car.png';\nimport diff from '../../../assets/images/emojis/diff.png';\nimport flag from '../../../assets/images/emojis/flag.png';\nimport food from '../../../assets/images/emojis/food.png';\nimport person from '../../../assets/images/emojis/person.png';\nimport smiley from '../../../assets/images/emojis/smiley.png';\nimport watch from '../../../assets/images/emojis/watch.png';\nimport bulb from '../../../assets/images/emojis/bulb.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = props => {\n  _s();\n  const {\n    onSelect,\n    mainEmojis\n  } = props;\n  const groupRefs = useRef({});\n  const emojis = useMemo(() => Object.entries(emojiData), []);\n  const groupImages = {\n    'Smileys & Emotion': smiley,\n    'People & Body': person,\n    'Animals & Nature': animal,\n    'Food & Drink': food,\n    'Travel & Places': car,\n    'Activities': ball,\n    'Objects': bulb,\n    'Symbols': diff,\n    'Flags': flag\n  };\n  const whatImage = groupName => groupImages[groupName];\n  const handleScrollToGroup = useCallback(groupKey => {\n    const ref = groupRefs.current[groupKey];\n    if (ref) {\n      ref.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, []);\n  const separatorStyles = {\n    styleContainer: {\n      width: '100%',\n      color: '#2C2F36',\n      marginTop: '8px'\n    },\n    styleText: {\n      fontSize: '14px',\n      fontWeight: '400',\n      fontFamily: '\"Raleway\", sans-serif',\n      color: '#ADADBD',\n      margin: '0 15px',\n      letterSpacing: '0%'\n    },\n    lineColor: '#ADADBD'\n  };\n\n  // Для виртуального списка сделаем flat-массив элементов с разделителями и эмодзи\n  // Для главных эмодзи создадим отдельный элемент с key = 'frequent'\n  // Затем все остальные группы — каждый со своим ключом\n  // Виртуализация будет рендерить либо заголовок группы, либо кнопку эмодзи\n\n  // Построим массив элементов для виртуализации\n  // Каждый элемент: { type: 'separator' | 'emoji', key: string, groupKey?: string, emoji?: string, label?: string }\n\n  // Сначала частые (если есть)\n  const virtualItems = useMemo(() => {\n    const items = [];\n    if ((mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0) {\n      items.push({\n        type: 'separator',\n        key: 'frequent-separator',\n        label: 'Часто використовувані',\n        groupKey: 'frequent'\n      });\n      mainEmojis.forEach(emoji => {\n        items.push({\n          type: 'emoji',\n          key: `frequent-${emoji}`,\n          emoji,\n          groupKey: 'frequent',\n          label: emoji\n        });\n      });\n    }\n    emojis.forEach(([groupKey, data]) => {\n      items.push({\n        type: 'separator',\n        key: `sep-${groupKey}`,\n        label: data.name,\n        groupKey\n      });\n      data.emojis.forEach(emojiData => {\n        items.push({\n          type: 'emoji',\n          key: emojiData.emoji,\n          emoji: emojiData.emoji,\n          groupKey,\n          label: emojiData.name\n        });\n      });\n    });\n    return items;\n  }, [mainEmojis, emojis]);\n\n  // Для поддержки скролла к группе, сохраним индексы separators\n  const separatorIndices = useMemo(() => {\n    const map = {};\n    virtualItems.forEach((item, idx) => {\n      if (item.type === 'separator') {\n        map[item.groupKey] = idx;\n      }\n    });\n    return map;\n  }, [virtualItems]);\n  const virtuosoRef = useRef(null);\n\n  // Изменим handleScrollToGroup, чтобы скроллить к индексу виртуального списка\n  const scrollToGroup = useCallback(groupKey => {\n    const idx = separatorIndices[groupKey];\n    if (idx !== undefined && virtuosoRef.current) {\n      virtuosoRef.current.scrollToIndex({\n        index: idx,\n        align: 'start',\n        behavior: 'smooth'\n      });\n    }\n  }, [separatorIndices]);\n  const renderNavigation = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nav,\n    children: [(mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.emoji,\n      onClick: () => scrollToGroup('frequent'),\n      type: \"button\",\n      title: \"\\u0427\\u0430\\u0441\\u0442\\u043E \\u0432\\u0438\\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u043E\\u0432\\u0443\\u0432\\u0430\\u043D\\u0456\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: watch,\n          alt: \"\\u0427\\u0430\\u0441\\u0442\\u043E \\u0432\\u0438\\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u043E\\u0432\\u0443\\u0432\\u0430\\u043D\\u0456\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), emojis.map(([groupKey, data]) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.emoji,\n      onClick: () => scrollToGroup(groupKey),\n      type: \"button\",\n      title: data.name,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: whatImage(data.name),\n          alt: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)\n    }, groupKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n  const itemContent = index => {\n    const item = virtualItems[index];\n    if (item.type === 'separator') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => {\n          if (el) groupRefs.current[item.groupKey] = el;\n        },\n        className: styles.groupContainer,\n        children: /*#__PURE__*/_jsxDEV(DataSeparator, {\n          separatorStyles: separatorStyles,\n          data: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this);\n    }\n    if (item.type === 'emoji') {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSelect(item.emoji),\n        className: styles.emoji,\n        type: \"button\",\n        \"aria-label\": item.label,\n        title: item.label,\n        style: {\n          display: 'inline-block'\n        } // Добавил для надежности\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [renderNavigation(), /*#__PURE__*/_jsxDEV(Virtuoso, {\n      ref: virtuosoRef,\n      totalCount: virtualItems.length,\n      itemContent: itemContent,\n      style: {\n        height: '100%',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(EmojiPicker, \"2fro2PV/6oCKAe9rAsPRVqXRQuw=\");\n_c = EmojiPicker;\nexport default _c2 = /*#__PURE__*/memo(EmojiPicker);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmojiPicker\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useRef","useMemo","memo","useCallback","Virtuoso","styles","emojiData","DataSeparator","animal","ball","car","diff","flag","food","person","smiley","watch","bulb","jsxDEV","_jsxDEV","EmojiPicker","props","_s","onSelect","mainEmojis","groupRefs","emojis","Object","entries","groupImages","whatImage","groupName","handleScrollToGroup","groupKey","ref","current","scrollIntoView","behavior","block","separatorStyles","styleContainer","width","color","marginTop","styleText","fontSize","fontWeight","fontFamily","margin","letterSpacing","lineColor","virtualItems","items","length","push","type","key","label","forEach","emoji","data","name","separatorIndices","map","item","idx","virtuosoRef","scrollToGroup","undefined","scrollToIndex","index","align","renderNavigation","className","nav","children","onClick","title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","itemContent","el","groupContainer","style","display","container","totalCount","height","_c","_c2","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/emoji-picker/EmojiPicker.js"],"sourcesContent":["import { useRef, useMemo, memo, useCallback } from 'react';\r\nimport { Virtuoso } from 'react-virtuoso';\r\nimport styles from './EmojiPicker.module.css';\r\nimport emojiData from 'unicode-emoji-json/data-by-group';\r\nimport DataSeparator from '../data-separator/DataSeparator';\r\nimport animal from '../../../assets/images/emojis/animal.png';\r\nimport ball from '../../../assets/images/emojis/ball.png';\r\nimport car from '../../../assets/images/emojis/car.png';\r\nimport diff from '../../../assets/images/emojis/diff.png';\r\nimport flag from '../../../assets/images/emojis/flag.png';\r\nimport food from '../../../assets/images/emojis/food.png';\r\nimport person from '../../../assets/images/emojis/person.png';\r\nimport smiley from '../../../assets/images/emojis/smiley.png';\r\nimport watch from '../../../assets/images/emojis/watch.png';\r\nimport bulb from '../../../assets/images/emojis/bulb.png';\r\n\r\nconst EmojiPicker = (props) => {\r\n    const { onSelect, mainEmojis } = props;\r\n    const groupRefs = useRef({});\r\n\r\n    const emojis = useMemo(() => Object.entries(emojiData), []);\r\n\r\n    const groupImages = {\r\n        'Smileys & Emotion': smiley,\r\n        'People & Body': person,\r\n        'Animals & Nature': animal,\r\n        'Food & Drink': food,\r\n        'Travel & Places': car,\r\n        'Activities': ball,\r\n        'Objects': bulb,\r\n        'Symbols': diff,\r\n        'Flags': flag\r\n    };\r\n\r\n    const whatImage = (groupName) => groupImages[groupName];\r\n\r\n    const handleScrollToGroup = useCallback((groupKey) => {\r\n        const ref = groupRefs.current[groupKey];\r\n        if (ref) {\r\n            ref.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n    }, []);\r\n\r\n    const separatorStyles = {\r\n        styleContainer: {\r\n            width: '100%',\r\n            color: '#2C2F36',\r\n            marginTop: '8px'\r\n        },\r\n        styleText: {\r\n            fontSize: '14px',\r\n            fontWeight: '400',\r\n            fontFamily: '\"Raleway\", sans-serif',\r\n            color: '#ADADBD',\r\n            margin: '0 15px',\r\n            letterSpacing: '0%'\r\n        },\r\n        lineColor: '#ADADBD'\r\n    };\r\n\r\n    // Для виртуального списка сделаем flat-массив элементов с разделителями и эмодзи\r\n    // Для главных эмодзи создадим отдельный элемент с key = 'frequent'\r\n    // Затем все остальные группы — каждый со своим ключом\r\n    // Виртуализация будет рендерить либо заголовок группы, либо кнопку эмодзи\r\n\r\n    // Построим массив элементов для виртуализации\r\n    // Каждый элемент: { type: 'separator' | 'emoji', key: string, groupKey?: string, emoji?: string, label?: string }\r\n\r\n    // Сначала частые (если есть)\r\n    const virtualItems = useMemo(() => {\r\n        const items = [];\r\n\r\n        if (mainEmojis?.length > 0) {\r\n            items.push({ type: 'separator', key: 'frequent-separator', label: 'Часто використовувані', groupKey: 'frequent' });\r\n            mainEmojis.forEach((emoji) => {\r\n                items.push({ type: 'emoji', key: `frequent-${emoji}`, emoji, groupKey: 'frequent', label: emoji });\r\n            });\r\n        }\r\n\r\n        emojis.forEach(([groupKey, data]) => {\r\n            items.push({ type: 'separator', key: `sep-${groupKey}`, label: data.name, groupKey });\r\n            data.emojis.forEach((emojiData) => {\r\n                items.push({ type: 'emoji', key: emojiData.emoji, emoji: emojiData.emoji, groupKey, label: emojiData.name });\r\n            });\r\n        });\r\n\r\n        return items;\r\n    }, [mainEmojis, emojis]);\r\n\r\n    // Для поддержки скролла к группе, сохраним индексы separators\r\n    const separatorIndices = useMemo(() => {\r\n        const map = {};\r\n        virtualItems.forEach((item, idx) => {\r\n            if (item.type === 'separator') {\r\n                map[item.groupKey] = idx;\r\n            }\r\n        });\r\n        return map;\r\n    }, [virtualItems]);\r\n\r\n    const virtuosoRef = useRef(null);\r\n\r\n    // Изменим handleScrollToGroup, чтобы скроллить к индексу виртуального списка\r\n    const scrollToGroup = useCallback((groupKey) => {\r\n        const idx = separatorIndices[groupKey];\r\n        if (idx !== undefined && virtuosoRef.current) {\r\n            virtuosoRef.current.scrollToIndex({ index: idx, align: 'start', behavior: 'smooth' });\r\n        }\r\n    }, [separatorIndices]);\r\n\r\n    const renderNavigation = () => (\r\n        <div className={styles.nav}>\r\n            {mainEmojis?.length > 0 && (\r\n                <button\r\n                    className={styles.emoji}\r\n                    onClick={() => scrollToGroup('frequent')}\r\n                    type=\"button\"\r\n                    title=\"Часто використовувані\"\r\n                >\r\n                    <div>\r\n                        <img src={watch} alt='Часто використовувані' />\r\n                    </div>\r\n                </button>\r\n            )}\r\n            {emojis.map(([groupKey, data]) => (\r\n                <button\r\n                    key={groupKey}\r\n                    className={styles.emoji}\r\n                    onClick={() => scrollToGroup(groupKey)}\r\n                    type=\"button\"\r\n                    title={data.name}\r\n                >\r\n                    <div>\r\n                        <img src={whatImage(data.name)} alt={data.name} />\r\n                    </div>\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    const itemContent = (index) => {\r\n        const item = virtualItems[index];\r\n        if (item.type === 'separator') {\r\n            return (\r\n                <div\r\n                    ref={(el) => { if (el) groupRefs.current[item.groupKey] = el; }}\r\n                    className={styles.groupContainer}\r\n                >\r\n                    <DataSeparator\r\n                        separatorStyles={separatorStyles}\r\n                        data={item.label}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        if (item.type === 'emoji') {\r\n            return (\r\n                <button\r\n                    key={item.key}\r\n                    onClick={() => onSelect(item.emoji)}\r\n                    className={styles.emoji}\r\n                    type=\"button\"\r\n                    aria-label={item.label}\r\n                    title={item.label}\r\n                    style={{ display: 'inline-block' }} // Добавил для надежности\r\n                >\r\n                    <span>{item.emoji}</span>\r\n                </button>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {renderNavigation()}\r\n            {/* <div className={styles.emojiSection} style={{ height: 350 }}> */}\r\n            <Virtuoso\r\n                ref={virtuosoRef}\r\n                totalCount={virtualItems.length}\r\n                itemContent={itemContent}\r\n                style={{ height: '100%', width: '100%' }}\r\n            />\r\n            {/* </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(EmojiPicker);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}