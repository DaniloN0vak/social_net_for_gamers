{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\emoji-picker\\\\EmojiPicker.js\",\n  _s = $RefreshSig$();\nimport { useRef, useMemo, memo, useCallback } from 'react';\nimport { Virtuoso } from 'react-virtuoso';\nimport styles from './EmojiPicker.module.css';\nimport emojiData from 'unicode-emoji-json/data-by-group';\nimport DataSeparator from '../data-separator/DataSeparator';\nimport animal from '../../../assets/images/emojis/animal.png';\nimport ball from '../../../assets/images/emojis/ball.png';\nimport car from '../../../assets/images/emojis/car.png';\nimport diff from '../../../assets/images/emojis/diff.png';\nimport flag from '../../../assets/images/emojis/flag.png';\nimport food from '../../../assets/images/emojis/food.png';\nimport person from '../../../assets/images/emojis/person.png';\nimport smiley from '../../../assets/images/emojis/smiley.png';\nimport watch from '../../../assets/images/emojis/watch.png';\nimport bulb from '../../../assets/images/emojis/bulb.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = ({\n  onSelect,\n  mainEmojis\n}) => {\n  _s();\n  const groupRefs = useRef({});\n  const emojis = useMemo(() => Object.entries(emojiData), []);\n  const separatorStyles = {\n    styleContainer: {\n      width: '100%',\n      color: '#2C2F36',\n      marginTop: '8px'\n    },\n    styleText: {\n      fontSize: '14px',\n      fontWeight: '400',\n      fontFamily: '\"Raleway\", sans-serif',\n      color: '#ADADBD',\n      margin: '0 15px',\n      letterSpacing: '0%'\n    },\n    lineColor: '#ADADBD'\n  };\n\n  // Подготовим единый плоский массив с элементами для виртуализации:\n  const items = useMemo(() => {\n    const list = [];\n    if ((mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0) {\n      list.push({\n        type: 'separator',\n        key: 'frequent-separator',\n        label: 'Часто використовувані',\n        groupKey: 'frequent'\n      });\n      mainEmojis.forEach(emoji => {\n        list.push({\n          type: 'emoji',\n          key: `frequent-${emoji}`,\n          emoji,\n          label: emoji,\n          groupKey: 'frequent'\n        });\n      });\n    }\n    emojis.forEach(([groupKey, data]) => {\n      list.push({\n        type: 'separator',\n        key: `separator-${groupKey}`,\n        label: data.name,\n        groupKey\n      });\n      data.emojis.forEach(({\n        emoji,\n        name\n      }) => {\n        list.push({\n          type: 'emoji',\n          key: `emoji-${groupKey}-${emoji}`,\n          emoji,\n          label: name,\n          groupKey\n        });\n      });\n    });\n    return list;\n  }, [mainEmojis, emojis]);\n  const itemContent = index => {\n    const item = items[index];\n    if (item.type === 'separator') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => {\n          if (el) groupRefs.current[item.groupKey] = el;\n        },\n        className: styles.groupContainer,\n        children: /*#__PURE__*/_jsxDEV(DataSeparator, {\n          separatorStyles: separatorStyles,\n          data: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    }\n    if (item.type === 'emoji') {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSelect(item.emoji),\n        className: styles.emoji,\n        type: \"button\",\n        \"aria-label\": item.label,\n        title: item.label,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nav,\n      children: [(mainEmojis === null || mainEmojis === void 0 ? void 0 : mainEmojis.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.emoji,\n        onClick: () => {\n          var _groupRefs$current$fr;\n          return (_groupRefs$current$fr = groupRefs.current['frequent']) === null || _groupRefs$current$fr === void 0 ? void 0 : _groupRefs$current$fr.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        },\n        type: \"button\",\n        title: \"\\u0427\\u0430\\u0441\\u0442\\u043E \\u0432\\u0438\\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u043E\\u0432\\u0443\\u0432\\u0430\\u043D\\u0456\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: watch,\n            alt: \"watch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), emojis.map(([groupKey, data]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.emoji,\n        onClick: () => {\n          var _groupRefs$current$gr;\n          return (_groupRefs$current$gr = groupRefs.current[groupKey]) === null || _groupRefs$current$gr === void 0 ? void 0 : _groupRefs$current$gr.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        },\n        type: \"button\",\n        title: data.name,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: whatImage(data.name),\n            alt: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)\n      }, groupKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emojiSection,\n      children: /*#__PURE__*/_jsxDEV(Virtuoso, {\n        totalCount: items.length,\n        itemContent: itemContent,\n        style: {\n          height: 350,\n          width: '100%'\n        } // Размеры под твой контейнер\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n// Не забудь оставить функцию whatImage, она у тебя была:\n_s(EmojiPicker, \"nkHHYl8XeIskyMy13zR1cNZmeMk=\");\n_c = EmojiPicker;\nconst whatImage = groupName => {\n  if (groupName === 'Smileys & Emotion') return smiley;\n  if (groupName === 'People & Body') return person;\n  if (groupName === 'Animals & Nature') return animal;\n  if (groupName === 'Food & Drink') return food;\n  if (groupName === 'Travel & Places') return car;\n  if (groupName === 'Activities') return ball;\n  if (groupName === 'Objects') return bulb;\n  if (groupName === 'Symbols') return diff;\n  if (groupName === 'Flags') return flag;\n};\nexport default _c2 = /*#__PURE__*/memo(EmojiPicker);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmojiPicker\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useRef","useMemo","memo","useCallback","Virtuoso","styles","emojiData","DataSeparator","animal","ball","car","diff","flag","food","person","smiley","watch","bulb","jsxDEV","_jsxDEV","EmojiPicker","onSelect","mainEmojis","_s","groupRefs","emojis","Object","entries","separatorStyles","styleContainer","width","color","marginTop","styleText","fontSize","fontWeight","fontFamily","margin","letterSpacing","lineColor","items","list","length","push","type","key","label","groupKey","forEach","emoji","data","name","itemContent","index","item","ref","el","current","className","groupContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","container","nav","_groupRefs$current$fr","scrollIntoView","behavior","block","src","alt","map","_groupRefs$current$gr","whatImage","emojiSection","totalCount","style","height","_c","groupName","_c2","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/emoji-picker/EmojiPicker.js"],"sourcesContent":["import { useRef, useMemo, memo, useCallback } from 'react';\r\nimport { Virtuoso } from 'react-virtuoso';\r\nimport styles from './EmojiPicker.module.css';\r\nimport emojiData from 'unicode-emoji-json/data-by-group';\r\nimport DataSeparator from '../data-separator/DataSeparator';\r\nimport animal from '../../../assets/images/emojis/animal.png';\r\nimport ball from '../../../assets/images/emojis/ball.png';\r\nimport car from '../../../assets/images/emojis/car.png';\r\nimport diff from '../../../assets/images/emojis/diff.png';\r\nimport flag from '../../../assets/images/emojis/flag.png';\r\nimport food from '../../../assets/images/emojis/food.png';\r\nimport person from '../../../assets/images/emojis/person.png';\r\nimport smiley from '../../../assets/images/emojis/smiley.png';\r\nimport watch from '../../../assets/images/emojis/watch.png';\r\nimport bulb from '../../../assets/images/emojis/bulb.png';\r\n\r\nconst EmojiPicker = ({ onSelect, mainEmojis }) => {\r\n    const groupRefs = useRef({});\r\n\r\n    const emojis = useMemo(() => Object.entries(emojiData), []);\r\n\r\n    const separatorStyles = {\r\n        styleContainer: {\r\n            width: '100%',\r\n            color: '#2C2F36',\r\n            marginTop: '8px'\r\n        },\r\n        styleText: {\r\n            fontSize: '14px',\r\n            fontWeight: '400',\r\n            fontFamily: '\"Raleway\", sans-serif',\r\n            color: '#ADADBD',\r\n            margin: '0 15px',\r\n            letterSpacing: '0%'\r\n        },\r\n        lineColor: '#ADADBD'\r\n    };\r\n\r\n    // Подготовим единый плоский массив с элементами для виртуализации:\r\n    const items = useMemo(() => {\r\n        const list = [];\r\n\r\n        if (mainEmojis?.length > 0) {\r\n            list.push({\r\n                type: 'separator',\r\n                key: 'frequent-separator',\r\n                label: 'Часто використовувані',\r\n                groupKey: 'frequent',\r\n            });\r\n            mainEmojis.forEach((emoji) => {\r\n                list.push({\r\n                    type: 'emoji',\r\n                    key: `frequent-${emoji}`,\r\n                    emoji,\r\n                    label: emoji,\r\n                    groupKey: 'frequent',\r\n                });\r\n            });\r\n        }\r\n\r\n        emojis.forEach(([groupKey, data]) => {\r\n            list.push({\r\n                type: 'separator',\r\n                key: `separator-${groupKey}`,\r\n                label: data.name,\r\n                groupKey,\r\n            });\r\n            data.emojis.forEach(({ emoji, name }) => {\r\n                list.push({\r\n                    type: 'emoji',\r\n                    key: `emoji-${groupKey}-${emoji}`,\r\n                    emoji,\r\n                    label: name,\r\n                    groupKey,\r\n                });\r\n            });\r\n        });\r\n\r\n        return list;\r\n    }, [mainEmojis, emojis]);\r\n\r\n    const itemContent = (index) => {\r\n        const item = items[index];\r\n        if (item.type === 'separator') {\r\n            return (\r\n                <div\r\n                    ref={(el) => {\r\n                        if (el) groupRefs.current[item.groupKey] = el;\r\n                    }}\r\n                    className={styles.groupContainer}\r\n                >\r\n                    <DataSeparator\r\n                        separatorStyles={separatorStyles}\r\n                        data={item.label}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (item.type === 'emoji') {\r\n            return (\r\n                <button\r\n                    key={item.key}\r\n                    onClick={() => onSelect(item.emoji)}\r\n                    className={styles.emoji}\r\n                    type=\"button\"\r\n                    aria-label={item.label}\r\n                    title={item.label}\r\n                >\r\n                    <span>{item.emoji}</span>\r\n                </button>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* Навигация можно оставить без изменений */}\r\n            <div className={styles.nav}>\r\n                {mainEmojis?.length > 0 && (\r\n                    <button\r\n                        className={styles.emoji}\r\n                        onClick={() => groupRefs.current['frequent']?.scrollIntoView({ behavior: 'smooth', block: 'start' })}\r\n                        type=\"button\"\r\n                        title=\"Часто використовувані\"\r\n                    >\r\n                        <div>\r\n                            <img src={watch} alt=\"watch\" />\r\n                        </div>\r\n                    </button>\r\n                )}\r\n                {emojis.map(([groupKey, data]) => (\r\n                    <button\r\n                        key={groupKey}\r\n                        className={styles.emoji}\r\n                        onClick={() => groupRefs.current[groupKey]?.scrollIntoView({ behavior: 'smooth', block: 'start' })}\r\n                        type=\"button\"\r\n                        title={data.name}\r\n                    >\r\n                        <div>\r\n                            <img src={whatImage(data.name)} alt={data.name} />\r\n                        </div>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Виртуализированный список */}\r\n            <div className={styles.emojiSection}>\r\n                <Virtuoso\r\n                    totalCount={items.length}\r\n                    itemContent={itemContent}\r\n                    style={{ height: 350, width: '100%' }} // Размеры под твой контейнер\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Не забудь оставить функцию whatImage, она у тебя была:\r\nconst whatImage = (groupName) => {\r\n    if (groupName === 'Smileys & Emotion') return smiley;\r\n    if (groupName === 'People & Body') return person;\r\n    if (groupName === 'Animals & Nature') return animal;\r\n    if (groupName === 'Food & Drink') return food;\r\n    if (groupName === 'Travel & Places') return car;\r\n    if (groupName === 'Activities') return ball;\r\n    if (groupName === 'Objects') return bulb;\r\n    if (groupName === 'Symbols') return diff;\r\n    if (groupName === 'Flags') return flag;\r\n};\r\n\r\nexport default memo(EmojiPicker);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}