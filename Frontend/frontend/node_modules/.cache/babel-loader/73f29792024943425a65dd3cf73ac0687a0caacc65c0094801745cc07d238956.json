{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\EmojiPicker.js\",\n  _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport styles from '../styles/EmojiPicker.module.css';\nimport emojiData from 'unicode-emoji-json/data-by-group';\nimport DataSeparator from './DataSeparator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = ({\n  onSelect\n}) => {\n  _s();\n  const emojis = Object.entries(emojiData);\n  const groupRefs = useRef({});\n  console.log(emojis.map(x => x.data).map(y => y.name));\n  const handleScrollToGroup = groupKey => {\n    const ref = groupRefs.current[groupKey];\n    if (ref) {\n      ref.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  const renderNavigation = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nav,\n      children: emojis.map(([groupKey, data]) => {\n        var _data$emojis$;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.navButton,\n          onClick: () => handleScrollToGroup(groupKey),\n          type: \"button\",\n          children: ((_data$emojis$ = data.emojis[0]) === null || _data$emojis$ === void 0 ? void 0 : _data$emojis$.emoji) || '❓'\n        }, groupKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  };\n  const renderEmojis = () => {\n    return emojis.map(([groupKey, data]) => {\n      if (!groupRefs.current[groupKey]) {\n        groupRefs.current[groupKey] = null;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => groupRefs.current[groupKey] = el,\n        className: styles.groupContainer,\n        children: [/*#__PURE__*/_jsxDEV(DataSeparator, {\n          data: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), data.emojis.map(emojiData => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelect(emojiData.emoji),\n          className: styles.emoji,\n          type: \"button\",\n          children: emojiData.emoji\n        }, emojiData.emoji, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this))]\n      }, groupKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [renderNavigation(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emojiSection,\n      children: renderEmojis()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(EmojiPicker, \"G8bNiVxMbBIIGs/M5ue04BGJVIs=\");\n_c = EmojiPicker;\nexport default EmojiPicker;\nvar _c;\n$RefreshReg$(_c, \"EmojiPicker\");","map":{"version":3,"names":["useRef","styles","emojiData","DataSeparator","jsxDEV","_jsxDEV","EmojiPicker","onSelect","_s","emojis","Object","entries","groupRefs","console","log","map","x","data","y","name","handleScrollToGroup","groupKey","ref","current","scrollIntoView","behavior","block","renderNavigation","className","nav","children","_data$emojis$","navButton","onClick","type","emoji","fileName","_jsxFileName","lineNumber","columnNumber","renderEmojis","el","groupContainer","container","emojiSection","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/EmojiPicker.js"],"sourcesContent":["import { useRef } from 'react';\r\nimport styles from '../styles/EmojiPicker.module.css';\r\nimport emojiData from 'unicode-emoji-json/data-by-group';\r\nimport DataSeparator from './DataSeparator';\r\n\r\nconst EmojiPicker = ({ onSelect }) => {\r\n    const emojis = Object.entries(emojiData);\r\n    const groupRefs = useRef({});\r\n\r\n    console.log(emojis.map(x => x.data).map(y => y.name));\r\n\r\n    const handleScrollToGroup = (groupKey) => {\r\n        const ref = groupRefs.current[groupKey];\r\n        if (ref) {\r\n            ref.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n    };\r\n\r\n    const renderNavigation = () => {\r\n        return (\r\n            <div className={styles.nav}>\r\n                {emojis.map(([groupKey, data]) => (\r\n                    <button\r\n                        key={groupKey}\r\n                        className={styles.navButton}\r\n                        onClick={() => handleScrollToGroup(groupKey)}\r\n                        type=\"button\"\r\n                    >\r\n                        {data.emojis[0]?.emoji || '❓'}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderEmojis = () => {\r\n        return emojis.map(([groupKey, data]) => {\r\n            if (!groupRefs.current[groupKey]) {\r\n                groupRefs.current[groupKey] = null;\r\n            }\r\n\r\n            return (\r\n                <div\r\n                    key={groupKey}\r\n                    ref={(el) => (groupRefs.current[groupKey] = el)}\r\n                    className={styles.groupContainer}\r\n                >\r\n                    <DataSeparator data={data.name} />\r\n                    {data.emojis.map((emojiData) => (\r\n                        <button\r\n                            key={emojiData.emoji}\r\n                            onClick={() => onSelect(emojiData.emoji)}\r\n                            className={styles.emoji}\r\n                            type=\"button\"\r\n                        >\r\n                            {emojiData.emoji}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {renderNavigation()}\r\n            <div className={styles.emojiSection}>\r\n                {renderEmojis()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmojiPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}