{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\message-input\\\\MessageInput.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport styles from './MessageInput.module.css';\nimport arrow from '../../../assets/images/message-form/arrow.png';\nimport microfon from '../../../assets/images/message-form/microfon.png';\nimport microfonSelected from '../../../assets/images/message-form/microfon-selected.png';\nimport cross from '../../../assets/images/message-form/cross.png';\nimport EmojiPickerContainer from \"../picker-containers/emoji-picker-container/EmojiPickerContainer\";\nimport GifPickerContainer from \"../picker-containers/gif-picker-container/GifPickerContainer\";\nimport FilePickerContainer from \"../picker-containers/file-picker-container/FilePickerContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageInput({\n  messageControl,\n  filesControl,\n  gifControl,\n  audioRecordingControl,\n  content\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  // const { mediaList, setMediaList } = filesControl;\n  const {\n    message,\n    setMessage\n  } = messageControl;\n  const {\n    gif,\n    selectGif\n  } = gifControl;\n  const {\n    audioChunks,\n    setAudioChunks\n  } = audioRecordingControl;\n  const fileInputRef = useRef(null);\n  // const handleAudioClick = async () => {\n  //     if (!isRecording) {\n  //         try {\n  //             const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  //             const recorder = new MediaRecorder(stream);\n  //             const chunks = [];\n\n  //             recorder.ondataavailable = (e) => {\n  //                 if (e.data.size > 0) chunks.push(e.data);\n  //             };\n\n  //             recorder.onstop = () => {\n  //                 const audioBlob = new Blob(chunks, { type: 'audio/webm' });\n  //                 const audioUrl = URL.createObjectURL(audioBlob);\n\n  //                 const newAudio = {\n  //                     id: `${Date.now()}_audio`,\n  //                     type: 'audio',\n  //                     src: audioUrl,\n  //                     file: audioBlob\n  //                 };\n  //                 setMediaList(prev => [...prev, newAudio]);\n  //             };\n\n  //             recorder.start();\n  //             setMediaRecorder(recorder);\n  //             setAudioChunks(chunks);\n  //             setIsRecording(true);\n  //         } catch (err) {\n  //             console.error('Ошибка при доступе к микрофону', err);\n  //         }\n  //     } else {\n  //         mediaRecorder?.stop();\n  //         setIsRecording(false);\n  //     }\n  // };\n  // const handleRemoveMedia = (media) => {\n  //     if (media.type === 'selected_gif') {\n  //         setGifList((prev) => prev.filter((gif) => gif.id !== media.id));\n  //     }\n  //     else {\n  //         setMediaList((prev) => prev.filter((content) => content.id !== media.id));\n  //     }\n  // };\n  const textareaRef = useRef(null);\n  const handleInput = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = textarea.scrollHeight + 'px';\n    }\n  };\n\n  // const handleImageUpload = (event) => {\n  //     if (mediaList.length < 11) {\n  //         const files = Array.from(event.target.files);\n  //         const newMedia = files.map((file, index) => ({\n  //             id: `${Date.now()}_${index}`,\n  //             type: file.type.startsWith('video') ? 'video' : 'image',\n  //             src: URL.createObjectURL(file),\n  //             file\n  //         }));\n  //         setMediaList((prev) => [...prev, ...newMedia]);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    name: \"messageInput\",\n    className: styles.messageForm,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      name: \"message\",\n      className: styles.messageInput,\n      autoComplete: \"off\",\n      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448\\u0435 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\",\n      onInput: handleInput,\n      rows: 1,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageImages,\n      children: [content.some(item => item.includes('emoji')) && /*#__PURE__*/_jsxDEV(EmojiPickerContainer, {\n        setMessage: setMessage,\n        textareaRef: textareaRef,\n        handleInput: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 18\n      }, this), content.some(item => item.includes('gif')) && /*#__PURE__*/_jsxDEV(GifPickerContainer, {\n        setGif: selectGif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 18\n      }, this), content.some(item => item.includes('upload')) && /*#__PURE__*/_jsxDEV(FilePickerContainer, {\n        filesControl: filesControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAudioClick,\n        children: isRecording ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: microfonSelected,\n          alt: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: microfon,\n          alt: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow,\n          alt: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 13\n  }, this);\n}\n_s(MessageInput, \"avpGJetRYhjmR+zP8RrAx1LoWoI=\");\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styles","arrow","microfon","microfonSelected","cross","EmojiPickerContainer","GifPickerContainer","FilePickerContainer","jsxDEV","_jsxDEV","MessageInput","messageControl","filesControl","gifControl","audioRecordingControl","content","_s","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","message","setMessage","gif","selectGif","audioChunks","setAudioChunks","fileInputRef","textareaRef","handleInput","textarea","current","style","height","scrollHeight","name","className","messageForm","children","ref","messageInput","autoComplete","placeholder","onInput","rows","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","messageImages","some","item","includes","setGif","type","onClick","handleAudioClick","src","alt","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/message-input/MessageInput.js"],"sourcesContent":["import React from \"react\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport styles from './MessageInput.module.css';\r\nimport arrow from '../../../assets/images/message-form/arrow.png';\r\nimport microfon from '../../../assets/images/message-form/microfon.png';\r\nimport microfonSelected from '../../../assets/images/message-form/microfon-selected.png';\r\nimport cross from '../../../assets/images/message-form/cross.png';\r\nimport EmojiPickerContainer from \"../picker-containers/emoji-picker-container/EmojiPickerContainer\";\r\nimport GifPickerContainer from \"../picker-containers/gif-picker-container/GifPickerContainer\";\r\nimport FilePickerContainer from \"../picker-containers/file-picker-container/FilePickerContainer\";\r\n\r\nfunction MessageInput({ messageControl, filesControl, gifControl, audioRecordingControl, content }) {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    // const { mediaList, setMediaList } = filesControl;\r\n    const { message, setMessage } = messageControl;\r\n    const { gif, selectGif } = gifControl;\r\n    const { audioChunks, setAudioChunks } = audioRecordingControl;\r\n    const fileInputRef = useRef(null);\r\n    // const handleAudioClick = async () => {\r\n    //     if (!isRecording) {\r\n    //         try {\r\n    //             const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    //             const recorder = new MediaRecorder(stream);\r\n    //             const chunks = [];\r\n\r\n    //             recorder.ondataavailable = (e) => {\r\n    //                 if (e.data.size > 0) chunks.push(e.data);\r\n    //             };\r\n\r\n    //             recorder.onstop = () => {\r\n    //                 const audioBlob = new Blob(chunks, { type: 'audio/webm' });\r\n    //                 const audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n    //                 const newAudio = {\r\n    //                     id: `${Date.now()}_audio`,\r\n    //                     type: 'audio',\r\n    //                     src: audioUrl,\r\n    //                     file: audioBlob\r\n    //                 };\r\n    //                 setMediaList(prev => [...prev, newAudio]);\r\n    //             };\r\n\r\n    //             recorder.start();\r\n    //             setMediaRecorder(recorder);\r\n    //             setAudioChunks(chunks);\r\n    //             setIsRecording(true);\r\n    //         } catch (err) {\r\n    //             console.error('Ошибка при доступе к микрофону', err);\r\n    //         }\r\n    //     } else {\r\n    //         mediaRecorder?.stop();\r\n    //         setIsRecording(false);\r\n    //     }\r\n    // };\r\n    // const handleRemoveMedia = (media) => {\r\n    //     if (media.type === 'selected_gif') {\r\n    //         setGifList((prev) => prev.filter((gif) => gif.id !== media.id));\r\n    //     }\r\n    //     else {\r\n    //         setMediaList((prev) => prev.filter((content) => content.id !== media.id));\r\n    //     }\r\n    // };\r\n    const textareaRef = useRef(null);\r\n\r\n    const handleInput = () => {\r\n        const textarea = textareaRef.current;\r\n        if (textarea) {\r\n            textarea.style.height = 'auto';\r\n            textarea.style.height = textarea.scrollHeight + 'px';\r\n        }\r\n    };\r\n\r\n    // const handleImageUpload = (event) => {\r\n    //     if (mediaList.length < 11) {\r\n    //         const files = Array.from(event.target.files);\r\n    //         const newMedia = files.map((file, index) => ({\r\n    //             id: `${Date.now()}_${index}`,\r\n    //             type: file.type.startsWith('video') ? 'video' : 'image',\r\n    //             src: URL.createObjectURL(file),\r\n    //             file\r\n    //         }));\r\n    //         setMediaList((prev) => [...prev, ...newMedia]);\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    return (<form name=\"messageInput\" className={styles.messageForm}>\r\n        <textarea\r\n            ref={textareaRef}\r\n            name=\"message\"\r\n            className={styles.messageInput}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Напишіть ваше повідомлення\"\r\n            onInput={handleInput}\r\n            rows={1}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <div className={styles.messageImages}>\r\n\r\n            {content.some(item => item.includes('emoji')) &&\r\n                (<EmojiPickerContainer setMessage={setMessage} textareaRef={textareaRef} handleInput={handleInput} />)\r\n            }\r\n            {content.some(item => item.includes('gif')) &&\r\n                (<GifPickerContainer setGif={selectGif} />)\r\n            }\r\n            {content.some(item => item.includes('upload')) &&\r\n                (<FilePickerContainer filesControl={filesControl}/>)\r\n            }\r\n\r\n            <button type=\"button\" onClick={handleAudioClick}>\r\n                {isRecording ? (<img src={microfonSelected} alt=\"audio\" />) : (<img src={microfon} alt=\"audio\" />)}\r\n            </button>\r\n\r\n            <button type=\"submit\"><img src={arrow} alt=\"send\" /></button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default MessageInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}