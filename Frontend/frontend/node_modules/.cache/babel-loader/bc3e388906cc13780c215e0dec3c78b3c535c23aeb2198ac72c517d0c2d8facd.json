{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\GifPicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/GifPicker.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TENOR_API_KEY = 'AIzaSyBHdF6XBz7mujjoH1Sj25AiE7sdvZrJonY';\nconst TENOR_ENDPOINT = 'https://tenor.googleapis.com/v2/search';\nfunction GifPicker({\n  onSelect\n}) {\n  _s();\n  const [query, setQuery] = useState('');\n  const [gifs, setGifs] = useState([]);\n  useEffect(() => {\n    const fetchGifs = async () => {\n      if (!query) return;\n      try {\n        const response = await fetch(`${TENOR_ENDPOINT}?q=${encodeURIComponent(query)}&key=${TENOR_API_KEY}&limit=20`);\n        const data = await response.json();\n        setGifs(data.results || []);\n      } catch (error) {\n        console.error('Ошибка при загрузке GIF:', error);\n      }\n    };\n    const delayDebounce = setTimeout(() => {\n      fetchGifs();\n    }, 500);\n    return () => clearTimeout(delayDebounce);\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A GIF\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        className: styles.searchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gifGrid,\n      children: gifs.map(gif => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSelect(gif.media_formats.gif.url),\n        className: styles.gifButton,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gif.media_formats.tinygif.url,\n          alt: gif.content_description,\n          className: styles.gifImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, gif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(GifPicker, \"xxcXi9lzbOmmaL4ODOmAr3ifGnw=\");\n_c = GifPicker;\nexport default GifPicker;\nvar _c;\n$RefreshReg$(_c, \"GifPicker\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","TENOR_API_KEY","TENOR_ENDPOINT","GifPicker","onSelect","_s","query","setQuery","gifs","setGifs","fetchGifs","response","fetch","encodeURIComponent","data","json","results","error","console","delayDebounce","setTimeout","clearTimeout","className","container","children","inputContainer","type","placeholder","value","onChange","e","target","searchInput","fileName","_jsxFileName","lineNumber","columnNumber","gifGrid","map","gif","onClick","media_formats","url","gifButton","src","tinygif","alt","content_description","gifImage","id","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/GifPicker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from '../styles/GifPicker.module.css';\r\n\r\nconst TENOR_API_KEY = 'AIzaSyBHdF6XBz7mujjoH1Sj25AiE7sdvZrJonY';\r\nconst TENOR_ENDPOINT = 'https://tenor.googleapis.com/v2/search';\r\n\r\nfunction GifPicker({ onSelect }) {\r\n    const [query, setQuery] = useState('');\r\n    const [gifs, setGifs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchGifs = async () => {\r\n            if (!query) return;\r\n            try {\r\n                const response = await fetch(\r\n                    `${TENOR_ENDPOINT}?q=${encodeURIComponent(query)}&key=${TENOR_API_KEY}&limit=20`\r\n                );\r\n                const data = await response.json();\r\n                setGifs(data.results || []);\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке GIF:', error);\r\n            }\r\n        };\r\n\r\n        const delayDebounce = setTimeout(() => {\r\n            fetchGifs();\r\n        }, 500);\r\n\r\n        return () => clearTimeout(delayDebounce);\r\n    }, [query]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.inputContainer}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Пошук GIF\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    className={styles.searchInput}\r\n                />\r\n            </div>\r\n            <div className={styles.gifGrid}>\r\n                {gifs.map((gif) => (\r\n                    <button\r\n                        key={gif.id}\r\n                        onClick={() => onSelect(gif.media_formats.gif.url)}\r\n                        className={styles.gifButton}\r\n                    >\r\n                        <img\r\n                            src={gif.media_formats.tinygif.url}\r\n                            alt={gif.content_description}\r\n                            className={styles.gifImage}\r\n                        />\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}