{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\custom-audio-player\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$();\n// CustomAudioPlayer.jsx\nimport React, { useRef, useState, useEffect } from 'react';\nimport styles from './CustomAudioPlayer.module.css';\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\nimport play from '../../../assets/images/custom-audio-player/play.png';\nimport AudioTimer from '../audio-recorder/AudioTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n      setIsPlaying(true);\n    } else {\n      audio.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    // Обновляем текущие время и прогресс\n    setCurrentTime(audio.currentTime);\n    setProgress(audio.currentTime / audio.duration * 100);\n  };\n  const handleLoadedMetadata = () => {\n    const audio = audioRef.current;\n    setDuration(audio.duration);\n    // перед проигрыванием прогресс = 0, таймер показывает полную длину\n    setProgress(0);\n    setCurrentTime(0);\n  };\n  const handleProgressClick = e => {\n    if (duration <= 0) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const newProgress = clickX / rect.width;\n    const audio = audioRef.current;\n    audio.currentTime = newProgress * audio.duration;\n    // синхронизируем локальные стейты\n    setCurrentTime(audio.currentTime);\n    setProgress(newProgress * 100);\n  };\n\n  // Сброс стейтов при смене src\n  useEffect(() => {\n    setIsPlaying(false);\n    setProgress(0);\n    setDuration(0);\n    setCurrentTime(0);\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      preload: \"metadata\",\n      onLoadedMetadata: handleLoadedMetadata,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: () => setIsPlaying(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: togglePlay,\n      className: styles.playButton,\n      \"aria-label\": isPlaying ? 'Pause audio' : 'Play audio',\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pause,\n        alt: \"Pause\",\n        className: styles.play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: play,\n        alt: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      onClick: handleProgressClick,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": duration,\n      \"aria-valuenow\": currentTime,\n      tabIndex: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioTimer, {\n      isPaused: !isPlaying,\n      time: isPlaying ? currentTime : duration,\n      withDot: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomAudioPlayer, \"W4K5VeO2fxA/wKncmGs8m6wbArA=\");\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styles","pause","play","AudioTimer","jsxDEV","_jsxDEV","CustomAudioPlayer","src","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","duration","setDuration","currentTime","setCurrentTime","togglePlay","audio","current","paused","handleTimeUpdate","handleLoadedMetadata","handleProgressClick","e","rect","currentTarget","getBoundingClientRect","clickX","clientX","left","newProgress","width","className","audioPlayer","children","ref","preload","onLoadedMetadata","onTimeUpdate","onEnded","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","playButton","alt","progressBar","role","tabIndex","style","isPaused","time","withDot","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/custom-audio-player/CustomAudioPlayer.js"],"sourcesContent":["// CustomAudioPlayer.jsx\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport styles from './CustomAudioPlayer.module.css';\r\nimport pause from '../../../assets/images/custom-audio-player/pause.png';\r\nimport play from '../../../assets/images/custom-audio-player/play.png';\r\nimport AudioTimer from '../audio-recorder/AudioTimer';\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n  const audioRef = useRef(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  const togglePlay = () => {\r\n    const audio = audioRef.current;\r\n    if (audio.paused) {\r\n      audio.play();\r\n      setIsPlaying(true);\r\n    } else {\r\n      audio.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    const audio = audioRef.current;\r\n    // Обновляем текущие время и прогресс\r\n    setCurrentTime(audio.currentTime);\r\n    setProgress((audio.currentTime / audio.duration) * 100);\r\n  };\r\n\r\n  const handleLoadedMetadata = () => {\r\n    const audio = audioRef.current;\r\n    setDuration(audio.duration);\r\n    // перед проигрыванием прогресс = 0, таймер показывает полную длину\r\n    setProgress(0);\r\n    setCurrentTime(0);\r\n  };\r\n\r\n  const handleProgressClick = (e) => {\r\n    if (duration <= 0) return;\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const clickX = e.clientX - rect.left;\r\n    const newProgress = clickX / rect.width;\r\n    const audio = audioRef.current;\r\n    audio.currentTime = newProgress * audio.duration;\r\n    // синхронизируем локальные стейты\r\n    setCurrentTime(audio.currentTime);\r\n    setProgress(newProgress * 100);\r\n  };\r\n\r\n  // Сброс стейтов при смене src\r\n  useEffect(() => {\r\n    setIsPlaying(false);\r\n    setProgress(0);\r\n    setDuration(0);\r\n    setCurrentTime(0);\r\n  }, [src]);\r\n\r\n  return (\r\n    <div className={styles.audioPlayer}>\r\n      <audio\r\n        ref={audioRef}\r\n        src={src}\r\n        preload=\"metadata\"\r\n        onLoadedMetadata={handleLoadedMetadata}\r\n        onTimeUpdate={handleTimeUpdate}\r\n        onEnded={() => setIsPlaying(false)}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        onClick={togglePlay}\r\n        className={styles.playButton}\r\n        aria-label={isPlaying ? 'Pause audio' : 'Play audio'}\r\n      >\r\n        {isPlaying\r\n          ? <img src={pause} alt=\"Pause\" className={styles.play} />\r\n          : <img src={play} alt=\"Play\" />}\r\n      </button>\r\n      <div\r\n        className={styles.progressBar}\r\n        onClick={handleProgressClick}\r\n        role=\"progressbar\"\r\n        aria-valuemin={0}\r\n        aria-valuemax={duration}\r\n        aria-valuenow={currentTime}\r\n        tabIndex={0}\r\n      >\r\n        <div\r\n          className={styles.progress}\r\n          style={{ width: `${progress}%` }}\r\n        />\r\n      </div>\r\n      {/* Передаём в таймер полное время до старта, затем текущее во время */}\r\n      <AudioTimer\r\n        isPaused={!isPlaying}\r\n        time={isPlaying ? currentTime : duration}\r\n        withDot={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}