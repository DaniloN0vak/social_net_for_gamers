{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\chat-items\\\\main\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport MessageGroupList from '../../../message-items/message-list/components/MessageGroupList';\nimport styles from '../styles/Chat.module.css';\nimport MediaPreview from '../../../shared/file-preview-area/FilePreviewArea';\nimport { useModal } from '../../../../contexts/ModalContext';\nimport Header from '../../header/components/Header';\nimport MessageInputContainer from '../../footer/components/MessageInputContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const {\n    messages,\n    currentUser,\n    companion\n  } = props;\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  const emojiPickerRef = useRef(null);\n  const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\n  const gifPanelRef = useRef(null);\n  const [mediaList, setMediaList] = useState([]);\n  const [message, setMessage] = useState([]);\n  const fileInputRef = useRef(null);\n  const [gifList, setGifList] = useState([]);\n  const {\n    isModalOpen\n  } = useModal();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const handleAudioClick = async () => {\n    if (!isRecording) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const recorder = new MediaRecorder(stream);\n        const chunks = [];\n        recorder.ondataavailable = e => {\n          if (e.data.size > 0) chunks.push(e.data);\n        };\n        recorder.onstop = () => {\n          const audioBlob = new Blob(chunks, {\n            type: 'audio/webm'\n          });\n          const audioUrl = URL.createObjectURL(audioBlob);\n          const newAudio = {\n            id: `${Date.now()}_audio`,\n            type: 'audio',\n            src: audioUrl,\n            file: audioBlob\n          };\n          setMediaList(prev => [...prev, newAudio]);\n        };\n        recorder.start();\n        setMediaRecorder(recorder);\n        setAudioChunks(chunks);\n        setIsRecording(true);\n      } catch (err) {\n        console.error('Ошибка при доступе к микрофону', err);\n      }\n    } else {\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n      setIsRecording(false);\n    }\n  };\n  const handleRemoveMedia = media => {\n    if (media.type === 'selected_gif') {\n      setGifList(prev => prev.filter(gif => gif.id !== media.id));\n    } else {\n      setMediaList(prev => prev.filter(content => content.id !== media.id));\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (gifPanelRef.current && !gifPanelRef.current.contains(event.target)) {\n        setIsGifPanelOpen(false);\n      }\n    };\n    if (isGifPanelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isGifPanelOpen]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {\n        setIsEmojiPickerOpen(false);\n      }\n    };\n    if (isEmojiPickerOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEmojiPickerOpen]);\n  const handleEmojiClick = () => {\n    setIsEmojiPickerOpen(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      companion: {\n        firstName: 'allo',\n        lastName: 'allo',\n        event: 'hello'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageGroupList, {\n      messages: messages,\n      currentUserId: currentUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), (mediaList.length > 0 || gifList.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mediaPreview,\n      children: /*#__PURE__*/_jsxDEV(MediaPreview, {\n        mediaList: mediaList,\n        gifList: gifList,\n        onRemove: handleRemoveMedia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MessageInputContainer, {\n      setMessage: setMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"xafDxCdlgn0tWOABnLb6duGYVbg=\", false, function () {\n  return [useModal];\n});\n_c = Chat;\nexport default _c2 = /*#__PURE__*/React.memo(Chat);\nvar _c, _c2;\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MessageGroupList","styles","MediaPreview","useModal","Header","MessageInputContainer","jsxDEV","_jsxDEV","Chat","props","_s","messages","currentUser","companion","isEmojiPickerOpen","setIsEmojiPickerOpen","emojiPickerRef","isGifPanelOpen","setIsGifPanelOpen","gifPanelRef","mediaList","setMediaList","message","setMessage","fileInputRef","gifList","setGifList","isModalOpen","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","audioChunks","setAudioChunks","handleAudioClick","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","e","data","size","push","onstop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","newAudio","id","Date","now","src","file","prev","start","err","console","error","stop","handleRemoveMedia","media","filter","gif","content","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleEmojiClick","className","container","children","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","currentUserId","length","mediaPreview","onRemove","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/chat-items/main/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport MessageGroupList from '../../../message-items/message-list/components/MessageGroupList';\r\nimport styles from '../styles/Chat.module.css';\r\nimport MediaPreview from '../../../shared/file-preview-area/FilePreviewArea';\r\nimport { useModal } from '../../../../contexts/ModalContext';\r\nimport Header from '../../header/components/Header';\r\nimport MessageInputContainer from '../../footer/components/MessageInputContainer';\r\n\r\nfunction Chat(props) {\r\n    const { messages, currentUser, companion } = props;\r\n    const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\r\n    const emojiPickerRef = useRef(null);\r\n    const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\r\n    const gifPanelRef = useRef(null);\r\n    const [mediaList, setMediaList] = useState([]);\r\n    const [message, setMessage] = useState([]);\r\n    const fileInputRef = useRef(null);\r\n    const [gifList, setGifList] = useState([]);\r\n    const { isModalOpen } = useModal();\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [audioChunks, setAudioChunks] = useState([]);\r\n\r\n    const handleAudioClick = async () => {\r\n        if (!isRecording) {\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n                const recorder = new MediaRecorder(stream);\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    if (e.data.size > 0) chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = () => {\r\n                    const audioBlob = new Blob(chunks, { type: 'audio/webm' });\r\n                    const audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n                    const newAudio = {\r\n                        id: `${Date.now()}_audio`,\r\n                        type: 'audio',\r\n                        src: audioUrl,\r\n                        file: audioBlob\r\n                    };\r\n                    setMediaList(prev => [...prev, newAudio]);\r\n                };\r\n\r\n                recorder.start();\r\n                setMediaRecorder(recorder);\r\n                setAudioChunks(chunks);\r\n                setIsRecording(true);\r\n            } catch (err) {\r\n                console.error('Ошибка при доступе к микрофону', err);\r\n            }\r\n        } else {\r\n            mediaRecorder?.stop();\r\n            setIsRecording(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleRemoveMedia = (media) => {\r\n        if (media.type === 'selected_gif') {\r\n            setGifList((prev) => prev.filter((gif) => gif.id !== media.id));\r\n        }\r\n        else {\r\n            setMediaList((prev) => prev.filter((content) => content.id !== media.id));\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                gifPanelRef.current &&\r\n                !gifPanelRef.current.contains(event.target)\r\n            ) {\r\n                setIsGifPanelOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isGifPanelOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isGifPanelOpen]);\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (\r\n                emojiPickerRef.current &&\r\n                !emojiPickerRef.current.contains(event.target)\r\n            ) {\r\n                setIsEmojiPickerOpen(false);\r\n            }\r\n        };\r\n\r\n        if (isEmojiPickerOpen) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        } else {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [isEmojiPickerOpen]);\r\n\r\n    const handleEmojiClick = () => {\r\n        setIsEmojiPickerOpen((prev) => !prev);\r\n    };\r\n    return (\r\n        <div className={styles.container}>\r\n            <Header companion={{ firstName: 'allo', lastName: 'allo', event: 'hello' }} />\r\n            <MessageGroupList messages={messages} currentUserId={currentUser.id} />\r\n            {(mediaList.length > 0 || gifList.length > 0) && (\r\n                <div className={styles.mediaPreview}>\r\n                    <MediaPreview mediaList={mediaList} gifList={gifList} onRemove={handleRemoveMedia} />\r\n                </div>\r\n            )}\r\n            <MessageInputContainer setMessage={setMessage} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Chat);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}