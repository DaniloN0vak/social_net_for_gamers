{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\picker-containers\\\\gif-picker-container\\\\GifPickerContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback, memo } from \"react\";\nimport useOutsideClick from \"../../modal-chat-container/useOutsideClick\";\nimport ModalChatContainer from \"../../modal-chat-container/ModalChatContainer\";\nimport GifPicker from \"../../gif-picker/GifPicker\";\nimport gifImgSelected from '../../../../assets/images/message-form/gif-selected.png';\nimport gifImg from '../../../../assets/images/message-form/gif.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GifPickerContainer({\n  setGif\n}) {\n  _s();\n  const gifPanelRef = useRef(null);\n  const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\n  useOutsideClick(gifPanelRef, () => setIsGifPanelOpen(false), isGifPanelOpen);\n  const handleGifSelect = useCallback(gifUrl => {\n    var _crypto;\n    const newGif = {\n      id: (_crypto = crypto) !== null && _crypto !== void 0 && _crypto.randomUUID ? crypto.randomUUID() : `${Date.now()}_gif`,\n      type: 'selected_gif',\n      src: gifUrl\n    };\n    setGif(newGif);\n    setIsGifPanelOpen(false);\n  }, [setGif]);\n  const handleGifClick = useCallback(() => {\n    setIsGifPanelOpen(prev => !prev);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleGifClick,\n      \"aria-label\": isGifPanelOpen ? \"Приховати GIF\" : \"Відкрити GIF\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isGifPanelOpen ? gifImgSelected : gifImg,\n        alt: \"GIF picker toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), isGifPanelOpen && /*#__PURE__*/_jsxDEV(ModalChatContainer, {\n      elementRef: gifPanelRef,\n      children: /*#__PURE__*/_jsxDEV(GifPicker, {\n        onSelect: handleGifSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(GifPickerContainer, \"U6d9s/1BTL5GrnqBcRi8N16SsDA=\", false, function () {\n  return [useOutsideClick];\n});\n_c = GifPickerContainer;\nexport default _c2 = /*#__PURE__*/memo(GifPickerContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"GifPickerContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useRef","useState","useCallback","memo","useOutsideClick","ModalChatContainer","GifPicker","gifImgSelected","gifImg","jsxDEV","_jsxDEV","Fragment","_Fragment","GifPickerContainer","setGif","_s","gifPanelRef","isGifPanelOpen","setIsGifPanelOpen","handleGifSelect","gifUrl","_crypto","newGif","id","crypto","randomUUID","Date","now","type","src","handleGifClick","prev","children","onClick","alt","fileName","_jsxFileName","lineNumber","columnNumber","elementRef","onSelect","_c","_c2","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/picker-containers/gif-picker-container/GifPickerContainer.js"],"sourcesContent":["import React, { useRef, useState, useCallback, memo } from \"react\";\r\nimport useOutsideClick from \"../../modal-chat-container/useOutsideClick\";\r\nimport ModalChatContainer from \"../../modal-chat-container/ModalChatContainer\";\r\nimport GifPicker from \"../../gif-picker/GifPicker\";\r\nimport gifImgSelected from '../../../../assets/images/message-form/gif-selected.png';\r\nimport gifImg from '../../../../assets/images/message-form/gif.png';\r\n\r\nfunction GifPickerContainer({ setGif }) {\r\n    const gifPanelRef = useRef(null);\r\n    const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\r\n\r\n    useOutsideClick(gifPanelRef, () => setIsGifPanelOpen(false), isGifPanelOpen);\r\n\r\n    const handleGifSelect = useCallback((gifUrl) => {\r\n        const newGif = {\r\n            id: crypto?.randomUUID ? crypto.randomUUID() : `${Date.now()}_gif`,\r\n            type: 'selected_gif',\r\n            src: gifUrl\r\n        };\r\n        setGif(newGif);\r\n        setIsGifPanelOpen(false);\r\n    }, [setGif]);\r\n\r\n    const handleGifClick = useCallback(() => {\r\n        setIsGifPanelOpen(prev => !prev);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                onClick={handleGifClick}\r\n                aria-label={isGifPanelOpen ? \"Приховати GIF\" : \"Відкрити GIF\"}\r\n            >\r\n                <img\r\n                    src={isGifPanelOpen ? gifImgSelected : gifImg}\r\n                    alt=\"GIF picker toggle\"\r\n                />\r\n            </button>\r\n\r\n            {isGifPanelOpen && (\r\n                <ModalChatContainer elementRef={gifPanelRef}>\r\n                    <GifPicker onSelect={handleGifSelect} />\r\n                </ModalChatContainer>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(GifPickerContainer);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,IAAI,QAAQ,OAAO;AAClE,OAAOC,eAAe,MAAM,4CAA4C;AACxE,OAAOC,kBAAkB,MAAM,+CAA+C;AAC9E,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,cAAc,MAAM,yDAAyD;AACpF,OAAOC,MAAM,MAAM,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpE,SAASC,kBAAkBA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,WAAW,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE3DG,eAAe,CAACY,WAAW,EAAE,MAAME,iBAAiB,CAAC,KAAK,CAAC,EAAED,cAAc,CAAC;EAE5E,MAAME,eAAe,GAAGjB,WAAW,CAAEkB,MAAM,IAAK;IAAA,IAAAC,OAAA;IAC5C,MAAMC,MAAM,GAAG;MACXC,EAAE,EAAE,CAAAF,OAAA,GAAAG,MAAM,cAAAH,OAAA,eAANA,OAAA,CAAQI,UAAU,GAAGD,MAAM,CAACC,UAAU,CAAC,CAAC,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAM;MAClEC,IAAI,EAAE,cAAc;MACpBC,GAAG,EAAET;IACT,CAAC;IACDN,MAAM,CAACQ,MAAM,CAAC;IACdJ,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,MAAMgB,cAAc,GAAG5B,WAAW,CAAC,MAAM;IACrCgB,iBAAiB,CAACa,IAAI,IAAI,CAACA,IAAI,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACItB,OAAA;MACIkB,IAAI,EAAC,QAAQ;MACbK,OAAO,EAAEH,cAAe;MACxB,cAAYb,cAAc,GAAG,eAAe,GAAG,cAAe;MAAAe,QAAA,eAE9DtB,OAAA;QACImB,GAAG,EAAEZ,cAAc,GAAGV,cAAc,GAAGC,MAAO;QAC9C0B,GAAG,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAERrB,cAAc,iBACXP,OAAA,CAACL,kBAAkB;MAACkC,UAAU,EAAEvB,WAAY;MAAAgB,QAAA,eACxCtB,OAAA,CAACJ,SAAS;QAACkC,QAAQ,EAAErB;MAAgB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACvB;EAAA,eACH,CAAC;AAEX;AAACvB,EAAA,CAxCQF,kBAAkB;EAAA,QAIvBT,eAAe;AAAA;AAAAqC,EAAA,GAJV5B,kBAAkB;AA0C3B,eAAA6B,GAAA,gBAAevC,IAAI,CAACU,kBAAkB,CAAC;AAAC,IAAA4B,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}