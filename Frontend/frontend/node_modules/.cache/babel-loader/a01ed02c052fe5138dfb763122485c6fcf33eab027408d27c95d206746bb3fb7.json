{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\picker-containers\\\\gif-picker-container\\\\GifPickerContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport useOutsideClick from \"../../modal-chat-container/useOutsideClick\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GifPickerContainer({\n  setGif\n}) {\n  _s();\n  const gifPanelRef = useRef(null);\n  const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\n  useOutsideClick(gifPanelRef, () => setIsGifPanelOpen(false), isGifPanelOpen);\n  const handleGifSelect = gifUrl => {\n    const newGif = {\n      id: `${Date.now()}_gif`,\n      type: 'selected_gif',\n      src: gifUrl\n    };\n    setGif(newGif);\n    setIsGifPanelOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleGifClick,\n      children: isGifPanelOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gifImgSelected,\n        alt: \"gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gifImg,\n        alt: \"gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), isGifPanelOpen && /*#__PURE__*/_jsxDEV(ModalChatContainer, {\n      elementRef: gifPanelRef,\n      children: /*#__PURE__*/_jsxDEV(GifPicker, {\n        onSelect: handleGifSelect,\n        setIsGifPanelOpen: setIsGifPanelOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(GifPickerContainer, \"K2LcszompOwtV1sUWfHoVKNNECo=\", false, function () {\n  return [useOutsideClick];\n});\n_c = GifPickerContainer;\n;\nvar _c;\n$RefreshReg$(_c, \"GifPickerContainer\");","map":{"version":3,"names":["React","useRef","useState","useOutsideClick","jsxDEV","_jsxDEV","Fragment","_Fragment","GifPickerContainer","setGif","_s","gifPanelRef","isGifPanelOpen","setIsGifPanelOpen","handleGifSelect","gifUrl","newGif","id","Date","now","type","src","children","onClick","handleGifClick","gifImgSelected","alt","fileName","_jsxFileName","lineNumber","columnNumber","gifImg","ModalChatContainer","elementRef","GifPicker","onSelect","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/picker-containers/gif-picker-container/GifPickerContainer.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport useOutsideClick from \"../../modal-chat-container/useOutsideClick\";\r\n\r\n\r\nexport default function GifPickerContainer({ setGif }) {\r\n    const gifPanelRef = useRef(null);\r\n    const [isGifPanelOpen, setIsGifPanelOpen] = useState(false);\r\n    useOutsideClick(gifPanelRef, () => setIsGifPanelOpen(false), isGifPanelOpen);\r\n    const handleGifSelect = (gifUrl) => {\r\n        const newGif = {\r\n            id: (`${Date.now()}_gif`),\r\n            type: 'selected_gif',\r\n            src: gifUrl\r\n        };\r\n        setGif(newGif);\r\n        setIsGifPanelOpen(false);\r\n    };\r\n    return (\r\n        <>\r\n            <button type=\"button\" onClick={handleGifClick}>\r\n                {isGifPanelOpen ? (\r\n                    <img src={gifImgSelected} alt=\"gif\" />\r\n                ) : <img src={gifImg} alt=\"gif\" />}\r\n            </button>\r\n\r\n            {isGifPanelOpen && (\r\n                <ModalChatContainer elementRef={gifPanelRef}>\r\n                    <GifPicker onSelect={handleGifSelect} setIsGifPanelOpen={setIsGifPanelOpen} />\r\n                </ModalChatContainer>\r\n            )}\r\n        </>\r\n    )\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,eAAe,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGzE,eAAe,SAASC,kBAAkBA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAMC,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3DC,eAAe,CAACQ,WAAW,EAAE,MAAME,iBAAiB,CAAC,KAAK,CAAC,EAAED,cAAc,CAAC;EAC5E,MAAME,eAAe,GAAIC,MAAM,IAAK;IAChC,MAAMC,MAAM,GAAG;MACXC,EAAE,EAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAO;MACzBC,IAAI,EAAE,cAAc;MACpBC,GAAG,EAAEN;IACT,CAAC;IACDN,MAAM,CAACO,MAAM,CAAC;IACdH,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC;EACD,oBACIR,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAACG,OAAO,EAAEC,cAAe;MAAAF,QAAA,EACzCV,cAAc,gBACXP,OAAA;QAAKgB,GAAG,EAAEI,cAAe;QAACC,GAAG,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBACtCzB,OAAA;QAAKgB,GAAG,EAAEU,MAAO;QAACL,GAAG,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EAERlB,cAAc,iBACXP,OAAA,CAAC2B,kBAAkB;MAACC,UAAU,EAAEtB,WAAY;MAAAW,QAAA,eACxCjB,OAAA,CAAC6B,SAAS;QAACC,QAAQ,EAAErB,eAAgB;QAACD,iBAAiB,EAAEA;MAAkB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CACvB;EAAA,eACH,CAAC;AAEX;AAACpB,EAAA,CA5BuBF,kBAAkB;EAAA,QAGtCL,eAAe;AAAA;AAAAiC,EAAA,GAHK5B,kBAAkB;AA4BzC;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}