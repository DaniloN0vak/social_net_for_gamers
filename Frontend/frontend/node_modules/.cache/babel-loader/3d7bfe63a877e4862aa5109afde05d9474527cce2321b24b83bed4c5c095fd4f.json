{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\custom-audio-player\\\\AudioVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioVisualizer({\n  audioRef,\n  src\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const animationId = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const sourceRef = useRef(null);\n  useEffect(() => {\n    if (!audioRef.current) return;\n\n    // Закрываем предыдущий AudioContext, если был\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    if (sourceRef.current) {\n      try {\n        sourceRef.current.disconnect();\n      } catch {}\n      sourceRef.current = null;\n    }\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    audioContextRef.current = audioCtx;\n    const analyser = audioCtx.createAnalyser();\n    analyser.fftSize = 64;\n    analyserRef.current = analyser;\n    try {\n      sourceRef.current = audioCtx.createMediaElementSource(audioRef.current);\n      sourceRef.current.connect(analyser);\n      analyser.connect(audioCtx.destination);\n    } catch (e) {\n      console.error('Ошибка создания MediaElementSource (возможно, уже создан):', e);\n      return;\n    }\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    function draw() {\n      animationId.current = requestAnimationFrame(draw);\n      analyser.getByteFrequencyData(dataArray);\n      ctx.clearRect(0, 0, WIDTH, HEIGHT);\n      const barWidth = WIDTH / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const barHeight = dataArray[i] / 255 * HEIGHT;\n        ctx.fillStyle = '#4A90E2';\n        ctx.fillRect(x, HEIGHT - barHeight, barWidth * 0.8, barHeight);\n        x += barWidth;\n      }\n    }\n    draw();\n    return () => {\n      cancelAnimationFrame(animationId.current);\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n        audioContextRef.current = null;\n      }\n      if (sourceRef.current) {\n        try {\n          sourceRef.current.disconnect();\n        } catch {}\n        sourceRef.current = null;\n      }\n    };\n  }, [audioRef, src]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 300,\n    height: 50,\n    style: {\n      width: '100%',\n      height: '50px',\n      backgroundColor: '#222'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioVisualizer, \"2BFrLFN0pBkTkGmop8myGDAa3Xo=\");\n_c = AudioVisualizer;\nexport default AudioVisualizer;\nvar _c;\n$RefreshReg$(_c, \"AudioVisualizer\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","AudioVisualizer","audioRef","src","_s","canvasRef","animationId","audioContextRef","analyserRef","sourceRef","current","close","disconnect","audioCtx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","fftSize","createMediaElementSource","connect","destination","e","console","error","bufferLength","frequencyBinCount","dataArray","Uint8Array","canvas","ctx","getContext","WIDTH","width","HEIGHT","height","draw","requestAnimationFrame","getByteFrequencyData","clearRect","barWidth","x","i","barHeight","fillStyle","fillRect","cancelAnimationFrame","ref","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/custom-audio-player/AudioVisualizer.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nfunction AudioVisualizer({ audioRef, src }) {\r\n  const canvasRef = useRef(null);\r\n  const animationId = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const sourceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!audioRef.current) return;\r\n\r\n    // Закрываем предыдущий AudioContext, если был\r\n    if (audioContextRef.current) {\r\n      audioContextRef.current.close();\r\n      audioContextRef.current = null;\r\n    }\r\n    if (sourceRef.current) {\r\n      try {\r\n        sourceRef.current.disconnect();\r\n      } catch {}\r\n      sourceRef.current = null;\r\n    }\r\n\r\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n    audioContextRef.current = audioCtx;\r\n\r\n    const analyser = audioCtx.createAnalyser();\r\n    analyser.fftSize = 64;\r\n    analyserRef.current = analyser;\r\n\r\n    try {\r\n      sourceRef.current = audioCtx.createMediaElementSource(audioRef.current);\r\n      sourceRef.current.connect(analyser);\r\n      analyser.connect(audioCtx.destination);\r\n    } catch (e) {\r\n      console.error('Ошибка создания MediaElementSource (возможно, уже создан):', e);\r\n      return;\r\n    }\r\n\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const WIDTH = canvas.width;\r\n    const HEIGHT = canvas.height;\r\n\r\n    function draw() {\r\n      animationId.current = requestAnimationFrame(draw);\r\n\r\n      analyser.getByteFrequencyData(dataArray);\r\n\r\n      ctx.clearRect(0, 0, WIDTH, HEIGHT);\r\n\r\n      const barWidth = WIDTH / bufferLength;\r\n      let x = 0;\r\n\r\n      for (let i = 0; i < bufferLength; i++) {\r\n        const barHeight = (dataArray[i] / 255) * HEIGHT;\r\n\r\n        ctx.fillStyle = '#4A90E2';\r\n        ctx.fillRect(x, HEIGHT - barHeight, barWidth * 0.8, barHeight);\r\n\r\n        x += barWidth;\r\n      }\r\n    }\r\n\r\n    draw();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationId.current);\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n        audioContextRef.current = null;\r\n      }\r\n      if (sourceRef.current) {\r\n        try {\r\n          sourceRef.current.disconnect();\r\n        } catch {}\r\n        sourceRef.current = null;\r\n      }\r\n    };\r\n  }, [audioRef, src]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={300}\r\n      height={50}\r\n      style={{ width: '100%', height: '50px', backgroundColor: '#222' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AudioVisualizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}