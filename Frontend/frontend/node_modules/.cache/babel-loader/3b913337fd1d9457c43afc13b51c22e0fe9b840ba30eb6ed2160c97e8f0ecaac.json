{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\message-input\\\\MessageInput.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageInput({\n  setMessage\n}) {\n  const handleInput = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = textarea.scrollHeight + 'px';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    name: \"messageInput\",\n    className: styles.messageForm,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      name: \"message\",\n      className: styles.messageInput,\n      autoComplete: \"off\",\n      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448\\u0435 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\",\n      onInput: handleInput,\n      rows: 1,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageImages,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleEmojiClick,\n        children: isEmojiPickerOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: smileySelected,\n          alt: \"emoji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: smiley,\n          alt: \"emoji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), isEmojiPickerOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.emojiWrapper,\n        ref: emojiPickerRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.emojiContainer,\n          children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            onSelect: handleEmojiSelect,\n            mainEmojis: mainEmojis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGifClick,\n        children: isGifPanelOpen ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gifImgSelected,\n          alt: \"gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gifImg,\n          alt: \"gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), isGifPanelOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.emojiWrapper,\n        ref: gifPanelRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.emojiContainer,\n          children: /*#__PURE__*/_jsxDEV(GifPicker, {\n            onSelect: handleGifSelect,\n            setIsGifPanelOpen: setIsGifPanelOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          var _fileInputRef$current;\n          return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cross,\n          alt: \"attach media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*,video/*\",\n        multiple: true,\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAudioClick,\n        children: isRecording ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: microfonSelected,\n          alt: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: microfon,\n          alt: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow,\n          alt: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n}\n_c = MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageInput","setMessage","handleInput","textarea","textareaRef","current","style","height","scrollHeight","name","className","styles","messageForm","children","ref","messageInput","autoComplete","placeholder","onInput","rows","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","messageImages","type","onClick","handleEmojiClick","isEmojiPickerOpen","src","smileySelected","alt","smiley","emojiWrapper","emojiPickerRef","emojiContainer","EmojiPicker","onSelect","handleEmojiSelect","mainEmojis","handleGifClick","isGifPanelOpen","gifImgSelected","gifImg","gifPanelRef","GifPicker","handleGifSelect","setIsGifPanelOpen","_fileInputRef$current","fileInputRef","click","cross","accept","multiple","display","handleImageUpload","handleAudioClick","isRecording","microfonSelected","microfon","arrow","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/message-input/MessageInput.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction MessageInput({ setMessage, }) {\r\n\r\n    const handleInput = () => {\r\n        const textarea = textareaRef.current;\r\n        if (textarea) {\r\n            textarea.style.height = 'auto';\r\n            textarea.style.height = textarea.scrollHeight + 'px';\r\n        }\r\n    };\r\n\r\n    return (<form name=\"messageInput\" className={styles.messageForm}>\r\n        <textarea\r\n            ref={textareaRef}\r\n            name=\"message\"\r\n            className={styles.messageInput}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Напишіть ваше повідомлення\"\r\n            onInput={handleInput}\r\n            rows={1}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <div className={styles.messageImages}>\r\n            <button type=\"button\" onClick={handleEmojiClick}>\r\n                {isEmojiPickerOpen ?\r\n                    (<img src={smileySelected} alt=\"emoji\" />) : (<img src={smiley} alt=\"emoji\" />)\r\n                }\r\n            </button>\r\n            {isEmojiPickerOpen && (\r\n                <div className={styles.emojiWrapper} ref={emojiPickerRef}>\r\n                    <div className={styles.emojiContainer}>\r\n                        <EmojiPicker onSelect={handleEmojiSelect} mainEmojis={mainEmojis} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <button type=\"button\" onClick={handleGifClick}>\r\n                {isGifPanelOpen ? (\r\n                    <img src={gifImgSelected} alt=\"gif\" />\r\n                ) : <img src={gifImg} alt=\"gif\" />}\r\n            </button>\r\n\r\n            {isGifPanelOpen && (\r\n                <div className={styles.emojiWrapper} ref={gifPanelRef}>\r\n                    <div className={styles.emojiContainer}>\r\n                        <GifPicker onSelect={handleGifSelect} setIsGifPanelOpen={setIsGifPanelOpen} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <button type=\"button\" onClick={() => fileInputRef.current?.click()}>\r\n                <img src={cross} alt=\"attach media\" />\r\n            </button>\r\n            <input\r\n                type=\"file\"\r\n                accept=\"image/*,video/*\"\r\n                multiple\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n                onChange={handleImageUpload}\r\n            />\r\n            <button type=\"button\" onClick={handleAudioClick}>\r\n                {isRecording ? (<img src={microfonSelected} alt=\"audio\" />) : (<img src={microfon} alt=\"audio\" />)}\r\n            </button>\r\n\r\n            <button type=\"submit\"><img src={arrow} alt=\"send\" /></button>\r\n        </div>\r\n    </form>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}