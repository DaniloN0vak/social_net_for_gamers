{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\blocks\\\\shared\\\\audio-recorder\\\\AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styles from './AudioRecorder.module.css';\nimport AudioControls from './AudioControls';\nimport AudioPreview from './AudioPreview';\nimport AudioTimer from './AudioTimer';\nimport microfon from '../../../assets/images/message-form/microfon.png';\nimport microfonSelected from '../../../assets/images/message-form/microfon-selected.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AudioRecorder({\n  audioRecordingControl\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [audioSrc, setAudioSrc] = useState(null);\n  const [previewReady, setPreviewReady] = useState(false);\n  const chunks = useRef([]);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    if (isRecording && !isPaused) {\n      intervalRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isRecording, isPaused]);\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60).toString().padStart(2, '0');\n    const seconds = (time % 60).toString().padStart(2, '0');\n    return `${minutes}:${seconds}`;\n  };\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    setMediaRecorder(recorder);\n    recorder.start();\n    setIsRecording(true);\n    recorder.ondataavailable = e => chunks.current.push(e.data);\n    recorder.onstop = () => {\n      const blob = new Blob(chunks.current, {\n        type: 'audio/webm'\n      });\n      const url = URL.createObjectURL(blob);\n      setAudioSrc(url);\n      setPreviewReady(true);\n    };\n  };\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n      setIsRecording(false);\n      setIsPaused(false);\n    }\n  };\n  const pauseRecording = () => {\n    mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.pause();\n    setIsPaused(true);\n  };\n  const resumeRecording = () => {\n    mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.resume();\n    setIsPaused(false);\n  };\n  const handleSend = async () => {\n    const response = await fetch(audioSrc);\n    const blob = await response.blob();\n    const file = new File([blob], 'audio-message.webm', {\n      type: blob.type\n    });\n    audioRecordingControl.setAudio({\n      type: 'audio',\n      name: file.name,\n      id: Date.now(),\n      file,\n      size: file.size,\n      src: audioSrc\n    });\n    setPreviewReady(false);\n    setAudioSrc(null);\n  };\n  const handleCancel = () => {\n    setPreviewReady(false);\n    setAudioSrc(null);\n    chunks.current = [];\n    setRecordingTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.startButton,\n      onClick: startRecording,\n      children: isRecording ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: microfonSelected,\n        alt: \"record audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: microfon,\n        alt: \"record audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 83\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal,\n      children: [isRecording && !previewReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTimer, {\n          isPaused: isPaused,\n          time: recordingTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(AudioControls, {\n          isPaused: isPaused,\n          pauseRecording: pauseRecording,\n          resumeRecording: resumeRecording,\n          stopRecording: stopRecording\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), previewReady && /*#__PURE__*/_jsxDEV(AudioPreview, {\n        audioSrc: audioSrc,\n        onCancel: handleCancel,\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioRecorder, \"dJDL2QTR3RWQmF+Vw63OzgavF6Y=\");\n_c = AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styles","AudioControls","AudioPreview","AudioTimer","microfon","microfonSelected","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioRecorder","audioRecordingControl","_s","isRecording","setIsRecording","isPaused","setIsPaused","mediaRecorder","setMediaRecorder","recordingTime","setRecordingTime","audioSrc","setAudioSrc","previewReady","setPreviewReady","chunks","intervalRef","current","setInterval","prev","clearInterval","formatTime","time","minutes","Math","floor","toString","padStart","seconds","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","start","ondataavailable","e","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","stopRecording","stop","pauseRecording","pause","resumeRecording","resume","handleSend","response","fetch","file","File","setAudio","name","id","Date","now","size","src","handleCancel","children","className","startButton","onClick","alt","fileName","_jsxFileName","lineNumber","columnNumber","modal","onCancel","onSend","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/blocks/shared/audio-recorder/AudioRecorder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport styles from './AudioRecorder.module.css';\r\nimport AudioControls from './AudioControls';\r\nimport AudioPreview from './AudioPreview';\r\nimport AudioTimer from './AudioTimer';\r\nimport microfon from '../../../assets/images/message-form/microfon.png';\r\nimport microfonSelected from '../../../assets/images/message-form/microfon-selected.png';\r\n\r\nexport default function AudioRecorder({ audioRecordingControl }) {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [recordingTime, setRecordingTime] = useState(0);\r\n    const [audioSrc, setAudioSrc] = useState(null);\r\n    const [previewReady, setPreviewReady] = useState(false);\r\n    const chunks = useRef([]);\r\n    const intervalRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (isRecording && !isPaused) {\r\n            intervalRef.current = setInterval(() => {\r\n                setRecordingTime(prev => prev + 1);\r\n            }, 1000);\r\n        } else {\r\n            clearInterval(intervalRef.current);\r\n        }\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [isRecording, isPaused]);\r\n\r\n    const formatTime = (time) => {\r\n        const minutes = Math.floor(time / 60).toString().padStart(2, '0');\r\n        const seconds = (time % 60).toString().padStart(2, '0');\r\n        return `${minutes}:${seconds}`;\r\n    };\r\n\r\n    const startRecording = async () => {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const recorder = new MediaRecorder(stream);\r\n        setMediaRecorder(recorder);\r\n        recorder.start();\r\n        setIsRecording(true);\r\n\r\n        recorder.ondataavailable = e => chunks.current.push(e.data);\r\n        recorder.onstop = () => {\r\n            const blob = new Blob(chunks.current, { type: 'audio/webm' });\r\n            const url = URL.createObjectURL(blob);\r\n            setAudioSrc(url);\r\n            setPreviewReady(true);\r\n        };\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.stop();\r\n            setIsRecording(false);\r\n            setIsPaused(false);\r\n        }\r\n    };\r\n\r\n    const pauseRecording = () => {\r\n        mediaRecorder?.pause();\r\n        setIsPaused(true);\r\n    };\r\n\r\n    const resumeRecording = () => {\r\n        mediaRecorder?.resume();\r\n        setIsPaused(false);\r\n    };\r\n\r\n    const handleSend = async () => {\r\n        const response = await fetch(audioSrc);\r\n        const blob = await response.blob();\r\n        const file = new File([blob], 'audio-message.webm', { type: blob.type });\r\n        audioRecordingControl.setAudio({\r\n            type: 'audio',\r\n            name: file.name,\r\n            id: Date.now(),\r\n            file,\r\n            size: file.size,\r\n            src: audioSrc\r\n        });\r\n        setPreviewReady(false);\r\n        setAudioSrc(null);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setPreviewReady(false);\r\n        setAudioSrc(null);\r\n        chunks.current = [];\r\n        setRecordingTime(0);\r\n    };\r\n\r\n    return (\r\n        <><button type='button' className={styles.startButton} onClick={startRecording}>\r\n            {isRecording ? (<img src={microfonSelected} alt='record audio' />) : (<img src={microfon} alt='record audio' />)}\r\n        </button>\r\n            <div className={styles.modal}>\r\n\r\n                {isRecording && !previewReady && (\r\n                    <>\r\n                        <AudioTimer isPaused={isPaused} time={recordingTime} />\r\n                        <AudioControls\r\n                            isPaused={isPaused}\r\n                            pauseRecording={pauseRecording}\r\n                            resumeRecording={resumeRecording}\r\n                            stopRecording={stopRecording}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {previewReady && (\r\n                    <AudioPreview\r\n                        audioSrc={audioSrc}\r\n                        onCancel={handleCancel}\r\n                        onSend={handleSend}\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}