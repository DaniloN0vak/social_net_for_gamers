{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\CustomAudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport styles from '../styles/CustomAudioPlayer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomAudioPlayer({\n  src\n}) {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n      setIsPlaying(true);\n    } else {\n      audio.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    setProgress(audio.currentTime / audio.duration * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: src,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: () => setIsPlaying(false),\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      className: styles.playButton,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomAudioPlayer, \"qomkiVYXax3o/CYi7A8euyeqh34=\");\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","styles","jsxDEV","_jsxDEV","CustomAudioPlayer","src","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","togglePlay","audio","current","paused","play","pause","handleTimeUpdate","currentTime","duration","className","audioPlayer","children","ref","onTimeUpdate","onEnded","preload","fileName","_jsxFileName","lineNumber","columnNumber","onClick","playButton","progressBar","style","width","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/CustomAudioPlayer.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styles from '../styles/CustomAudioPlayer.module.css';\r\n\r\nfunction CustomAudioPlayer({ src }) {\r\n    const audioRef = useRef(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const togglePlay = () => {\r\n        const audio = audioRef.current;\r\n        if (audio.paused) {\r\n            audio.play();\r\n            setIsPlaying(true);\r\n        } else {\r\n            audio.pause();\r\n            setIsPlaying(false);\r\n        }\r\n    };\r\n\r\n    const handleTimeUpdate = () => {\r\n        const audio = audioRef.current;\r\n        setProgress((audio.currentTime / audio.duration) * 100);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.audioPlayer}>\r\n            <audio\r\n                ref={audioRef}\r\n                src={src}\r\n                onTimeUpdate={handleTimeUpdate}\r\n                onEnded={() => setIsPlaying(false)}\r\n                preload=\"metadata\"\r\n            />\r\n            <button onClick={togglePlay} className={styles.playButton}>\r\n                {isPlaying ? 'Pause' : 'Play'}\r\n            </button>\r\n            <div className={styles.progressBar}>\r\n                <div\r\n                    className={styles.progress}\r\n                    style={{ width: `${progress}%` }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomAudioPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,iBAAiBA,CAAC;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,KAAK,GAAGN,QAAQ,CAACO,OAAO;IAC9B,IAAID,KAAK,CAACE,MAAM,EAAE;MACdF,KAAK,CAACG,IAAI,CAAC,CAAC;MACZP,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACHI,KAAK,CAACI,KAAK,CAAC,CAAC;MACbR,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAML,KAAK,GAAGN,QAAQ,CAACO,OAAO;IAC9BH,WAAW,CAAEE,KAAK,CAACM,WAAW,GAAGN,KAAK,CAACO,QAAQ,GAAI,GAAG,CAAC;EAC3D,CAAC;EAED,oBACIjB,OAAA;IAAKkB,SAAS,EAAEpB,MAAM,CAACqB,WAAY;IAAAC,QAAA,gBAC/BpB,OAAA;MACIqB,GAAG,EAAEjB,QAAS;MACdF,GAAG,EAAEA,GAAI;MACToB,YAAY,EAAEP,gBAAiB;MAC/BQ,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAAC,KAAK,CAAE;MACnCkB,OAAO,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACF5B,OAAA;MAAQ6B,OAAO,EAAEpB,UAAW;MAACS,SAAS,EAAEpB,MAAM,CAACgC,UAAW;MAAAV,QAAA,EACrDf,SAAS,GAAG,OAAO,GAAG;IAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACT5B,OAAA;MAAKkB,SAAS,EAAEpB,MAAM,CAACiC,WAAY;MAAAX,QAAA,eAC/BpB,OAAA;QACIkB,SAAS,EAAEpB,MAAM,CAACS,QAAS;QAC3ByB,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAG1B,QAAQ;QAAI;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzB,EAAA,CAzCQF,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AA2C1B,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}