{"ast":null,"code":"var _jsxFileName = \"D:\\\\Diplomarbeit\\\\Project\\\\Frontend\\\\frontend\\\\src\\\\components\\\\GifPicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styles from '../styles/GifPicker.module.css';\nimport cross from '../assets/images/gif-picker/cross.png';\nimport magnifier from '../assets/images/gif-picker/magnifier.png';\nimport watch from '../assets/images/gif-picker/watch.png';\nimport savedIcon from '../assets/images/gif-picker/selected.png';\nimport savedIconSelected from '../assets/images/gif-picker/selected-selected.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TENOR_API_KEY = 'AIzaSyBHdF6XBz7mujjoH1Sj25AiE7sdvZrJonY';\nconst TENOR_ENDPOINT = 'https://tenor.googleapis.com/v2/search';\nconst LOCAL_STORAGE_KEY_RECENT = 'recent_gifs';\nconst LOCAL_STORAGE_KEY_SAVED = 'saved_gifs';\nfunction GifPicker({\n  onSelect,\n  setIsGifPanelOpen\n}) {\n  _s();\n  const [query, setQuery] = useState('');\n  const [gifs, setGifs] = useState([]);\n  const [tab, setTab] = useState('search');\n  const [recentGifs, setRecentGifs] = useState([]);\n  const [savedGifs, setSavedGifs] = useState([]);\n  useEffect(() => {\n    setRecentGifs(JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_RECENT)) || []);\n    setSavedGifs(JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_SAVED)) || []);\n  }, []);\n  const handleCloseGifPanel = () => {\n    setIsGifPanelOpen(false);\n  };\n  const handleGifClick = url => {\n    onSelect(url);\n    saveToRecent(url);\n  };\n  const saveToRecent = url => {\n    const updated = [url, ...recentGifs.filter(item => item !== url)].slice(0, 20);\n    setRecentGifs(updated);\n    localStorage.setItem(LOCAL_STORAGE_KEY_RECENT, JSON.stringify(updated));\n  };\n  const toggleSaved = url => {\n    let updated;\n    if (savedGifs.includes(url)) {\n      updated = savedGifs.filter(item => item !== url);\n    } else {\n      updated = [url, ...savedGifs];\n    }\n    setSavedGifs(updated);\n    localStorage.setItem(LOCAL_STORAGE_KEY_SAVED, JSON.stringify(updated));\n  };\n  const fetchGifs = useCallback(async () => {\n    try {\n      const searchQuery = query.trim() || 'smile';\n      const url = `${TENOR_ENDPOINT}?q=${encodeURIComponent(searchQuery)}&key=${TENOR_API_KEY}&limit=48`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setGifs(data.results || []);\n      setTab('search');\n    } catch (error) {\n      console.error('Ошибка при загрузке GIF:', error);\n    }\n  }, [query]);\n  const renderGifButton = (url, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.gifWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGifClick(url),\n      className: styles.gifButton,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: \"gif\",\n        className: styles.gifImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), savedGifs.includes(url) ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: savedIconSelected,\n      alt: \"save\",\n      className: styles.saveIcon,\n      onClick: () => toggleSaved(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: savedIcon,\n      alt: \"save\",\n      className: styles.saveIcon,\n      onClick: () => toggleSaved(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerImages,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: savedIcon,\n          alt: \"saved\",\n          onClick: () => setTab('saved'),\n          className: tab === 'saved' ? styles.activeTab : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: watch,\n          alt: \"recent\",\n          onClick: () => setTab('recent'),\n          className: tab === 'recent' ? styles.activeTab : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && query.trim() && fetchGifs(),\n          className: styles.searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputImages,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: magnifier,\n            alt: \"search\",\n            className: styles.clickable,\n            onClick: () => query.trim() && fetchGifs()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cross,\n            alt: \"close\",\n            onClick: handleCloseGifPanel,\n            className: styles.clickable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gifGrid,\n      children: [tab === 'search' && gifs.map(gif => renderGifButton(gif.media_formats.tinygif.url, gif.id)), tab === 'recent' && recentGifs.map((url, idx) => renderGifButton(url, `recent-${idx}`)), tab === 'saved' && savedGifs.map((url, idx) => renderGifButton(url, `saved-${idx}`))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(GifPicker, \"o1kJOCDgWCzanP8CsG8SiYSW8gE=\");\n_c = GifPicker;\nexport default GifPicker;\nvar _c;\n$RefreshReg$(_c, \"GifPicker\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styles","cross","magnifier","watch","savedIcon","savedIconSelected","jsxDEV","_jsxDEV","TENOR_API_KEY","TENOR_ENDPOINT","LOCAL_STORAGE_KEY_RECENT","LOCAL_STORAGE_KEY_SAVED","GifPicker","onSelect","setIsGifPanelOpen","_s","query","setQuery","gifs","setGifs","tab","setTab","recentGifs","setRecentGifs","savedGifs","setSavedGifs","JSON","parse","localStorage","getItem","handleCloseGifPanel","handleGifClick","url","saveToRecent","updated","filter","item","slice","setItem","stringify","toggleSaved","includes","fetchGifs","searchQuery","trim","encodeURIComponent","response","fetch","data","json","results","error","console","renderGifButton","key","className","gifWrapper","children","onClick","gifButton","src","alt","gifImage","fileName","_jsxFileName","lineNumber","columnNumber","saveIcon","container","header","headerImages","activeTab","inputContainer","type","placeholder","value","onChange","e","target","onKeyDown","searchInput","inputImages","clickable","gifGrid","map","gif","media_formats","tinygif","id","idx","_c","$RefreshReg$"],"sources":["D:/Diplomarbeit/Project/Frontend/frontend/src/components/GifPicker.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport styles from '../styles/GifPicker.module.css';\r\nimport cross from '../assets/images/gif-picker/cross.png';\r\nimport magnifier from '../assets/images/gif-picker/magnifier.png';\r\nimport watch from '../assets/images/gif-picker/watch.png';\r\nimport savedIcon from '../assets/images/gif-picker/selected.png';\r\nimport savedIconSelected from '../assets/images/gif-picker/selected-selected.svg';\r\n\r\nconst TENOR_API_KEY = 'AIzaSyBHdF6XBz7mujjoH1Sj25AiE7sdvZrJonY';\r\nconst TENOR_ENDPOINT = 'https://tenor.googleapis.com/v2/search';\r\nconst LOCAL_STORAGE_KEY_RECENT = 'recent_gifs';\r\nconst LOCAL_STORAGE_KEY_SAVED = 'saved_gifs';\r\n\r\nfunction GifPicker({ onSelect, setIsGifPanelOpen }) {\r\n    const [query, setQuery] = useState('');\r\n    const [gifs, setGifs] = useState([]);\r\n    const [tab, setTab] = useState('search');\r\n    const [recentGifs, setRecentGifs] = useState([]);\r\n    const [savedGifs, setSavedGifs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setRecentGifs(JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_RECENT)) || []);\r\n        setSavedGifs(JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_SAVED)) || []);\r\n    }, []);\r\n\r\n    const handleCloseGifPanel = () => {\r\n        setIsGifPanelOpen(false);\r\n    };\r\n\r\n    const handleGifClick = (url) => {\r\n        onSelect(url);\r\n        saveToRecent(url);\r\n    };\r\n\r\n    const saveToRecent = (url) => {\r\n        const updated = [url, ...recentGifs.filter(item => item !== url)].slice(0, 20);\r\n        setRecentGifs(updated);\r\n        localStorage.setItem(LOCAL_STORAGE_KEY_RECENT, JSON.stringify(updated));\r\n    };\r\n\r\n    const toggleSaved = (url) => {\r\n        let updated;\r\n        if (savedGifs.includes(url)) {\r\n            updated = savedGifs.filter(item => item !== url);\r\n        } else {\r\n            updated = [url, ...savedGifs];\r\n        }\r\n        setSavedGifs(updated);\r\n        localStorage.setItem(LOCAL_STORAGE_KEY_SAVED, JSON.stringify(updated));\r\n    };\r\n\r\n    const fetchGifs = useCallback(async () => {\r\n        try {\r\n            const searchQuery = query.trim() || 'smile';\r\n            const url = `${TENOR_ENDPOINT}?q=${encodeURIComponent(searchQuery)}&key=${TENOR_API_KEY}&limit=48`;\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setGifs(data.results || []);\r\n            setTab('search');\r\n        } catch (error) {\r\n            console.error('Ошибка при загрузке GIF:', error);\r\n        }\r\n    }, [query]);\r\n\r\n    const renderGifButton = (url, key) => (\r\n        <div key={key} className={styles.gifWrapper}>\r\n            <button onClick={() => handleGifClick(url)} className={styles.gifButton}>\r\n                <img src={url} alt=\"gif\" className={styles.gifImage} />\r\n            </button>\r\n\r\n            {savedGifs.includes(url) ? (<img\r\n                src={savedIconSelected}\r\n                alt=\"save\"\r\n                className={styles.saveIcon}\r\n                onClick={() => toggleSaved(url)}\r\n            />) : (<img\r\n                src={savedIcon}\r\n                alt=\"save\"\r\n                className={styles.saveIcon}\r\n                onClick={() => toggleSaved(url)}\r\n            />)}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                <div className={styles.headerImages}>\r\n                    <img\r\n                        src={savedIcon}\r\n                        alt='saved'\r\n                        onClick={() => setTab('saved')}\r\n                        className={tab === 'saved' ? styles.activeTab : ''}\r\n                    />\r\n                    <img\r\n                        src={watch}\r\n                        alt='recent'\r\n                        onClick={() => setTab('recent')}\r\n                        className={tab === 'recent' ? styles.activeTab : ''}\r\n                    />\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Пошук\"\r\n                        value={query}\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        onKeyDown={(e) => e.key === 'Enter' && query.trim() && fetchGifs()}\r\n                        className={styles.searchInput}\r\n                    />\r\n                    <div className={styles.inputImages}>\r\n                        <img\r\n                            src={magnifier}\r\n                            alt=\"search\"\r\n                            className={styles.clickable}\r\n                            onClick={() => query.trim() && fetchGifs()}\r\n                        />\r\n                        <img\r\n                            src={cross}\r\n                            alt=\"close\"\r\n                            onClick={handleCloseGifPanel}\r\n                            className={styles.clickable}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.gifGrid}>\r\n                {tab === 'search' && gifs.map(gif =>\r\n                    renderGifButton(gif.media_formats.tinygif.url, gif.id)\r\n                )}\r\n                {tab === 'recent' && recentGifs.map((url, idx) =>\r\n                    renderGifButton(url, `recent-${idx}`)\r\n                )}\r\n                {tab === 'saved' && savedGifs.map((url, idx) =>\r\n                    renderGifButton(url, `saved-${idx}`)\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}