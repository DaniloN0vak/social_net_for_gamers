{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport * as api from '../../api/chatApi';\nexport const fetchChats = createAsyncThunk('chat/fetchChats', async () => {\n  const response = await api.getChats();\n  return response.data;\n});\nexport const fetchMessages = createAsyncThunk('chat/fetchMessages', async chatId => {\n  const response = await api.getMessages(chatId);\n  return {\n    chatId,\n    messages: response.data\n  };\n});\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState: {\n    chats: [],\n    messages: {},\n    activeChatId: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    setActiveChat: (state, action) => {\n      state.activeChatId = action.payload;\n    },\n    addMessage: (state, action) => {\n      const {\n        chatId,\n        message\n      } = action.payload;\n      if (!state.messages[chatId]) {\n        state.messages[chatId] = [];\n      }\n      state.messages[chatId].push(message);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchChats.fulfilled, (state, action) => {\n      state.chats = action.payload;\n    }).addCase(fetchMessages.fulfilled, (state, action) => {\n      state.messages[action.payload.chatId] = action.payload.messages;\n    });\n  }\n});\nexport const {\n  setActiveChat,\n  addMessage\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchChats","response","getChats","data","fetchMessages","chatId","getMessages","messages","chatSlice","name","initialState","chats","activeChatId","status","error","reducers","setActiveChat","state","action","payload","addMessage","message","push","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["D:/Diplomarbeit/Frontend/frontend/src/features/chat/chatSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as api from '../../api/chatApi';\r\n\r\nexport const fetchChats = createAsyncThunk('chat/fetchChats', async () => {\r\n  const response = await api.getChats();\r\n  return response.data;\r\n});\r\n\r\nexport const fetchMessages = createAsyncThunk('chat/fetchMessages', async (chatId) => {\r\n  const response = await api.getMessages(chatId);\r\n  return { chatId, messages: response.data };\r\n});\r\n\r\nconst chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState: {\r\n    chats: [],\r\n    messages: {},\r\n    activeChatId: null,\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    setActiveChat: (state, action) => {\r\n      state.activeChatId = action.payload;\r\n    },\r\n    addMessage: (state, action) => {\r\n      const { chatId, message } = action.payload;\r\n      if (!state.messages[chatId]) {\r\n        state.messages[chatId] = [];\r\n      }\r\n      state.messages[chatId].push(message);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchChats.fulfilled, (state, action) => {\r\n        state.chats = action.payload;\r\n      })\r\n      .addCase(fetchMessages.fulfilled, (state, action) => {\r\n        state.messages[action.payload.chatId] = action.payload.messages;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setActiveChat, addMessage } = chatSlice.actions;\r\nexport default chatSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAO,KAAKC,GAAG,MAAM,mBAAmB;AAExC,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,iBAAiB,EAAE,YAAY;EACxE,MAAMG,QAAQ,GAAG,MAAMF,GAAG,CAACG,QAAQ,CAAC,CAAC;EACrC,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CAAC,oBAAoB,EAAE,MAAOO,MAAM,IAAK;EACpF,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACO,WAAW,CAACD,MAAM,CAAC;EAC9C,OAAO;IAAEA,MAAM;IAAEE,QAAQ,EAAEN,QAAQ,CAACE;EAAK,CAAC;AAC5C,CAAC,CAAC;AAEF,MAAMK,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTJ,QAAQ,EAAE,CAAC,CAAC;IACZK,YAAY,EAAE,IAAI;IAClBC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACL,YAAY,GAAGM,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEb,MAAM;QAAEgB;MAAQ,CAAC,GAAGH,MAAM,CAACC,OAAO;MAC1C,IAAI,CAACF,KAAK,CAACV,QAAQ,CAACF,MAAM,CAAC,EAAE;QAC3BY,KAAK,CAACV,QAAQ,CAACF,MAAM,CAAC,GAAG,EAAE;MAC7B;MACAY,KAAK,CAACV,QAAQ,CAACF,MAAM,CAAC,CAACiB,IAAI,CAACD,OAAO,CAAC;IACtC;EACF,CAAC;EACDE,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACzB,UAAU,CAAC0B,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDM,OAAO,CAACrB,aAAa,CAACsB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACV,QAAQ,CAACW,MAAM,CAACC,OAAO,CAACd,MAAM,CAAC,GAAGa,MAAM,CAACC,OAAO,CAACZ,QAAQ;IACjE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAES,aAAa;EAAEI;AAAW,CAAC,GAAGZ,SAAS,CAACmB,OAAO;AAC9D,eAAenB,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}